.KiraPDFLink:after{content:url(../../../images/interface-images/pdf.png);margin:0 .1rem 0 .4rem}
/*# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["../../../stylus/components/placeholders.styl","../../../stylus/components/Links/links-pdf.styl","links-pdf.css"],"names":[],"mappings":"AA4HA,mBC9FC,qDAAoD,CD+FpD,sBE3HD","file":"links-pdf.min.css","sourcesContent":["/*\n[LEARN][STYLUS] @extend:\nhttp://stylus-lang.com/docs/extend\n[INFO] Placeholder selectors:\nhttp://stylus-lang.com/docs/extend.html#extending-placeholder-selectors\n\n[NOTE] import placeholders with @extend must be in file beginning,\nimport variables must be in end of file:\nhttps://stackoverflow.com/q/47971246/5951529\n*/\n\n/*\n[INFO] For correct gemini-scrollbar displaying, see “body tag” section:\nhttps://github.com/noeldelgado/gemini-scrollbar#notes\n\n[NOTE] Use “overflow: hidden”! If no, you will get bugs with anchors: scrollbar scroll in begin of the page.\n\n[NOTE] Both html and body must include for correct gemini-scrollbar working.\n*/\n$SashaHTMLBody\n\theight 100%\n\toverflow hidden\n\n\n/*\n[INFO] Wrap all long words:\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap\n\n[NOTE] “overflow-wrap break-word” doesn't work in iOS.\n“word-break break all” works for all browsers:\nhttps://webref.ru/css/word-break\n\n[NOTE] Don’t use universal selector:\nhttps://www.npmjs.com/package/stylint#universal--default-false-never--false-\n*/\n$SashaNoHorizontalScrollbar\n\toverflow-wrap break-word\n\tword-break break-all\n\n\n/*\n[INFO] Make permalinks visible on hover:\nAs https://pythonhosted.org/Markdown/extensions/toc.html page\n\n[LEARN][STYLUS] Stylus parent reference, & symbol\nhttp://stylus-lang.com/docs/selectors.html#parent-reference\n*/\n$SashaVisiblePermalinks\n\t&:hover > .KiraAnchorPermanentLink\n\t\tvisibility visible\n\n$SashaItalic\n\tfont-style italic\n\n$SashaFloatLeft\n\tfloat left\n\n$SashaFloatRight\n\tfloat right\n\n$SashaRightZero\n\tright 0\n\n$SashaTextAlignCenter\n\ttext-align center\n\n$SashaPlaceholderDisplayInline\n\tdisplay inline\n\n\n/*\n[INFO] Placeholder used for third-party id #SashaRunkit\nFor tags, that wrap iframe\n*/\n$SashaIframe\n\twidth 100%\n\tposition relative\n\toverflow hidden\n\n$SashaMargin5Rem\n\tmargin 5rem 0 0\n\n$SashaFontSizeChildLink\n\ta\n\t\tfont-size 2rem\n\n$KiraPlay\n\t/*\n\t[INFO] sans-serif:\n\thttps://google-webfonts-helper.herokuapp.com/fonts/play\n\n\t[INFO] Arial as fallback font:\n\thttps://i.imgur.com/HVsZeky.png\n\n\tGeorgia and Palatino Linotype may also be available\n\t*/\n\tfont-family Play, Arial, Helvetica, sans-serif\n\n$KiraBreakWords\n\tword-break break-all\n\n$KiraOptimalMarginLeft\n\tmargin-left 1rem\n\n/*\n[INFO] “padding-right” — italic text goes beyond container:\nhttps://stackoverflow.com/a/26297605/5951529\n*/\n$KiraKbd\n\tfont-weight bold\n\tborder-radius .1875rem\n\tpadding-right .2rem\n\n/*\n[INFO] Style of quotes in citations\n*/\n$KiraCitationsQuotes\n\tdisplay inline-block\n\tfont-size 3rem\n\tline-height 0\n\n/*\n[INFO] Margin between link and image for links to PDF files, YouTube and so on\n*/\n$KiraMarginNonTextLinks\n\tmargin 0 .1rem 0 .4rem\n\n// [INFO] margin-bottom 1.5rem ≈ 1br\n$KiraMarginBottomBr\n\tmargin-bottom 1.5rem\n\n$KiraMarginTopBr\n\tmargin-top 1.5rem\n","@import \"../placeholders.styl\"\n\n/*\n[INFO] Icon for PDF links\n\n[INFO] I don’t use style links depending on a destination.\nI may have performance issues:\nhttps://github.com/CSSLint/csslint/wiki/Disallow-selectors-that-look-like-regular-expressions#performance-issues\nhttps://stackoverflow.com/a/18378485/5951529\nhttps://css-tricks.com/snippets/css/style-links-depending-on-destination/\n\n[PURPOSE] Inform users about PDF link:\nhttps://blog.pope.tech/2018/08/09/results-icon-dictionary/#link_pdf\n\n[LICENSE] PDF.io image:\nOriginal source:\nhttps://static.123apps.com/pdf/i/fav/32.png\n\n[LEARN][GOOGLE_IMAGES]\nGoogle images has “Icon” filter, Яндекс.Картинки — no:\nhttps://webapps.stackexchange.com/a/66307/122122\n\n[NOTE] I couldn’t find the better icon in:\n1. Flaticon — https://www.flaticon.com/search?word=pdf&search-type=icons&license=selection&order_by=4&color=2&grid=big\n2. DeviantArt — https://www.deviantart.com/search?q=pdf%20icon\n3. Wikimedia Commons — https://commons.wikimedia.org/wiki/Category:PDF_icons\n4. Yandex images — https://yandex.ru/images/search?text=pdf%20icon&isize=small&icolor=color\n*/\n.KiraPDFLink:after\n\t@extend $KiraMarginNonTextLinks\n\tcontent url(../../../images/interface-images/pdf.png)\n",".KiraPDFLink:after {\n  margin: 0 0.1rem 0 0.4rem;\n}\n/*\n[INFO] Icon for PDF links\n\n[INFO] I don’t use style links depending on a destination.\nI may have performance issues:\nhttps://github.com/CSSLint/csslint/wiki/Disallow-selectors-that-look-like-regular-expressions#performance-issues\nhttps://stackoverflow.com/a/18378485/5951529\nhttps://css-tricks.com/snippets/css/style-links-depending-on-destination/\n\n[PURPOSE] Inform users about PDF link:\nhttps://blog.pope.tech/2018/08/09/results-icon-dictionary/#link_pdf\n\n[LICENSE] PDF.io image:\nOriginal source:\nhttps://static.123apps.com/pdf/i/fav/32.png\n\n[LEARN][GOOGLE_IMAGES]\nGoogle images has “Icon” filter, Яндекс.Картинки — no:\nhttps://webapps.stackexchange.com/a/66307/122122\n\n[NOTE] I couldn’t find the better icon in:\n1. Flaticon — https://www.flaticon.com/search?word=pdf&search-type=icons&license=selection&order_by=4&color=2&grid=big\n2. DeviantArt — https://www.deviantart.com/search?q=pdf%20icon\n3. Wikimedia Commons — https://commons.wikimedia.org/wiki/Category:PDF_icons\n4. Yandex images — https://yandex.ru/images/search?text=pdf%20icon&isize=small&icolor=color\n*/\n.KiraPDFLink:after {\n  content: url(\"../../../images/interface-images/pdf.png\");\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3N0eWx1cy9jb21wb25lbnRzL3BsYWNlaG9sZGVycy5zdHlsIiwiLi4vLi4vLi4vc3R5bHVzL2NvbXBvbmVudHMvTGlua3MvbGlua3MtcGRmLnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEhBO0VBQ0MsUUFBTyxrQkFBUDs7QUMzSEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBO0VBRUMsU0FBb0QsZ0RBQXBEIiwiZmlsZSI6ImxpbmtzLXBkZi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuW0xFQVJOXVtTVFlMVVNdIEBleHRlbmQ6XG5odHRwOi8vc3R5bHVzLWxhbmcuY29tL2RvY3MvZXh0ZW5kXG5bSU5GT10gUGxhY2Vob2xkZXIgc2VsZWN0b3JzOlxuaHR0cDovL3N0eWx1cy1sYW5nLmNvbS9kb2NzL2V4dGVuZC5odG1sI2V4dGVuZGluZy1wbGFjZWhvbGRlci1zZWxlY3RvcnNcblxuW05PVEVdIGltcG9ydCBwbGFjZWhvbGRlcnMgd2l0aCBAZXh0ZW5kIG11c3QgYmUgaW4gZmlsZSBiZWdpbm5pbmcsXG5pbXBvcnQgdmFyaWFibGVzIG11c3QgYmUgaW4gZW5kIG9mIGZpbGU6XG5odHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3EvNDc5NzEyNDYvNTk1MTUyOVxuKi9cblxuLypcbltJTkZPXSBGb3IgY29ycmVjdCBnZW1pbmktc2Nyb2xsYmFyIGRpc3BsYXlpbmcsIHNlZSDigJxib2R5IHRhZ+KAnSBzZWN0aW9uOlxuaHR0cHM6Ly9naXRodWIuY29tL25vZWxkZWxnYWRvL2dlbWluaS1zY3JvbGxiYXIjbm90ZXNcblxuW05PVEVdIFVzZSDigJxvdmVyZmxvdzogaGlkZGVu4oCdISBJZiBubywgeW91IHdpbGwgZ2V0IGJ1Z3Mgd2l0aCBhbmNob3JzOiBzY3JvbGxiYXIgc2Nyb2xsIGluIGJlZ2luIG9mIHRoZSBwYWdlLlxuXG5bTk9URV0gQm90aCBodG1sIGFuZCBib2R5IG11c3QgaW5jbHVkZSBmb3IgY29ycmVjdCBnZW1pbmktc2Nyb2xsYmFyIHdvcmtpbmcuXG4qL1xuJFNhc2hhSFRNTEJvZHlcblx0aGVpZ2h0IDEwMCVcblx0b3ZlcmZsb3cgaGlkZGVuXG5cblxuLypcbltJTkZPXSBXcmFwIGFsbCBsb25nIHdvcmRzOlxuaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL292ZXJmbG93LXdyYXBcblxuW05PVEVdIOKAnG92ZXJmbG93LXdyYXAgYnJlYWstd29yZOKAnSBkb2Vzbid0IHdvcmsgaW4gaU9TLlxu4oCcd29yZC1icmVhayBicmVhayBhbGzigJ0gd29ya3MgZm9yIGFsbCBicm93c2Vyczpcbmh0dHBzOi8vd2VicmVmLnJ1L2Nzcy93b3JkLWJyZWFrXG5cbltOT1RFXSBEb27igJl0IHVzZSB1bml2ZXJzYWwgc2VsZWN0b3I6XG5odHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9zdHlsaW50I3VuaXZlcnNhbC0tZGVmYXVsdC1mYWxzZS1uZXZlci0tZmFsc2UtXG4qL1xuJFNhc2hhTm9Ib3Jpem9udGFsU2Nyb2xsYmFyXG5cdG92ZXJmbG93LXdyYXAgYnJlYWstd29yZFxuXHR3b3JkLWJyZWFrIGJyZWFrLWFsbFxuXG5cbi8qXG5bSU5GT10gTWFrZSBwZXJtYWxpbmtzIHZpc2libGUgb24gaG92ZXI6XG5BcyBodHRwczovL3B5dGhvbmhvc3RlZC5vcmcvTWFya2Rvd24vZXh0ZW5zaW9ucy90b2MuaHRtbCBwYWdlXG5cbltMRUFSTl1bU1RZTFVTXSBTdHlsdXMgcGFyZW50IHJlZmVyZW5jZSwgJiBzeW1ib2xcbmh0dHA6Ly9zdHlsdXMtbGFuZy5jb20vZG9jcy9zZWxlY3RvcnMuaHRtbCNwYXJlbnQtcmVmZXJlbmNlXG4qL1xuJFNhc2hhVmlzaWJsZVBlcm1hbGlua3Ncblx0Jjpob3ZlciA+IC5LaXJhQW5jaG9yUGVybWFuZW50TGlua1xuXHRcdHZpc2liaWxpdHkgdmlzaWJsZVxuXG4kU2FzaGFJdGFsaWNcblx0Zm9udC1zdHlsZSBpdGFsaWNcblxuJFNhc2hhRmxvYXRMZWZ0XG5cdGZsb2F0IGxlZnRcblxuJFNhc2hhRmxvYXRSaWdodFxuXHRmbG9hdCByaWdodFxuXG4kU2FzaGFSaWdodFplcm9cblx0cmlnaHQgMFxuXG4kU2FzaGFUZXh0QWxpZ25DZW50ZXJcblx0dGV4dC1hbGlnbiBjZW50ZXJcblxuJFNhc2hhUGxhY2Vob2xkZXJEaXNwbGF5SW5saW5lXG5cdGRpc3BsYXkgaW5saW5lXG5cblxuLypcbltJTkZPXSBQbGFjZWhvbGRlciB1c2VkIGZvciB0aGlyZC1wYXJ0eSBpZCAjU2FzaGFSdW5raXRcbkZvciB0YWdzLCB0aGF0IHdyYXAgaWZyYW1lXG4qL1xuJFNhc2hhSWZyYW1lXG5cdHdpZHRoIDEwMCVcblx0cG9zaXRpb24gcmVsYXRpdmVcblx0b3ZlcmZsb3cgaGlkZGVuXG5cbiRTYXNoYU1hcmdpbjVSZW1cblx0bWFyZ2luIDVyZW0gMCAwXG5cbiRTYXNoYUZvbnRTaXplQ2hpbGRMaW5rXG5cdGFcblx0XHRmb250LXNpemUgMnJlbVxuXG4kS2lyYVBsYXlcblx0Lypcblx0W0lORk9dIHNhbnMtc2VyaWY6XG5cdGh0dHBzOi8vZ29vZ2xlLXdlYmZvbnRzLWhlbHBlci5oZXJva3VhcHAuY29tL2ZvbnRzL3BsYXlcblxuXHRbSU5GT10gQXJpYWwgYXMgZmFsbGJhY2sgZm9udDpcblx0aHR0cHM6Ly9pLmltZ3VyLmNvbS9IVnNaZWt5LnBuZ1xuXG5cdEdlb3JnaWEgYW5kIFBhbGF0aW5vIExpbm90eXBlIG1heSBhbHNvIGJlIGF2YWlsYWJsZVxuXHQqL1xuXHRmb250LWZhbWlseSBQbGF5LCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmXG5cbiRLaXJhQnJlYWtXb3Jkc1xuXHR3b3JkLWJyZWFrIGJyZWFrLWFsbFxuXG4kS2lyYU9wdGltYWxNYXJnaW5MZWZ0XG5cdG1hcmdpbi1sZWZ0IDFyZW1cblxuLypcbltJTkZPXSDigJxwYWRkaW5nLXJpZ2h04oCdIOKAlCBpdGFsaWMgdGV4dCBnb2VzIGJleW9uZCBjb250YWluZXI6XG5odHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjYyOTc2MDUvNTk1MTUyOVxuKi9cbiRLaXJhS2JkXG5cdGZvbnQtd2VpZ2h0IGJvbGRcblx0Ym9yZGVyLXJhZGl1cyAuMTg3NXJlbVxuXHRwYWRkaW5nLXJpZ2h0IC4ycmVtXG5cbi8qXG5bSU5GT10gU3R5bGUgb2YgcXVvdGVzIGluIGNpdGF0aW9uc1xuKi9cbiRLaXJhQ2l0YXRpb25zUXVvdGVzXG5cdGRpc3BsYXkgaW5saW5lLWJsb2NrXG5cdGZvbnQtc2l6ZSAzcmVtXG5cdGxpbmUtaGVpZ2h0IDBcblxuLypcbltJTkZPXSBNYXJnaW4gYmV0d2VlbiBsaW5rIGFuZCBpbWFnZSBmb3IgbGlua3MgdG8gUERGIGZpbGVzLCBZb3VUdWJlIGFuZCBzbyBvblxuKi9cbiRLaXJhTWFyZ2luTm9uVGV4dExpbmtzXG5cdG1hcmdpbiAwIC4xcmVtIDAgLjRyZW1cblxuLy8gW0lORk9dIG1hcmdpbi1ib3R0b20gMS41cmVtIOKJiCAxYnJcbiRLaXJhTWFyZ2luQm90dG9tQnJcblx0bWFyZ2luLWJvdHRvbSAxLjVyZW1cblxuJEtpcmFNYXJnaW5Ub3BCclxuXHRtYXJnaW4tdG9wIDEuNXJlbVxuIiwiQGltcG9ydCBcIi4uL3BsYWNlaG9sZGVycy5zdHlsXCJcblxuLypcbltJTkZPXSBJY29uIGZvciBQREYgbGlua3NcblxuW0lORk9dIEkgZG9u4oCZdCB1c2Ugc3R5bGUgbGlua3MgZGVwZW5kaW5nIG9uIGEgZGVzdGluYXRpb24uXG5JIG1heSBoYXZlIHBlcmZvcm1hbmNlIGlzc3Vlczpcbmh0dHBzOi8vZ2l0aHViLmNvbS9DU1NMaW50L2Nzc2xpbnQvd2lraS9EaXNhbGxvdy1zZWxlY3RvcnMtdGhhdC1sb29rLWxpa2UtcmVndWxhci1leHByZXNzaW9ucyNwZXJmb3JtYW5jZS1pc3N1ZXNcbmh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xODM3ODQ4NS81OTUxNTI5XG5odHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL2Nzcy9zdHlsZS1saW5rcy1kZXBlbmRpbmctb24tZGVzdGluYXRpb24vXG5cbltQVVJQT1NFXSBJbmZvcm0gdXNlcnMgYWJvdXQgUERGIGxpbms6XG5odHRwczovL2Jsb2cucG9wZS50ZWNoLzIwMTgvMDgvMDkvcmVzdWx0cy1pY29uLWRpY3Rpb25hcnkvI2xpbmtfcGRmXG5cbltMSUNFTlNFXSBQREYuaW8gaW1hZ2U6XG5PcmlnaW5hbCBzb3VyY2U6XG5odHRwczovL3N0YXRpYy4xMjNhcHBzLmNvbS9wZGYvaS9mYXYvMzIucG5nXG5cbltMRUFSTl1bR09PR0xFX0lNQUdFU11cbkdvb2dsZSBpbWFnZXMgaGFzIOKAnEljb27igJ0gZmlsdGVyLCDQr9C90LTQtdC60YEu0JrQsNGA0YLQuNC90LrQuCDigJQgbm86XG5odHRwczovL3dlYmFwcHMuc3RhY2tleGNoYW5nZS5jb20vYS82NjMwNy8xMjIxMjJcblxuW05PVEVdIEkgY291bGRu4oCZdCBmaW5kIHRoZSBiZXR0ZXIgaWNvbiBpbjpcbjEuIEZsYXRpY29uIOKAlCBodHRwczovL3d3dy5mbGF0aWNvbi5jb20vc2VhcmNoP3dvcmQ9cGRmJnNlYXJjaC10eXBlPWljb25zJmxpY2Vuc2U9c2VsZWN0aW9uJm9yZGVyX2J5PTQmY29sb3I9MiZncmlkPWJpZ1xuMi4gRGV2aWFudEFydCDigJQgaHR0cHM6Ly93d3cuZGV2aWFudGFydC5jb20vc2VhcmNoP3E9cGRmJTIwaWNvblxuMy4gV2lraW1lZGlhIENvbW1vbnMg4oCUIGh0dHBzOi8vY29tbW9ucy53aWtpbWVkaWEub3JnL3dpa2kvQ2F0ZWdvcnk6UERGX2ljb25zXG40LiBZYW5kZXggaW1hZ2VzIOKAlCBodHRwczovL3lhbmRleC5ydS9pbWFnZXMvc2VhcmNoP3RleHQ9cGRmJTIwaWNvbiZpc2l6ZT1zbWFsbCZpY29sb3I9Y29sb3JcbiovXG4uS2lyYVBERkxpbms6YWZ0ZXJcblx0QGV4dGVuZCAkS2lyYU1hcmdpbk5vblRleHRMaW5rc1xuXHRjb250ZW50IHVybCguLi8uLi8uLi9pbWFnZXMvaW50ZXJmYWNlLWltYWdlcy9wZGYucG5nKVxuIl19 */"]} */
