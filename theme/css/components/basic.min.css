h2:hover>.KiraAnchorPermanentLink,h3:hover>.KiraAnchorPermanentLink,h4:hover>.KiraAnchorPermanentLink,h5:hover>.KiraAnchorPermanentLink,h6:hover>.KiraAnchorPermanentLink{visibility:visible}ol>li,ul>li{margin-left:1rem}kbd{border-radius:.1875rem;font-weight:700;padding-right:.2rem}body{font-family:Arial,Helvetica,sans-serif;font-size:1.1875rem}a{text-decoration:none}a:focus{outline:0}.KiraAnchorPermanentLink{visibility:hidden}ol,ul{padding-left:.7rem}img{height:auto;margin:0 auto;max-width:100%}
/*# sourceMappingURL=data:application/json;base64, */
