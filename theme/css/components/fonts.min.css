.SashaAsideBottomText,.SashaButtonCategory,.SashaCategory,h1{font-family:Play,Arial,Helvetica,sans-serif;font-size:1.9375rem;font-weight:700}h2{font-family:Scada,Arial,Helvetica,sans-serif;font-size:1.9375rem;font-style:normal}a{font-family:El Messiri,Arial,Helvetica,sans-serif;font-size:1.3rem;font-style:italic;font-weight:700}.SashaWorkOnYourself{font-family:Marck Script,Brush Script MT,cursive;font-size:3.5625rem;margin-bottom:1rem}
/*# sourceMappingURL=data:application/json;base64, */
