img[data-lazy-src]{will-change:contents}div#hg-bg{background-color:#daa52082}div#hg-bg:after{background-image:url(../../images/interface-images/hes-gallery/close.png);height:2.5rem;right:1.25rem;top:1.25rem;width:2.5rem}div#hg-howmany{bottom:-2rem;color:#ffefd5;font-size:1.2rem}div#hgallery button{z-index:inherit}div#hgallery button img{box-shadow:none;content:url(../../images/interface-images/hes-gallery/right-arrow.png);height:80%;opacity:.4;width:90%}div#hgallery button img:hover{opacity:1}img#hg-pic{max-height:85vh;min-height:0;min-width:0}
/*# sourceMappingURL=data:application/json;base64, */
