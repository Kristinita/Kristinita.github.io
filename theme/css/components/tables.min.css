table{width:100%}td,th{padding:.5rem;border-style:solid}@media screen and (orientation:landscape){td{overflow-wrap:break-word;word-break:break-all}}@media screen and (orientation:portrait){td{border-width:0 medium;display:block}td:first-child{margin-top:1.875rem;border-top-width:medium}td:last-child{border-bottom-width:medium}thead tr{position:absolute;top:-624.938rem;left:-624.938rem}}
/*# sourceMappingURL=data:application/json;base64, */
