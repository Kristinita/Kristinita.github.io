.KiraSlider{height:33.5625rem;margin:2rem auto;position:relative;width:50.4375rem}.KiraSlider>div{animation:kira-fade-slideshow 35s infinite;background-repeat:no-repeat;background-size:contain;height:100%;opacity:0;position:absolute;width:100%}.KiraSlider>div:nth-child(2){animation-delay:5s}.KiraSlider>div:nth-child(3){animation-delay:10s}.KiraSlider>div:nth-child(4){animation-delay:15s}.KiraSlider>div:nth-child(5){animation-delay:20s}.KiraSlider>div:nth-child(6){animation-delay:25s}.KiraSlider>div:nth-child(7){animation-delay:30s}@keyframes kira-fade-slideshow{10%{opacity:1}20%{opacity:1}30%{opacity:0}}@media screen and (orientation:landscape){.KiraSlider{max-width:50%}}@media screen and (orientation:portrait){.KiraSlider{max-width:96%}}
/*# sourceMappingURL=data:application/json;base64, */
