pre{overflow-wrap:break-word;word-break:break-all;position:relative;white-space:pre-wrap;padding:.5rem;tab-size:4}:root{--balloon-font-size:1.1rem;--balloon-text-color:#ffefd5}.SashaButton{--balloon-color:brown}.SashaClick{--balloon-color:green}[aria-label][data-balloon-pos]:after{font-weight:700}
/*# sourceMappingURL=data:application/json;base64, */
