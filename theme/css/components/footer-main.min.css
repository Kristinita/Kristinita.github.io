.SashaFooterActions{font-style:italic;margin:1rem 0 0}.SashaNeighborsMainPageLeft,.SashaNeighborsPreviousPage{float:left}.SashaNeighborsMainPageRight,.SashaNeighborsNextPage{float:right}.SashaNeighborsMainPageLeft,.SashaNeighborsMainPageRight,.SashaNeighborsNextPage,.SashaNeighborsPreviousPage,.SashaWorkOnYourself{margin:5rem 0 0}.SashaNeighborsMainPageLeft a,.SashaNeighborsMainPageRight a,.SashaNeighborsNextPage a,.SashaNeighborsPreviousPage a{font-size:2rem}.KiraNeighborsClearfix:after{clear:both;content:"";display:block;height:0;visibility:hidden}
/*# sourceMappingURL=data:application/json;base64, */
