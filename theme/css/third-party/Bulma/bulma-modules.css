/* ==========================================================================
	> Bulma
	========================================================================== */
/* [INFO] Bulma modular usage syntax:
https://bulma.io/documentation/overview/modular/

[REQUIRED] “utilities/_all”.
Otherwise Stylus compile Stylus to CSS incorrectly */
/* Bulma Utilities */
@-moz-keyframes spinAround {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(359deg);
	}
}
@-webkit-keyframes spinAround {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(359deg);
	}
}
@-o-keyframes spinAround {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(359deg);
	}
}
@keyframes spinAround {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(359deg);
	}
}
.navbar-link:not(.is-arrowless)::after {
	border: 3px solid transparent;
	border-radius: 2px;
	border-right: 0;
	border-top: 0;
	content: " ";
	display: block;
	height: 0.625em;
	margin-top: -0.4375em;
	pointer-events: none;
	position: absolute;
	top: 50%;
	transform: rotate(-45deg);
	transform-origin: center;
	width: 0.625em;
}
/* [INFO] Bulma usage for navbar:
https://bulma.io/documentation/components/navbar/ */
.navbar {
	background-color: #fff;
	min-height: 3.25rem;
	position: relative;
	z-index: 30;
}
.navbar-brand {
	align-items: stretch;
	display: flex;
	flex-shrink: 0;
	min-height: 3.25rem;
}
.navbar-brand a.navbar-item:focus,
.navbar-brand a.navbar-item:hover {
	background-color: transparent;
}
.navbar-burger {
	color: #4a4a4a;
	cursor: pointer;
	display: block;
	height: 3.25rem;
	position: relative;
	width: 3.25rem;
	margin-left: auto;
}
.navbar-burger span {
	background-color: currentColor;
	display: block;
	height: 1px;
	left: calc(50% - 8px);
	position: absolute;
	transform-origin: center;
	transition-duration: 86ms;
	transition-property: background-color, opacity, transform;
	transition-timing-function: ease-out;
	width: 16px;
}
.navbar-burger span:nth-child(1) {
	top: calc(50% - 6px);
}
.navbar-burger span:nth-child(2) {
	top: calc(50% - 1px);
}
.navbar-burger span:nth-child(3) {
	top: calc(50% + 4px);
}
.navbar-burger:hover {
	background-color: rgba(0,0,0,0.05);
}
.navbar-menu {
	display: none;
}
.navbar-item,
.navbar-link {
	color: #4a4a4a;
	display: block;
	line-height: 1.5;
	padding: 0.5rem 0.75rem;
	position: relative;
}
.navbar-item .icon:only-child,
.navbar-link .icon:only-child {
	margin-left: -0.25rem;
	margin-right: -0.25rem;
}
a.navbar-item,
.navbar-link {
	cursor: pointer;
}
a.navbar-item:focus,
.navbar-link:focus,
a.navbar-item:focus-within,
.navbar-link:focus-within,
a.navbar-item:hover,
.navbar-link:hover {
	background-color: #fafafa;
	color: #3273dc;
}
.navbar-item {
	flex-grow: 0;
	flex-shrink: 0;
}
.navbar-item img {
	max-height: 1.75rem;
}
.navbar-item.has-dropdown {
	padding: 0;
}
.navbar-link:not(.is-arrowless) {
	padding-right: 2.5em;
}
.navbar-link:not(.is-arrowless)::after {
	border-color: #3273dc;
	margin-top: -0.375em;
	right: 1.125em;
}
.navbar-dropdown {
	font-size: 0.875rem;
	padding-bottom: 0.5rem;
	padding-top: 0.5rem;
}
.navbar-dropdown .navbar-item {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}
@media screen and (max-width: 1023px) {
	.navbar-brand .navbar-item {
		align-items: center;
		display: flex;
	}
	.navbar-link::after {
		display: none;
	}
	.navbar-menu {
		background-color: #fff;
		box-shadow: 0 8px 16px rgba(10,10,10,0.1);
		padding: 0.5rem 0;
	}
}
@media screen and (min-width: 1024px) {
	.navbar,
	.navbar-menu,
	.navbar-start,
	.navbar-end {
		align-items: stretch;
		display: flex;
	}
	.navbar {
		min-height: 3.25rem;
	}
	.navbar-burger {
		display: none;
	}
	.navbar-item,
	.navbar-link {
		align-items: center;
		display: flex;
	}
	.navbar-item.has-dropdown {
		align-items: stretch;
	}

	.navbar-item.is-hoverable:focus .navbar-dropdown,
	.navbar-item.is-hoverable:focus-within .navbar-dropdown,
	.navbar-item.is-hoverable:hover .navbar-dropdown {
		display: block;
	}
	.navbar-menu {
		flex-grow: 1;
		flex-shrink: 0;
	}
	.navbar-start {
		justify-content: flex-start;
		margin-right: auto;
	}
	.navbar-end {
		justify-content: flex-end;
		margin-left: auto;
	}
	.navbar-dropdown {
		background-color: #fff;
		border-bottom-left-radius: 6px;
		border-bottom-right-radius: 6px;
		border-top: 2px solid #dbdbdb;
		box-shadow: 0 8px 8px rgba(10,10,10,0.1);
		display: none;
		font-size: 0.875rem;
		left: 0;
		min-width: 100%;
		position: absolute;
		top: 100%;
		z-index: 20;
	}
	.navbar-dropdown .navbar-item {
		padding: 0.375rem 1rem;
		white-space: nowrap;
	}
	.navbar-dropdown a.navbar-item {
		padding-right: 3rem;
	}
	.navbar-dropdown a.navbar-item:focus,
	.navbar-dropdown a.navbar-item:hover {
		background-color: #f5f5f5;
		color: #0a0a0a;
	}
	.navbar-dropdown.is-right {
		left: auto;
		right: 0;
	}
	.navbar-item.has-dropdown:focus .navbar-link,
	.navbar-item.has-dropdown:hover .navbar-link {
		background-color: #fafafa;
	}
}
/* [INFO] Bulma usage for tags:
https://bulma.io/documentation/elements/tag/ */
.tags {
	align-items: center;
	display: flex;
	flex-wrap: wrap;
	justify-content: flex-start;
}
.tags .tag {
	margin-bottom: 0.5rem;
}
.tags .tag:not(:last-child) {
	margin-right: 0.5rem;
}
.tags:last-child {
	margin-bottom: -0.5rem;
}
.tags:not(:last-child) {
	margin-bottom: 1rem;
}
.tags.are-medium .tag:not(.is-normal):not(.is-large) {
	font-size: 1rem;
}
.tags.is-right {
	justify-content: flex-end;
}
.tags.is-right .tag:not(:first-child) {
	margin-left: 0.5rem;
}
.tags.is-right .tag:not(:last-child) {
	margin-right: 0;
}
.tag:not(body) {
	align-items: center;
	background-color: #f5f5f5;
	border-radius: 4px;
	color: #4a4a4a;
	display: inline-flex;
	font-size: 0.75rem;
	height: 2em;
	justify-content: center;
	line-height: 1.5;
	padding-left: 0.75em;
	padding-right: 0.75em;
	white-space: nowrap;
}
.tag:not(body) .delete {
	margin-left: 0.25rem;
	margin-right: -0.375rem;
}
.tag:not(body) .icon:first-child:not(:last-child) {
	margin-left: -0.375em;
	margin-right: 0.1875em;
}
.tag:not(body) .icon:last-child:not(:first-child) {
	margin-left: 0.1875em;
	margin-right: -0.375em;
}
.tag:not(body) .icon:first-child:last-child {
	margin-left: -0.375em;
	margin-right: -0.375em;
}
.tag:not(body).is-rounded {
	border-radius: 290486px;
}
a.tag:hover {
	text-decoration: underline;
}
/*# sourceMappingURL=data:application/json;base64, */
