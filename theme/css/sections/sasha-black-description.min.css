body{background:#000;color:#ff8c00}a{color:violet}a:hover{background-color:rgba(221,160,221,.6)}a:focus{background:#f0fff0}em{color:#ff69b4}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{color:#ffefd5;background:#d2691e}td,th{border-color:#ff8c00}.SashaBottomAside{color:#fff;bottom:14%}blockquote{border-left:.5rem solid #ff5a00;color:#333;background:#fcfcfc}blockquote>p>em{color:#ff1493}blockquote>p>a{color:#8b008b}::selection{color:hsla(0,79%,72%,.467);background:rgba(255,228,181,.99)}div.a2a_floating_style{background-color:orange}div.animate-flicker span{color:silver}div.ivu-modal-body .ivu-btn.ivu-btn-text.ivu-btn-small,div.ivu-modal-body div.ivu-tabs-tabpane div.wf-meta,div.ivu-modal-body div.wf-buttons .ivu-btn.ivu-btn-text{color:brown}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .ivu-btn-text,div.wf.wf-theme-dark .ivu-btn-text:hover,div.wf.wf-theme-dark .ivu-btn-text[disabled],div.wf.wf-theme-dark .ivu-btn-text[disabled]:hover,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at.wf-inactive,div.wf.wf-theme-dark .ivu-input-wrapper textarea.ivu-input,div.wf.wf-theme-dark .ivu-input::placeholder,div.wf.wf-theme-dark .ivu-menu,div.wf.wf-theme-dark .ivu-menu-item-selected span,div.wf.wf-theme-dark .ivu-menu-submenu-title-icon,div.wf.wf-theme-dark .wf-comment-body .wf-comment-footer a,div.wf.wf-theme-dark .wf-comment-content,div.wf.wf-theme-dark .wf-comment-header .wf-content .wf-meta,div.wf.wf-theme-dark .wf-comment-item .wf-comment-header,div.wf.wf-theme-dark .wf-delete-btn.ivu-btn.ivu-btn-text,div.wf.wf-theme-dark .wf-no-content-tip,div.wf.wf-theme-dark .wf-post-btn[disabled]:hover,div.wf.wf-theme-dark .wf-separator,div.wf.wf-theme-dark :not(.v-transfer-dom) a,div.wf.wf-theme-dark :not(.v-transfer-dom) a:hover,div.wf.wf-theme-dark a.wf-use-wildfire:hover span,div.wf.wf-theme-dark a.wf-use-wildfire span{color:silver}div.wf.wf-theme-dark .wf-use-wildfire:hover svg path,div.wf.wf-theme-dark .wf-use-wildfire svg path{fill:silver}div.wf.wf-theme-dark .ivu-menu-horizontal.ivu-menu-light:after{background-color:silver}div.wf.wf-theme-dark>footer{border-top-color:silver}div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active,div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active:hover{border-bottom-color:silver}div.wf.wf-theme-dark input.ivu-input::placeholder{color:#696969}div.wf.wf-theme-dark .ivu-icon-heart-broken{color:violet}div.wf.wf-theme-dark .ivu-icon-heart{color:#dc143c}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{background-color:hsla(0,0%,100%,.2)}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{border-color:silver}div.wf.wf-theme-dark .wf-tip{font-size:.7rem}.SashaBlockHighlight{background-color:#5e3b47;color:#fff}.SashaBlockHighlight .c{background-color:#0f140f;font-style:italic;color:#7cfc00}.SashaBlockHighlight .k{color:#fb660a;font-weight:700}.SashaBlockHighlight .o{color:#fff}.SashaBlockHighlight .p{color:#f4a460}.SashaBlockHighlight .ld{color:#fff}.SashaBlockHighlight .m{color:#00bfff;font-weight:700}.SashaBlockHighlight .s{color:#87ceeb}.SashaBlockHighlight .nb{color:#fff}.SashaBlockHighlight .no{color:#87ceeb}.SashaBlockHighlight .nl,.SashaBlockHighlight .py{color:#fff}.SashaBlockHighlight .nv{color:#f4a460}.SashaBlockHighlight .s1,.SashaBlockHighlight .s2,.SashaBlockHighlight .se,.SashaBlockHighlight .sh{color:#87ceeb}
/*# sourceMappingURL=data:application/json;base64, */
