body{background:#f3efd6;color:#738e8b}a{color:#bc8475}a:hover{background-color:#eee8aa}a:focus{background:#f0fff0}em{color:#f08080}img{box-shadow:0 0 2rem #000}.SashaNoShadowsImage{box-shadow:none;min-width:2rem}.SashaPageLoading{box-shadow:none;display:none}kbd{color:#fff5ee;background:#6495ed}hr{color:#c71585}td,th{border:.0625rem solid #738e8b}.SashaBottomAside{color:#fff;bottom:8%}blockquote{border-left:.5rem solid #dc143c;color:#bc8f8f;background:#faebd7}blockquote>p>em{color:#f08080}.SashaBlockquote{border-color:#7b68ee;background-color:#ffdab9;color:#191970}.SashaCitation{color:salmon}.SashaEpigraph{color:#20b2aa}.SashaEpigraph>.SashaEpigraphAuthor{color:#ba55d3}.SashaEpigraph>em{color:#db7093}.SashaGingerinasExample{background-color:#d0f0c0}.SashaGingerinasBadExample{background-color:hsla(0,79%,72%,.569);color:#dc143c}::selection{color:#f08080;background:rgba(255,228,181,.99)}.progress{background-color:#f3efd6;display:block;width:100%;margin:.5rem 0;height:1.2rem;position:relative}.progress-bar{background-color:#000;height:1.2rem;float:left}.progress-label{color:#696969;position:absolute;text-align:center;font-weight:700;width:100%;margin:0;line-height:1.2rem;white-space:nowrap;overflow:hidden}.progress-0plus .progress-bar{background-color:olive}.progress-10plus .progress-bar{background-color:#9370db}.progress-20plus .progress-bar{background-color:peru}.progress-30plus .progress-bar{background-color:#db7093}.progress-60plus .progress-bar{background-color:#90ee90}div.a2a_floating_style{background-color:#87cefa}div.animate-flicker span{color:#1e90ff}div.ivu-modal-body .ivu-btn.ivu-btn-text.ivu-btn-small,div.ivu-modal-body div.ivu-tabs-tabpane div.wf-meta,div.ivu-modal-body div.wf-buttons .ivu-btn.ivu-btn-text{color:brown}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .ivu-btn-text,div.wf.wf-theme-dark .ivu-btn-text:hover,div.wf.wf-theme-dark .ivu-btn-text[disabled],div.wf.wf-theme-dark .ivu-btn-text[disabled]:hover,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at.wf-inactive,div.wf.wf-theme-dark .ivu-input-wrapper textarea.ivu-input,div.wf.wf-theme-dark .ivu-input::placeholder,div.wf.wf-theme-dark .ivu-menu,div.wf.wf-theme-dark .ivu-menu-item-selected span,div.wf.wf-theme-dark .ivu-menu-submenu-title-icon,div.wf.wf-theme-dark .wf-comment-body .wf-comment-footer a,div.wf.wf-theme-dark .wf-comment-content,div.wf.wf-theme-dark .wf-comment-header .wf-content .wf-meta,div.wf.wf-theme-dark .wf-comment-item .wf-comment-header,div.wf.wf-theme-dark .wf-delete-btn.ivu-btn.ivu-btn-text,div.wf.wf-theme-dark .wf-no-content-tip,div.wf.wf-theme-dark .wf-post-btn[disabled]:hover,div.wf.wf-theme-dark .wf-separator,div.wf.wf-theme-dark :not(.v-transfer-dom) a,div.wf.wf-theme-dark :not(.v-transfer-dom) a:hover,div.wf.wf-theme-dark a.wf-use-wildfire:hover span,div.wf.wf-theme-dark a.wf-use-wildfire span{color:#1e90ff}div.wf.wf-theme-dark .wf-use-wildfire:hover svg path,div.wf.wf-theme-dark .wf-use-wildfire svg path{fill:#1e90ff}div.wf.wf-theme-dark .ivu-menu-horizontal.ivu-menu-light:after{background-color:#1e90ff}div.wf.wf-theme-dark>footer{border-top-color:#1e90ff}div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active,div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active:hover{border-bottom-color:#1e90ff}div.wf.wf-theme-dark input.ivu-input::placeholder{color:#696969}div.wf.wf-theme-dark .ivu-icon-heart-broken{color:#00008b}div.wf.wf-theme-dark .ivu-icon-heart{color:#dc143c}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{background-color:#f0f8ff}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{border-color:#1e90ff}div.wf.wf-theme-dark .wf-tip{font-size:.7rem}.SashaBlockHighlight,.SashaInlineHighlight{background-color:#e7e9db;color:#cd5c5c}.SashaBlockHighlight .c,.SashaInlineHighlight .c{background-color:#e7e9db;font-style:italic;color:#8d8687}.SashaBlockHighlight .k,.SashaInlineHighlight .k{color:#815ba4;font-weight:700}.SashaBlockHighlight .n,.SashaInlineHighlight .n{color:#cd5c5c}.SashaBlockHighlight .o,.SashaInlineHighlight .o{color:#5bc4bf}.SashaBlockHighlight .x,.SashaInlineHighlight .x{color:#fff}.SashaBlockHighlight .p,.SashaInlineHighlight .p{color:#2f1e2e}.SashaBlockHighlight .ch,.SashaInlineHighlight .ch{color:green;background-color:#e7e9db;font-style:italic}.SashaBlockHighlight .go,.SashaInlineHighlight .go{color:#444;background-color:#e7e9db}.SashaBlockHighlight .gt,.SashaInlineHighlight .gt{color:#fff}.SashaBlockHighlight .ld,.SashaInlineHighlight .ld{color:#48b685}.SashaBlockHighlight .m,.SashaInlineHighlight .m{color:#f99b15;font-weight:700}.SashaBlockHighlight .s,.SashaInlineHighlight .s{color:#48b685}.SashaBlockHighlight .no,.SashaInlineHighlight .no{color:#ef6155}.SashaBlockHighlight .nl,.SashaBlockHighlight .py,.SashaBlockHighlight .w,.SashaInlineHighlight .nl,.SashaInlineHighlight .py,.SashaInlineHighlight .w{color:#2f1e2e}.SashaBlockHighlight .sa,.SashaInlineHighlight .sa{color:#87ceeb}.SashaBlockHighlight .s2,.SashaInlineHighlight .s2{color:#48b685}.SashaBlockHighlight .se,.SashaInlineHighlight .se{color:#f99b15}.SashaBlockHighlight .sh,.SashaInlineHighlight .sh{color:#48b685}.SashaBlockHighlight .si,.SashaInlineHighlight .si{color:#f99b15}.SashaBlockHighlight .s1,.SashaInlineHighlight .s1{color:#48b685}.SashaBlockHighlight .il,.SashaInlineHighlight .il{color:#f99b15;font-weight:700}
/*# sourceMappingURL=data:application/json;base64, */
