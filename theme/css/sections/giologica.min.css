body{background:bisque;color:#c41e3a}a{color:#c71585}a:hover{background-color:#d8bfd8}a:focus{background:#f0fff0}em{color:#556b2f}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{color:ivory;background:#5f9ea0}hr{color:#c71585}td,th{border-color:#c41e3a}.SashaBottomAside{color:#fff;bottom:8%}blockquote{border-left:.5rem solid #ff5a00;color:#333;background:#fcfcfc}blockquote>p>em{color:#556b2f}blockquote>p>a{color:Sasha-Blockquote-Link}.SashaBlockquote{border-color:#7b68ee;background-color:#ffdab9;color:#191970}.SashaBlockquote>p>em{color:Sasha-Term-Blockquote-Em}.SashaBlockquote>p>a{color:Sasha-Term-Blockquote-Link}::selection{color:#f08080;background:rgba(255,228,181,.99)}.KiraGRights{color:#00008b;background:salmon}div.a2a_floating_style{background-color:#deb887}div.animate-flicker span{color:#639}div.ivu-modal-body .ivu-btn.ivu-btn-text.ivu-btn-small,div.ivu-modal-body div.ivu-tabs-tabpane div.wf-meta,div.ivu-modal-body div.wf-buttons .ivu-btn.ivu-btn-text{color:brown}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .ivu-btn-text,div.wf.wf-theme-dark .ivu-btn-text:hover,div.wf.wf-theme-dark .ivu-btn-text[disabled],div.wf.wf-theme-dark .ivu-btn-text[disabled]:hover,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at.wf-inactive,div.wf.wf-theme-dark .ivu-input-wrapper textarea.ivu-input,div.wf.wf-theme-dark .ivu-input::placeholder,div.wf.wf-theme-dark .ivu-menu,div.wf.wf-theme-dark .ivu-menu-item-selected span,div.wf.wf-theme-dark .ivu-menu-submenu-title-icon,div.wf.wf-theme-dark .wf-comment-body .wf-comment-footer a,div.wf.wf-theme-dark .wf-comment-content,div.wf.wf-theme-dark .wf-comment-header .wf-content .wf-meta,div.wf.wf-theme-dark .wf-comment-item .wf-comment-header,div.wf.wf-theme-dark .wf-delete-btn.ivu-btn.ivu-btn-text,div.wf.wf-theme-dark .wf-no-content-tip,div.wf.wf-theme-dark .wf-post-btn[disabled]:hover,div.wf.wf-theme-dark .wf-separator,div.wf.wf-theme-dark :not(.v-transfer-dom) a,div.wf.wf-theme-dark :not(.v-transfer-dom) a:hover,div.wf.wf-theme-dark a.wf-use-wildfire:hover span,div.wf.wf-theme-dark a.wf-use-wildfire span{color:#639}div.wf.wf-theme-dark .wf-use-wildfire:hover svg path,div.wf.wf-theme-dark .wf-use-wildfire svg path{fill:#639}div.wf.wf-theme-dark .ivu-menu-horizontal.ivu-menu-light:after{background-color:#639}div.wf.wf-theme-dark>footer{border-top-color:#639}div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active,div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active:hover{border-bottom-color:#639}div.wf.wf-theme-dark input.ivu-input::placeholder{color:#696969}div.wf.wf-theme-dark .ivu-icon-heart-broken{color:#ffa07a}div.wf.wf-theme-dark .ivu-icon-heart{color:gold}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{background-color:#ffe4e1}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{border-color:#639}div.wf.wf-theme-dark .wf-tip{font-size:.7rem}
/*# sourceMappingURL=data:application/json;base64, */
