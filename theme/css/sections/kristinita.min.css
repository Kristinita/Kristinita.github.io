.SashaBeta,.SashaCopyright,.SashaKristinita,.SashaVKontakte{display:inline}body{padding-right:0;background-color:#ffefd5;color:#c71585}a{text-decoration:none}html{overflow-x:hidden}img{max-width:100%}.SashaPageLoading{box-shadow:none;display:none}.Sasha{font:1.6875rem Tahoma,Geneva,sans-serif;font-weight:700;float:right;text-align:center;text-decoration:none}.Sasha,.Sasha:hover{padding:.6875rem 2rem;color:#ff8c00;border:.25rem solid #ffb6c1;border-radius:.875rem;background-color:#ffe4e1;box-shadow:0 0 .125rem #bababa,inset 0 0 .0625rem #fff}.Sasha:hover{font:2.25rem Tahoma,Geneva,sans-serif;font-weight:700;background-position:0 -2rem}.Sasha:active{font:2.25rem Tahoma,Geneva,sans-serif;font-weight:700;color:violet;border:.25rem solid #ffb6c1;border-radius:.875rem;background-color:#ffe4e1;background-position:0 -4rem}.Chernykh,.Sasha:active{padding:.6875rem 2rem;box-shadow:0 0 .125rem #bababa,inset 0 0 .0625rem #fff}.Chernykh{font:1.6875rem Tahoma,Geneva,sans-serif;font-weight:700;float:right;text-align:center;text-decoration:none;color:#ff8c00;border:.25rem solid bisque;border-radius:.875rem;background-color:#fdf5e6}.Chernykh:hover{color:#ff8c00}.Chernykh:active,.Chernykh:hover{font:2.25rem Tahoma,Geneva,sans-serif;font-weight:700;padding:.6875rem 2rem;border:.25rem solid bisque;border-radius:.875rem;background-color:#f5fffa;box-shadow:0 0 .125rem #bababa,inset 0 0 .0625rem #fff}.Chernykh:active{color:#add8e6}.Empress{font:1.6875rem Tahoma,Geneva,sans-serif;font-weight:700;float:right;padding:.6875rem 2rem;text-align:center;text-decoration:none;color:#ff8c00;border:.25rem solid #ba55d8;border-radius:.875rem;background-color:plum;box-shadow:0 0 .125rem #bababa,inset 0 0 .0625rem #fff}.Empress:hover{color:#ff8c00}.Empress:active,.Empress:hover{font:2.25rem Tahoma,Geneva,sans-serif;font-weight:700;padding:.6875rem 2rem;border:.25rem solid #ba55d8;border-radius:.875rem;background-color:violet;box-shadow:0 0 .125rem #bababa,inset 0 0 .0625rem #fff}.Empress:active{color:pink}.SashaMotto{font-family:Cormorant,serif;font-size:2.5rem;text-align:center;color:#7fff00}.SashaMotto:hover{text-shadow:0 0 .625rem #fff,0 0 1.25rem #fff,0 0 1.875rem #fff,0 0 2.5rem #ffefd5,0 0 4.375rem #ffefd5,0 0 5rem #ffefd5,0 0 6.25rem #ffefd5}.SashaBowserExplorer,.SashaBowserFirefox{position:relative;float:left;text-align:left;vertical-align:6rem;bottom:0;right:0;width:100%;margin:.875rem;font-size:1.2rem;font-weight:700;color:#afeeee}.SashaCenter{text-align:center;margin:21rem 0 0}.SashaKristinita{font-size:3rem;letter-spacing:.125rem;text-shadow:0 .0625rem 0 orange,0 .125rem 0 orange,0 .1875rem 0 gold,0 .25rem 0 #ffae42,0 .3125rem 0 #ffefd5,0 .375rem .0625rem rgba(0,0,0,.1),0 0 .3125rem rgba(0,0,0,.1),0 .0625rem .1875rem rgba(0,0,0,.3),0 .1875rem .3125rem rgba(0,0,0,.2),0 .3125rem .625rem rgba(0,0,0,.25),0 .625rem .625rem rgba(0,0,0,.2),0 1.25rem 1.25rem rgba(0,0,0,.15)}.SashaBeta,.SashaKristinita{font-style:italic;color:#ff8c00}.SashaBeta{font-size:2.5rem}.SashaCopyright{font-family:Palatino Linotype,Geneva,sans-serif;font-weight:700;color:gold}.SashaVKontakte{color:gold}
/*# sourceMappingURL=data:application/json;base64, */
