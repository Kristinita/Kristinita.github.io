.Sasha404,.Sasha404Description{text-align:center}body{padding:0}a{color:gold}img{margin:auto;max-width:96%}.SashaPageLoading{box-shadow:none;display:none}.Sasha404{margin-bottom:2rem;font-size:4rem;color:orange;font-weight:700;-webkit-text-stroke:.1rem red}.Sasha404Description{margin-bottom:2rem;font-size:2rem;color:#f0fff0;-webkit-text-stroke:.04rem}.KiraSlider{margin-bottom:2rem}
/*# sourceMappingURL=data:application/json;base64, */
