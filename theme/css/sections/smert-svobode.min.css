body{background:#08054e;color:#fff0f5}a{color:plum}a:hover{background-color:#eee8aa}a:focus{background:#f0fff0}em{color:#6495ed}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{color:#fff5ee;background:brown}.SashaBottomAside{color:#fff;bottom:8%}blockquote{border-left:.5rem solid #e6e6fa;color:#6a5acd;background:#fcfcfc}blockquote>p>em{color:#6495ed}blockquote>p>a{color:Sasha-Blockquote-Link}.SashaBlockquote{border-color:#ff5730;background-color:#ffdab9;color:#bf0a7c}.SashaBlockquote>p>em{color:#9b4d28}.SashaBlockquote>p>a{color:#4169e1}.SashaCitation{color:#90ee90}.SashaEpigraph{color:bisque}.SashaEpigraph>.SashaEpigraphAuthor{color:#ffb6c1}.SashaEpigraph>em{color:#ffdc33}.SashaShadow{text-shadow:0 0 .625rem #ff00de,0 0 1.25rem #ff00de,0 0 1.875rem #ff00de,0 0 2.5rem #ff00de,0 0 3.125rem #ff00de,0 0 3.75rem #ff00de}.SashaDot{border-bottom:.0625rem dotted #bf0a7c}.SashaDotLight{border-bottom:.0625rem dotted #fff8dc}.SashaSpan{color:#c71585;background-color:bisque}::selection{color:#f08080;background:rgba(255,228,181,.99)}div.a2a_floating_style{background-color:#ff1493}div.animate-flicker span{color:#d2691e}div.ivu-modal-body .ivu-btn.ivu-btn-text.ivu-btn-small,div.ivu-modal-body div.ivu-tabs-tabpane div.wf-meta,div.ivu-modal-body div.wf-buttons .ivu-btn.ivu-btn-text{color:brown}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .ivu-btn-text,div.wf.wf-theme-dark .ivu-btn-text:hover,div.wf.wf-theme-dark .ivu-btn-text[disabled],div.wf.wf-theme-dark .ivu-btn-text[disabled]:hover,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at,div.wf.wf-theme-dark .ivu-icon.ivu-icon-at.wf-inactive,div.wf.wf-theme-dark .ivu-input-wrapper textarea.ivu-input,div.wf.wf-theme-dark .ivu-input::placeholder,div.wf.wf-theme-dark .ivu-menu,div.wf.wf-theme-dark .ivu-menu-item-selected span,div.wf.wf-theme-dark .ivu-menu-submenu-title-icon,div.wf.wf-theme-dark .wf-comment-body .wf-comment-footer a,div.wf.wf-theme-dark .wf-comment-content,div.wf.wf-theme-dark .wf-comment-header .wf-content .wf-meta,div.wf.wf-theme-dark .wf-comment-item .wf-comment-header,div.wf.wf-theme-dark .wf-delete-btn.ivu-btn.ivu-btn-text,div.wf.wf-theme-dark .wf-no-content-tip,div.wf.wf-theme-dark .wf-post-btn[disabled]:hover,div.wf.wf-theme-dark .wf-separator,div.wf.wf-theme-dark :not(.v-transfer-dom) a,div.wf.wf-theme-dark :not(.v-transfer-dom) a:hover,div.wf.wf-theme-dark a.wf-use-wildfire:hover span,div.wf.wf-theme-dark a.wf-use-wildfire span{color:#d2691e}div.wf.wf-theme-dark .wf-use-wildfire:hover svg path,div.wf.wf-theme-dark .wf-use-wildfire svg path{fill:#d2691e}div.wf.wf-theme-dark .ivu-menu-horizontal.ivu-menu-light:after{background-color:#d2691e}div.wf.wf-theme-dark>footer{border-top-color:#d2691e}div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active,div.wf.wf-theme-dark .ivu-menu-light.ivu-menu-horizontal .ivu-menu-item-active:hover{border-bottom-color:#d2691e}div.wf.wf-theme-dark input.ivu-input::placeholder{color:#696969}div.wf.wf-theme-dark .ivu-icon-heart-broken{color:#7b68ee}div.wf.wf-theme-dark .ivu-icon-heart{color:#b8860b}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{background-color:hsla(0,0%,100%,.2)}div.wf.wf-theme-dark .ivu-btn-primary[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled],div.wf.wf-theme-dark .wf-post-btn[disabled]:hover{border-color:#d2691e}div.wf.wf-theme-dark .wf-tip{font-size:.7rem}
/*# sourceMappingURL=data:application/json;base64, */
