.SashaBottom,.SashaDifferentUrl,.SashaInput,.SashaOnlineScanners,.SashaReadHelp{text-align:center}.SashaCheckYourSite,.SashaOnlineScanners{font-family:Play,Arial,Helvetica,sans-serif}.SashaInput,.SashaOnlineScanners{margin-bottom:1.5rem}.SashaInput{margin-top:1.5rem}body{margin:0}img{display:block;height:auto;width:100%}.SashaBlackLogo{margin:auto;max-width:53.5625rem;width:100%}.SashaPageLoading{box-shadow:none;display:none}input{border-radius:.4375rem;color:maroon;font-weight:700;height:2rem}a{border-radius:.875rem;font-size:1.75rem;text-decoration:none}a:focus{border:.0625rem solid red;outline:0}a:active,a:visited{color:pink}a.SashaButtonCategory{border-color:bisque;border-style:outset}a.SashaButtonCategory:hover{border-color:#fff;border-style:solid;box-shadow:0 0 .625rem #00000080}a.SashaButtonCategory:active{border-color:#fff;border-style:solid;box-shadow:0 0 .625rem #00000080,inset 0 0 0 12.5rem #00000017}.SashaOnlineScanners{color:tomato;font-size:1.375rem;font-style:normal;font-weight:lighter}.SashaDifferentUrl,.SashaReadHelp{color:orchid;font-family:Arial,Helvetica,sans-serif;font-size:1.2rem}.SashaCheckYourSite{color:tomato;font-size:clamp(2rem,3vw,3.125rem)}.SashaButtonCategory,.SashaCategory{font-size:clamp(1.3rem,2vw,2rem)}.SashaButtonCategory{color:#000}.SashaBorderInput{border:.25rem outset #ff8c00;box-sizing:border-box;width:90%}.SashaBottom{margin-top:3rem}.SashaButtonLightSkyBlue{background-color:#87cefa}.SashaButtonLimeGreen{background-color:#32cd32}.SashaButtonPlum{background-color:plum}.SashaButtonSnow{background-color:snow}.SashaButtonBisque{background-color:bisque}.SashaButtonOrange{background-color:#f4a900}.SashaButtonYellow{background-color:#ff0}.SashaButtonDarkOrange{background-color:#ff8c00}.SashaButtonSilver{background-color:silver}.SashaButtonTomato{background-color:tomato}.SashaButtonSeagreen{background-color:#2e8b57}.SashaButtonChocolate{background-color:#d2691e}
/*# sourceMappingURL=data:application/json;base64, */
