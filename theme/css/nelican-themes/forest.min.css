body{background:#596c68;color:#ffe5a4}a{color:#ffb6c1}a:hover{background-color:#2f4f4f}a:focus{background:olive}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}.SashaAsideBottomText{bottom:8%;color:#ffe5a4}::selection{background:beige;color:#2e8b57}.navbar,.navbar-item,.tag:not(body){background-color:#ffe5a4;color:#596c68}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:#596c68;color:#ffb6c1}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:#ffb6c1}.navbar-link{background-color:#ffe5a4;color:#596c68}.navbar-link:not(.is-arrowless):after{border-color:#596c68}.navbar-link:hover{background-color:#596c68;color:#ffb6c1}.navbar-link:hover:not(.is-arrowless):after{border-color:#ffb6c1}.navbar-dropdown{background-color:#ffe5a4;border-top:#ffe5a4}.navbar-dropdown a.navbar-item:hover{background-color:#596c68;color:#ffb6c1}.navbar-burger{color:#596c68}.navbar-burger:hover{background-color:#ffe5a4;color:#596c68}div.a2a_floating_style{background-color:#bdb76b}@media screen and (orientation:portrait){.navbar-menu{background-color:#ffe5a4}}
/*# sourceMappingURL=data:application/json;base64, */
