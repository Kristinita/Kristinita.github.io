body{background:#f3efd6;color:#37756e}a{color:#cd5c5c}a:hover{background-color:#eee8aa}a:focus{background:#f0fff0}em{color:#8a2be2}img{box-shadow:0 0 2rem #000}.SashaNoShadowsImage{box-shadow:none;min-width:2rem}.SashaPageLoading{box-shadow:none;display:none}kbd{background:#4889fd;color:#fff5ee}hr{color:#c71585}td,th{border-color:#37756e}.SashaAsideBottomText{bottom:8%;color:#fff}blockquote{background:#faebd7;border-left:.5rem solid #dc143c;color:#639}blockquote>p>em{color:#8a2be2}blockquote>p>a{color:#cd5c5c}.SashaBlockquoteBlockstyle{background-color:#ffdab9;border-color:#7b68ee;color:#191970}.SashaBlockquoteBlockstyle>p>em{color:#8a2be2}.SashaBlockquoteBlockstyle>p>a{color:#cd5c5c}.SashaPullQuote{color:maroon}.SashaEpigraph{color:#20b2aa}.SashaEpigraph>.SashaEpigraphAuthor{color:#ba55d3}.SashaEpigraph>em{color:#db7093}.SashaGingerinasExample{background-color:#d0f0c0;color:#191970}.SashaGingerinasBadExample{background-color:hsla(0,79%,72%,.569);color:#dc143c}::selection{background:#ffe4b5fc;color:#f08080}.navbar,.navbar-item,.tag:not(body){background-color:#37756e;color:#f3efd6}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:#f3efd6;color:#cd5c5c}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:#cd5c5c}.navbar-link{background-color:#37756e;color:#f3efd6}.navbar-link:not(.is-arrowless):after{border-color:#f3efd6}.navbar-link:hover{background-color:#f3efd6;color:#cd5c5c}.navbar-link:hover:not(.is-arrowless):after{border-color:#cd5c5c}.navbar-dropdown{background-color:#37756e;border-top:#37756e}.navbar-dropdown a.navbar-item:hover{background-color:#f3efd6;color:#cd5c5c}.navbar-burger{color:#f3efd6}.navbar-burger:hover{background-color:#37756e;color:#f3efd6}div.a2a_floating_style{background-color:#87cefa}@media screen and (orientation:portrait){.navbar-menu{background-color:#37756e}}
/*# sourceMappingURL=data:application/json;base64, */
