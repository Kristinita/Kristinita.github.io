body{background:#f0f8ff;color:#b22222}a{color:#00f}a:hover{background-color:#eee8aa}a:focus{background:#f0fff0}em{color:#006400}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{background:#d8bfd8;color:#191970}.SashaAsideBottomText{bottom:10%;color:#fff}blockquote{background:#fcfcfc;border-left:.5rem solid #e6e6fa;color:#6a5acd}blockquote>p>em{color:#006400}blockquote>p>a{color:Sasha-Blockquote-Link}::selection{background:#ffe4b5fc;color:#f08080}.navbar,.navbar-item,.tag:not(body){background-color:#b22222;color:#f0f8ff}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:#f0f8ff;color:#00f}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:#00f}.navbar-link{background-color:#b22222;color:#f0f8ff}.navbar-link:not(.is-arrowless):after{border-color:#f0f8ff}.navbar-link:hover{background-color:#f0f8ff;color:#00f}.navbar-link:hover:not(.is-arrowless):after{border-color:#00f}.navbar-dropdown{background-color:#b22222;border-top:#b22222}.navbar-dropdown a.navbar-item:hover{background-color:#f0f8ff;color:#00f}.navbar-burger{color:#f0f8ff}.navbar-burger:hover{background-color:#b22222;color:#f0f8ff}div.a2a_floating_style{background-color:#deb887}@media screen and (orientation:portrait){.navbar-menu{background-color:#b22222}}
/*# sourceMappingURL=data:application/json;base64, */
