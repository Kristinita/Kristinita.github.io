/* [DEPRECATED] I no longer use Tooltipster

Sasha-Tooltipster-Purple-Bottom = orange
Sasha-Tooltipster-Purple-Background = purple
Sasha-Tooltipster-Aquamarine-Bottom = hotpink
Sasha-Tooltipster-Aquamarine-Background = forestgreen
 */
/* [DEPRECATED] Wildfire no longer functioning more

Sasha-Wildfire-Foreground = dodgerblue
Sasha-Wildfire-Broken-Heart = darkblue
Sasha-Wildfire-Heart = crimson
Sasha-Wildfire-Button-Background = aliceblue
 */
body {
	background: #f3efd6;
	color: #37756e;
}
a {
	color: #cd5c5c;
}
a:hover {
	background-color: #eee8aa;
}
a:focus {
	background: #f0fff0;
}
em {
	color: #8a2be2;
}
img {
	box-shadow: 0 0 2rem #000;
}
.SashaNoShadowsImage {
	box-shadow: none;
	min-width: 2rem;
}
.SashaPageLoading {
	box-shadow: none;
/*
	[INFO] Tracking will still:
	https://en.ryte.com/wiki/Tracking_Pixel
 */
	display: none;
}
kbd {
	color: #fff5ee;
	background: #4889fd;
}
hr {
	color: #c71585;
}
td,
th {
	border-color: #37756e;
}
.SashaAsideBottomText {
	color: #fff;
	bottom: 8%;
}
blockquote {
	border-left: solid #dc143c 0.5rem;
	color: #639;
	background: #faebd7;
}
blockquote >p >em {
	color: #8a2be2;
}
blockquote >p >a {
	color: #cd5c5c;
}
.SashaBlockquoteBlockstyle {
	border-color: #7b68ee;
	background-color: #ffdab9;
	color: #191970;
}
.SashaBlockquoteBlockstyle >p >em {
	color: #8a2be2;
}
.SashaBlockquoteBlockstyle >p >a {
	color: #cd5c5c;
}
.SashaPullQuote {
	color: #800000;
}
.SashaEpigraph {
	color: #20b2aa;
}
.SashaEpigraph >.SashaEpigraphAuthor {
	color: #ba55d3;
}
.SashaEpigraph >em {
	color: #db7093;
}
.SashaGingerinasExample {
	background-color: #d0f0c0;
	color: #191970;
}
.SashaGingerinasBadExample {
	background-color: rgba(240,128,128,0.569);
	color: #dc143c;
}
::selection {
	color: #f08080;
	background: rgba(255,228,181,0.99);
}
.navbar,
.tag:not(body) {
	color: #f3efd6;
	background-color: #37756e;
}
.navbar-item {
	color: #f3efd6;
	background-color: #37756e;
}
.navbar-item.has-dropdown:hover {
	color: #cd5c5c;
	background-color: #f3efd6;
}
.navbar-item.has-dropdown:hover .navbar-link {
	color: #cd5c5c;
	background-color: #f3efd6;
}
.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless)::after {
	border-color: #cd5c5c;
}
.navbar-link {
	color: #f3efd6;
	background-color: #37756e;
/* [INFO] Navbar arrow:
	https://i.imgur.com/9YEeq01.png */
/* [INFO] “:hover” must be before “::after”:
	https://stackoverflow.com/a/13234028/5951529 */
}
.navbar-link:not(.is-arrowless)::after {
	border-color: #f3efd6;
}
.navbar-link:hover {
	color: #cd5c5c;
	background-color: #f3efd6;
}
.navbar-link:hover:not(.is-arrowless)::after {
	border-color: #cd5c5c;
}
.navbar-dropdown {
	background-color: #37756e;
/* [INFO] Navbar border top:
	https://i.imgur.com/zBhRpxN.png */
	border-top: #37756e;
}
.navbar-dropdown a.navbar-item:hover {
	color: #cd5c5c;
	background-color: #f3efd6;
}
.navbar-burger {
	color: #f3efd6;
}
.navbar-burger:hover {
	color: #f3efd6;
	background-color: #37756e;
}
@media screen and (orientation: portrait) {
	.navbar-menu {
		background-color: #37756e;
	}
}
/* csslint ignore:start */
div.a2a_floating_style {
	background-color: #87cefa;
}
/* csslint ignore:end */
/*# sourceMappingURL=data:application/json;base64, */
