body{background:#08054e;color:#fff0f5}a{color:plum}a:hover{background-color:indigo}a:focus{background:#556b2f}em{color:#6495ed}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{background:brown;color:#fff5ee}.SashaAsideBottomText{bottom:8%;color:#fff}blockquote{background:#fcfcfc;border-left:.5rem solid #e6e6fa;color:#6a5acd}blockquote>p>em{color:#6495ed}blockquote>p>a{color:Sasha-Blockquote-Link}.SashaBlockquoteBlockstyle{background-color:#ffdab9;border-color:#ff5730;color:#bf0a7c}.SashaBlockquoteBlockstyle>p>em{color:#9b4d28}.SashaBlockquoteBlockstyle>p>a{color:#4169e1}.SashaPullQuote{color:#90ee90}.SashaEpigraph{color:bisque}.SashaEpigraph>.SashaEpigraphAuthor{color:#ffb6c1}.SashaEpigraph>em{color:#ffdc33}.SashaShadowsNeonAroundText{text-shadow:0 0 .625rem #ff00de,0 0 1.25rem #ff00de,0 0 1.875rem #ff00de,0 0 2.5rem #ff00de,0 0 3.125rem #ff00de,0 0 3.75rem #ff00de}.SashaDot{border-bottom:.0625rem dotted #bf0a7c}.SashaDotLight{border-bottom:.0625rem dotted #fff8dc}.SashaSpan{background-color:bisque;color:#c71585}::selection{background:#ffe4b5fc;color:#f08080}.navbar,.navbar-item,.tag:not(body){background-color:#fff0f5;color:#08054e}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:#08054e;color:plum}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:plum}.navbar-link{background-color:#fff0f5;color:#08054e}.navbar-link:not(.is-arrowless):after{border-color:#08054e}.navbar-link:hover{background-color:#08054e;color:plum}.navbar-link:hover:not(.is-arrowless):after{border-color:plum}.navbar-dropdown{background-color:#fff0f5;border-top:#fff0f5}.navbar-dropdown a.navbar-item:hover{background-color:#08054e;color:plum}.navbar-burger{color:#08054e}.navbar-burger:hover{background-color:#fff0f5;color:#08054e}div.a2a_floating_style{background-color:#ff1493}@media screen and (orientation:portrait){.navbar-menu{background-color:#fff0f5}}
/*# sourceMappingURL=data:application/json;base64, */
