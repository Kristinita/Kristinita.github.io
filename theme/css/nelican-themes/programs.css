/*
[INFO] “Отборный жёлтый” Yandex
[NOTE] “violet” has 2.42 contrast
 */
/*
[INFO] “Снежный синий” Yandex + contrast finder
[NOTE] “orange” has 2.84 contrast
 */
/* [DEPRECATED] Wildfire no longer functioning more

Sasha-Wildfire-Foreground = blanchedalmond
Sasha-Wildfire-Broken-Heart = lightsalmon
Sasha-Wildfire-Heart = gold
Sasha-Wildfire-Button-Background = rosybrown
 */
/* Unverified For PurifyCSS
	========================================================================== */
body {
	background: #a0522d;
	color: #ffefd5;
}
a {
	color: #ffba00;
}
a:hover {
	background-color: rgba(240,128,128,0.6);
}
a:focus {
	background: #f5f5f5;
}
em {
	color: #aaf2fd;
}
dfn {
	color: #db7093;
}
img {
	box-shadow: 0 0 2rem #000;
}
.SashaNoShadowsImage {
	box-shadow: none;
	min-width: 2rem;
}
.SashaPageLoading {
	box-shadow: none;
/*
	[INFO] Tracking will still:
	https://en.ryte.com/wiki/Tracking_Pixel
 */
	display: none;
}
kbd {
	color: #ffc0cb;
	background: #800000;
}
hr {
	color: #ffefd5;
}
td,
th {
	border-color: #ffefd5;
}
.SashaAsideBottomText {
	color: #fff;
	bottom: 7%;
}
blockquote {
	border-left: solid #cd5c5c 0.5rem;
	color: #4b0082;
	background: #f4a460;
}
blockquote >p >em {
	color: #92000a;
}
blockquote >p >a {
	color: Sasha-Blockquote-Link;
}
.SashaBlockquoteBlockstyle {
	border-color: #7b68ee;
	background-color: #ffdab9;
	color: #191970;
}
.SashaBlockquoteBlockstyle >p >em {
	color: Sasha-Term-Blockquote-Em;
}
.SashaBlockquoteBlockstyle >p >a {
	color: Sasha-Term-Blockquote-Link;
}
.SashaEpigraph {
	color: #7fffd4;
}
.SashaEpigraph >.SashaEpigraphAuthor {
	color: #ffb6c1;
}
.SashaEpigraph >em {
	color: #7fffd4;
}
::selection {
	color: #f08080;
	background: rgba(255,228,181,0.99);
}
.navbar,
.tag:not(body) {
	color: #a0522d;
	background-color: #ffefd5;
}
.navbar-item {
	color: #a0522d;
	background-color: #ffefd5;
}
.navbar-item.has-dropdown:hover {
	color: #ffba00;
	background-color: #a0522d;
}
.navbar-item.has-dropdown:hover .navbar-link {
	color: #ffba00;
	background-color: #a0522d;
}
.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless)::after {
	border-color: #ffba00;
}
.navbar-link {
	color: #a0522d;
	background-color: #ffefd5;
/* [INFO] Navbar arrow:
	https://i.imgur.com/9YEeq01.png */
/* [INFO] “:hover” must be before “::after”:
	https://stackoverflow.com/a/13234028/5951529 */
}
.navbar-link:not(.is-arrowless)::after {
	border-color: #a0522d;
}
.navbar-link:hover {
	color: #ffba00;
	background-color: #a0522d;
}
.navbar-link:hover:not(.is-arrowless)::after {
	border-color: #ffba00;
}
.navbar-dropdown {
	background-color: #ffefd5;
/* [INFO] Navbar border top:
	https://i.imgur.com/zBhRpxN.png */
	border-top: #ffefd5;
}
.navbar-dropdown a.navbar-item:hover {
	color: #ffba00;
	background-color: #a0522d;
}
.navbar-burger {
	color: #a0522d;
}
.navbar-burger:hover {
	color: #a0522d;
	background-color: #ffefd5;
}
@media screen and (orientation: portrait) {
	.navbar-menu {
		background-color: #ffefd5;
	}
}
/* csslint ignore:start */
div.a2a_floating_style {
	background-color: #ffc0cb;
}
/* csslint ignore:end */
/*# sourceMappingURL=data:application/json;base64, */
