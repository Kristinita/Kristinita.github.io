body{background:#87e1be;color:#465550}a{color:#ca320b}a:hover{background-color:#f0808099}a:focus{background:#f5f5f5}em{color:#0d43e4}img{box-shadow:0 0 2rem #000}.SashaNoShadowsImage{box-shadow:none;min-width:2rem}.SashaPageLoading{box-shadow:none;display:none}kbd{background:#2e8b57;color:#eee8aa}hr{color:#c71585}td,th{border-color:#465550}.SashaAsideBottomText{bottom:8%;color:#fff}blockquote{background:#fcfcfc;border-left:.5rem solid #db7093;color:navy}blockquote>p>em{color:#0d43e4}blockquote>p>a{color:Sasha-Blockquote-Link}.SashaBlockquoteBlockstyle{background-color:#ffdab9;border-color:#7b68ee;color:#191970}.SashaBlockquoteBlockstyle>p>em{color:Sasha-Term-Blockquote-Em}.SashaBlockquoteBlockstyle>p>a{color:Sasha-Term-Blockquote-Link}.SashaEpigraph{color:#ffdc33}.SashaEpigraph>.SashaEpigraphAuthor{color:#ffb6c1}.SashaEpigraph>em{color:#ffdc33}::selection{background:#ffe4b5fc;color:#f08080}.navbar,.navbar-item,.tag:not(body){background-color:#465550;color:#87e1be}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:#87e1be;color:#ca320b}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:#ca320b}.navbar-link{background-color:#465550;color:#87e1be}.navbar-link:not(.is-arrowless):after{border-color:#87e1be}.navbar-link:hover{background-color:#87e1be;color:#ca320b}.navbar-link:hover:not(.is-arrowless):after{border-color:#ca320b}.navbar-dropdown{background-color:#465550;border-top:#465550}.navbar-dropdown a.navbar-item:hover{background-color:#87e1be;color:#ca320b}.navbar-burger{color:#87e1be}.navbar-burger:hover{background-color:#465550;color:#87e1be}div.a2a_floating_style{background-color:#9370db}@media screen and (orientation:portrait){.navbar-menu{background-color:#465550}}
/*# sourceMappingURL=data:application/json;base64, */
