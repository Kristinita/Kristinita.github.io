/*
@Author: Kristinita
@Date:   2017-03-15 17:06:35
@Last Modified by:   Kristinita
@Last Modified time: 2017-05-09 15:19:54
 */
/* [DEPRECATED] Wildfire no longer functioning more

Sasha-Wildfire-Foreground = chocolate
Sasha-Wildfire-Broken-Heart = mediumslateblue
Sasha-Wildfire-Heart = darkgoldenrod
Sasha-Wildfire-Button-Background = hsla(0 0 100 .2)
 */
/* Unverified For PurifyCSS
	========================================================================== */
body {
	background: #08054e;
	color: #fff0f5;
}
a {
	color: #dda0dd;
}
a:hover {
	background-color: #4b0082;
}
a:focus {
	background: #556b2f;
}
em {
	color: #6495ed;
}
img {
	box-shadow: 0 0 2rem #000;
}
.SashaPageLoading {
	box-shadow: none;
/*
	[INFO] Tracking will still:
	https://en.ryte.com/wiki/Tracking_Pixel
 */
	display: none;
}
kbd {
	color: #fff5ee;
	background: #a52a2a;
}
.SashaAsideBottomText {
	color: #fff;
	bottom: 8%;
}
blockquote {
	border-left: solid #e6e6fa 0.5rem;
	color: #6a5acd;
	background: #fcfcfc;
}
blockquote >p >em {
	color: #6495ed;
}
blockquote >p >a {
	color: Sasha-Blockquote-Link;
}
.SashaBlockquoteBlockstyle {
	border-color: #ff5730;
	background-color: #ffdab9;
	color: #bf0a7c;
}
.SashaBlockquoteBlockstyle >p >em {
	color: #9b4d28;
}
.SashaBlockquoteBlockstyle >p >a {
	color: #4169e1;
}
.SashaPullQuote {
	color: #90ee90;
}
.SashaEpigraph {
	color: #ffe4c4;
}
.SashaEpigraph >.SashaEpigraphAuthor {
	color: #ffb6c1;
}
.SashaEpigraph >em {
	color: #ffdc33;
}
.SashaShadowsNeonAroundText {
	text-shadow: 0 0 0.625rem #ff00de, 0 0 1.25rem #ff00de, 0 0 1.875rem #ff00de, 0 0 2.5rem #ff00de, 0 0 3.125rem #ff00de, 0 0 3.75rem #ff00de;
}
.SashaDot {
	border-bottom: 0.0625rem dotted #bf0a7c;
}
.SashaDotLight {
	border-bottom: 0.0625rem dotted #fff8dc;
}
.SashaSpan {
	color: #c71585;
	background-color: #ffe4c4;
}
::selection {
	color: #f08080;
	background: rgba(255,228,181,0.99);
}
.navbar,
.tag:not(body) {
	color: #08054e;
	background-color: #fff0f5;
}
.navbar-item {
	color: #08054e;
	background-color: #fff0f5;
}
.navbar-item.has-dropdown:hover {
	color: #dda0dd;
	background-color: #08054e;
}
.navbar-item.has-dropdown:hover .navbar-link {
	color: #dda0dd;
	background-color: #08054e;
}
.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless)::after {
	border-color: #dda0dd;
}
.navbar-link {
	color: #08054e;
	background-color: #fff0f5;
/* [INFO] Navbar arrow:
	https://i.imgur.com/9YEeq01.png */
/* [INFO] “:hover” must be before “::after”:
	https://stackoverflow.com/a/13234028/5951529 */
}
.navbar-link:not(.is-arrowless)::after {
	border-color: #08054e;
}
.navbar-link:hover {
	color: #dda0dd;
	background-color: #08054e;
}
.navbar-link:hover:not(.is-arrowless)::after {
	border-color: #dda0dd;
}
.navbar-dropdown {
	background-color: #fff0f5;
/* [INFO] Navbar border top:
	https://i.imgur.com/zBhRpxN.png */
	border-top: #fff0f5;
}
.navbar-dropdown a.navbar-item:hover {
	color: #dda0dd;
	background-color: #08054e;
}
.navbar-burger {
	color: #08054e;
}
.navbar-burger:hover {
	color: #08054e;
	background-color: #fff0f5;
}
@media screen and (orientation: portrait) {
	.navbar-menu {
		background-color: #fff0f5;
	}
}
/* csslint ignore:start */
div.a2a_floating_style {
	background-color: #ff1493;
}
/* csslint ignore:end */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm91dHB1dC90aGVtZS9zdHlsdXMvbmVsaWNhbi10aGVtZXMvc21lcnQtc3ZvYm9kZS5zdHlsIiwib3V0cHV0L3RoZW1lL2Nzcy9uZWxpY2FuLXRoZW1lcy9zbWVydC1zdm9ib2RlLmNzcyIsIm91dHB1dC90aGVtZS9zdHlsdXMvbmVsaWNhbi10aGVtZXMvbmVsaWNhbi10aGVtZXMtY29yZS1kZXNpZ24uc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Q0NLQztBRHFERDs7Ozs7O0NDOUNDO0FEMkREOzZFQ3pENkU7QUMyRDdFO0VBQ0MsbUJBQVc7RUFDWCxjQUFNO0FEekRQO0FDdUVBO0VBQ0MsY0FBTTtBRHJFUDtBQ3VFQztFQUNDLHlCQUFpQjtBRHJFbkI7QUN1RUM7RUFDQyxtQkFBVztBRHJFYjtBQ3dHQTtFQUNDLGNBQU07QURuR1A7QUMrR0E7RUFDQyx5QkFBVztBRDFHWjtBQ3FIQTtFQUNDLGdCQUFXO0FBQ1g7OztFRDdHQztFQ2lIRCxhQUFRO0FEL0dUO0FDb0hBO0VBQ0MsY0FBTTtFQUNOLG1CQUFXO0FEbEhaO0FDMElBO0VBQ0MsV0FBTTtFQUNOLFVBQU87QURqSVI7QUMySUE7RUFDQyxpQ0FBWTtFQUNaLGNBQU07RUFDTixtQkFBVztBRHpJWjtBQzZJRTtFQUNDLGNBQU07QUQzSVQ7QUM2SUU7RUFDQyw0QkFBTTtBRDNJVDtBQ2dKQTtFQUNDLHFCQUFhO0VBQ2IseUJBQWlCO0VBQ2pCLGNBQU07QUQ5SVA7QUNrSkU7RUFDQyxjQUFNO0FEaEpUO0FDa0pFO0VBQ0MsY0FBTTtBRGhKVDtBQ3NKQTtFQUNDLGNBQU07QURwSlA7QUMwSkE7RUFDQyxjQUFNO0FEeEpQO0FDMEpDO0VBQ0MsY0FBTTtBRHhKUjtBQzBKQztFQUNDLGNBQU07QUR4SlI7QUM4S0E7RUFDQywySUFBc0Q7QURwS3ZEO0FDMEtBO0VBQ0MsdUNBQWM7QUR4S2Y7QUMwS0E7RUFDQyx1Q0FBYztBRHhLZjtBQzZLQTtFQUNDLGNBQU07RUFDTix5QkFBaUI7QUQzS2xCO0FDOExBO0VBQ0MsY0FBTTtFQUNOLGtDQUFXO0FENUxaO0FDa09BOztFQUVDLGNBQU07RUFDTix5QkFBaUI7QURyTmxCO0FDd05BO0VBQ0MsY0FBTTtFQUNOLHlCQUFpQjtBRHRObEI7QUMwTkU7RUFDQyxjQUFNO0VBQ04seUJBQWlCO0FEeE5wQjtBQzBORztFQUNDLGNBQU07RUFDTix5QkFBaUI7QUR4TnJCO0FDME5JO0VBQ0MscUJBQWE7QUR4TmxCO0FDMk5BO0VBQ0MsY0FBTTtFQUNOLHlCQUFpQjtBQUVqQjtrQ0QxTmlDO0FDK05qQzsrQ0Q3TjhDO0FBQy9DO0FDeU5DO0VBQ0MscUJBQWE7QUR2TmY7QUMyTkM7RUFDQyxjQUFNO0VBQ04seUJBQWlCO0FEek5uQjtBQzJORTtFQUNDLHFCQUFhO0FEek5oQjtBQzhOQTtFQUNDLHlCQUFpQjtBQUNqQjtrQ0Q1TmlDO0VDOE5qQyxtQkFBVztBRDVOWjtBQzhOQztFQUNDLGNBQU07RUFDTix5QkFBaUI7QUQ1Tm5CO0FDK05BO0VBQ0MsY0FBTTtBRDdOUDtBQytOQztFQUNDLGNBQU07RUFDTix5QkFBaUI7QUQ3Tm5CO0FDa093QztFQUN2QztJQUNDLHlCQUFpQjtFRGhPakI7QUFDRjtBQzJPQSx5QkFBQTtBQUlDO0VBRUMseUJBQWlCO0FENU9uQjtBQzhPQSx1QkFBQSIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQEF1dGhvcjogS3Jpc3Rpbml0YVxuQERhdGU6ICAgMjAxNy0wMy0xNSAxNzowNjozNVxuQExhc3QgTW9kaWZpZWQgYnk6ICAgS3Jpc3Rpbml0YVxuQExhc3QgTW9kaWZpZWQgdGltZTogMjAxNy0wNS0wOSAxNToxOTo1NFxuKi9cblxuU2FzaGEtQm9keS1CYWNrZ3JvdW5kID0gIzA4MDU0ZVxuU2FzaGEtQm9keS1Gb3JlZ3JvdW5kID0gbGF2ZW5kZXJibHVzaFxuXG5TYXNoYS1MaW5rID0gcGx1bVxuU2FzaGEtSG92ZXItTGluayA9IGluZGlnb1xuU2FzaGEtRm9jdXMtTGluayA9IGRhcmtvbGl2ZWdyZWVuXG5cbi8vIFNhc2hhLUJlZ2luLUN1cnNpdmUgPSBkYXJrY3lhblxuLy8gU2FzaGEtRW5kLUN1cnNpdmUgPSBtZWRpdW1zbGF0ZWJsdWVcblNhc2hhLUVtID0gY29ybmZsb3dlcmJsdWVcblxuU2FzaGEtQ292ZXItVGV4dCA9IHdoaXRlXG5cblNhc2hhLUxlZnQtQm9yZGVyID0gbGF2ZW5kZXJcblNhc2hhLUxlZnQtQm9yZGVyLUJsb2NrcXVvdGUtRm9yZWdyb3VuZCA9IHNsYXRlYmx1ZVxuU2FzaGEtTGVmdC1Cb3JkZXItQmxvY2txdW90ZS1CYWNrZ3JvdW5kID0gI2ZjZmNmY1xuXG4vLyBbSU5GT10gbWVkaXVtdmlvbGV0cmVkICsgRmlyZWZveCBjb2xvciBwYWxldHRlXG5TYXNoYS1Eb3QgPSAjYmYwYTdjXG5TYXNoYS1Eb3QtTGlnaHQgPSBjb3Juc2lsa1xuXG5TYXNoYS1UZXJtLUJsb2NrcXVvdGUtQm9yZGVyID0gI2ZmNTczMFxuU2FzaGEtVGVybS1CbG9ja3F1b3RlLUJhY2tncm91bmQgPSBwZWFjaHB1ZmZcbi8vIFtJTkZPXSBtZWRpdW12aW9sZXRyZWQgKyBGaXJlZm94IGNvbG9yIHBhbGV0dGVcblNhc2hhLVRlcm0tQmxvY2txdW90ZS1Gb3JlZ3JvdW5kID0gI2JmMGE3Y1xuU2FzaGEtVGVybS1CbG9ja3F1b3RlLUxpbmsgPSByb3lhbGJsdWVcbi8vIFtJTkZPXSBzaWVubmEgKyBGaXJlZm94IGNvbG9yIHBhbGV0dGVcblNhc2hhLVRlcm0tQmxvY2txdW90ZS1FbSA9ICM5YjRkMjhcblxuU2FzaGEtRXBpZ3JhcGggPSBiaXNxdWVcblNhc2hhLUVwaWdyYXBoLUF1dGhvciA9IGxpZ2h0cGlua1xuXG5TYXNoYS1DaXRhdGlvbi1CZXR3ZWVuLVF1b3RlcyA9IGxpZ2h0Z3JlZW5cblxuU2FzaGEtU3Bhbi1Gb3JlZ3JvdW5kID0gbWVkaXVtdmlvbGV0cmVkXG5TYXNoYS1TcGFuLUJhY2tncm91bmQgPSBiaXNxdWVcblxuU2FzaGEtU2hhZG93cy1OZW9uLUFyb3VuZC1UZXh0ID0gcmdiYSgyNTUgMCAyMjIgMSlcblxuLy8gRGlmZmVyZW50IGVsZW1lbnRzXG5cblNhc2hhLVNlbGVjdGlvbi1Gb3JlZ3JvdW5kID0gbGlnaHRjb3JhbFxuU2FzaGEtU2VsZWN0aW9uLUJhY2tncm91bmQgPSByZ2JhKDI1NSAyMjggMTgxIC45OSlcblxuLy8gQWRkVG9BbnlcblxuU2FzaGEtQWRkLVRvLUFueSA9IGRlZXBwaW5rXG5cblxuLy8gV2lsZGZpcmVcblxuLyogW0RFUFJFQ0FURURdIFdpbGRmaXJlIG5vIGxvbmdlciBmdW5jdGlvbmluZyBtb3JlXG5cblNhc2hhLVdpbGRmaXJlLUZvcmVncm91bmQgPSBjaG9jb2xhdGVcblNhc2hhLVdpbGRmaXJlLUJyb2tlbi1IZWFydCA9IG1lZGl1bXNsYXRlYmx1ZVxuU2FzaGEtV2lsZGZpcmUtSGVhcnQgPSBkYXJrZ29sZGVucm9kXG5TYXNoYS1XaWxkZmlyZS1CdXR0b24tQmFja2dyb3VuZCA9IGhzbGEoMCAwIDEwMCAuMilcbiovXG5cblxuLy8gS0JEXG5TYXNoYS1LQkQtZm9yZWdyb3VuZCA9IHNlYXNoZWxsXG5TYXNoYS1LQkQtYmFja2dyb3VuZCA9IGJyb3duXG5cbi8qIFVudmVyaWZpZWQgRm9yIFB1cmlmeUNTU1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5TYXNoYS1Cb3R0b20tUGVyY2VudCA9IDglXG5cblNhc2hhLUVwaWdyYXBoLUVtID0gI2ZmZGMzM1xuXG5TYXNoYS1JbWFnZS1TaGFkb3cgPSBibGFja1xuXG5TYXNoYS1JbmxpbmUtQ29kZSA9IGRhcmtzbGF0ZWdyZXlcblxuU2FzaGEtSHIgPSBtZWRpdW12aW9sZXRyZWRcblNhc2hhLUJsb2NrcXVvdGUtRW0gPSBTYXNoYS1FbVxuXG5AaW1wb3J0IFwibmVsaWNhbi10aGVtZXMtY29yZS1kZXNpZ24uc3R5bFwiXG4iLCIvKlxuQEF1dGhvcjogS3Jpc3Rpbml0YVxuQERhdGU6ICAgMjAxNy0wMy0xNSAxNzowNjozNVxuQExhc3QgTW9kaWZpZWQgYnk6ICAgS3Jpc3Rpbml0YVxuQExhc3QgTW9kaWZpZWQgdGltZTogMjAxNy0wNS0wOSAxNToxOTo1NFxuKi9cbi8qIFtERVBSRUNBVEVEXSBXaWxkZmlyZSBubyBsb25nZXIgZnVuY3Rpb25pbmcgbW9yZVxuXG5TYXNoYS1XaWxkZmlyZS1Gb3JlZ3JvdW5kID0gY2hvY29sYXRlXG5TYXNoYS1XaWxkZmlyZS1Ccm9rZW4tSGVhcnQgPSBtZWRpdW1zbGF0ZWJsdWVcblNhc2hhLVdpbGRmaXJlLUhlYXJ0ID0gZGFya2dvbGRlbnJvZFxuU2FzaGEtV2lsZGZpcmUtQnV0dG9uLUJhY2tncm91bmQgPSBoc2xhKDAgMCAxMDAgLjIpXG4qL1xuLyogVW52ZXJpZmllZCBGb3IgUHVyaWZ5Q1NTXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzA4MDU0ZTtcbiAgY29sb3I6ICNmZmYwZjU7XG59XG5hIHtcbiAgY29sb3I6ICNkZGEwZGQ7XG59XG5hOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRiMDA4Mjtcbn1cbmE6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjNTU2YjJmO1xufVxuLlNhc2hhRGVhZGxpbmsge1xuICBjb2xvcjogU2FzaGEtRGVhZC1MaW5rO1xufVxuZW0ge1xuICBjb2xvcjogIzY0OTVlZDtcbn1cbmRmbiB7XG4gIGNvbG9yOiBTYXNoYS1EZm47XG59XG5pbWcge1xuICBib3gtc2hhZG93OiAwIDAgMnJlbSAjMDAwO1xufVxuLlNhc2hhTm9TaGFkb3dzSW1hZ2Uge1xuICBib3gtc2hhZG93OiBub25lO1xuICBtaW4td2lkdGg6IDJyZW07XG59XG4uU2FzaGFQYWdlTG9hZGluZyB7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4vKlxuXHRbSU5GT10gVHJhY2tpbmcgd2lsbCBzdGlsbDpcblx0aHR0cHM6Ly9lbi5yeXRlLmNvbS93aWtpL1RyYWNraW5nX1BpeGVsXG5cdCovXG4gIGRpc3BsYXk6IG5vbmU7XG59XG5rYmQge1xuICBjb2xvcjogI2ZmZjVlZTtcbiAgYmFja2dyb3VuZDogI2E1MmEyYTtcbn1cbmhyIHtcbiAgY29sb3I6ICNjNzE1ODU7XG59XG50ZCxcbnRoIHtcbiAgYm9yZGVyLWNvbG9yOiAjZmZmMGY1O1xufVxuLlNhc2hhQXNpZGVCb3R0b21UZXh0IHtcbiAgY29sb3I6ICNmZmY7XG4gIGJvdHRvbTogOCU7XG59XG5ibG9ja3F1b3RlIHtcbiAgYm9yZGVyLWxlZnQ6IHNvbGlkICNlNmU2ZmEgMC41cmVtO1xuICBjb2xvcjogIzZhNWFjZDtcbiAgYmFja2dyb3VuZDogI2ZjZmNmYztcbn1cbmJsb2NrcXVvdGUgPnAgPmVtIHtcbiAgY29sb3I6ICM2NDk1ZWQ7XG59XG5ibG9ja3F1b3RlID5wID5hIHtcbiAgY29sb3I6IFNhc2hhLUJsb2NrcXVvdGUtTGluaztcbn1cbi5TYXNoYUJsb2NrcXVvdGVCbG9ja3N0eWxlIHtcbiAgYm9yZGVyLWNvbG9yOiAjZmY1NzMwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkYWI5O1xuICBjb2xvcjogI2JmMGE3Yztcbn1cbi5TYXNoYUJsb2NrcXVvdGVCbG9ja3N0eWxlID5wID5lbSB7XG4gIGNvbG9yOiAjOWI0ZDI4O1xufVxuLlNhc2hhQmxvY2txdW90ZUJsb2Nrc3R5bGUgPnAgPmEge1xuICBjb2xvcjogIzQxNjllMTtcbn1cbi5TYXNoYVB1bGxRdW90ZSB7XG4gIGNvbG9yOiAjOTBlZTkwO1xufVxuLlNhc2hhRXBpZ3JhcGgge1xuICBjb2xvcjogI2ZmZTRjNDtcbn1cbi5TYXNoYUVwaWdyYXBoID4uU2FzaGFFcGlncmFwaEF1dGhvciB7XG4gIGNvbG9yOiAjZmZiNmMxO1xufVxuLlNhc2hhRXBpZ3JhcGggPmVtIHtcbiAgY29sb3I6ICNmZmRjMzM7XG59XG4uU2FzaGFHaW5nZXJpbmFzRXhhbXBsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IFNhc2hhLUdpbmdlcmluYXMtRXhhbXBsZTtcbiAgY29sb3I6IFNhc2hhLUdpbmdlcmluYXMtRXhhbXBsZS1Gb3JlZ3JvdW5kO1xufVxuLlNhc2hhR2luZ2VyaW5hc0JhZEV4YW1wbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBTYXNoYS1HaW5nZXJpbmFzLUJhZC1FeGFtcGxlO1xuICBjb2xvcjogU2FzaGEtR2luZ2VyaW5hcy1CYWQtRXhhbXBsZS1Gb3JlZ3JvdW5kO1xufVxuLlNhc2hhU2hhZG93c05lb25Bcm91bmRUZXh0IHtcbiAgdGV4dC1zaGFkb3c6IDAgMCAwLjYyNXJlbSAjZmYwMGRlLCAwIDAgMS4yNXJlbSAjZmYwMGRlLCAwIDAgMS44NzVyZW0gI2ZmMDBkZSwgMCAwIDIuNXJlbSAjZmYwMGRlLCAwIDAgMy4xMjVyZW0gI2ZmMDBkZSwgMCAwIDMuNzVyZW0gI2ZmMDBkZTtcbn1cbi5TYXNoYURvdCB7XG4gIGJvcmRlci1ib3R0b206IDAuMDYyNXJlbSBkb3R0ZWQgI2JmMGE3Yztcbn1cbi5TYXNoYURvdExpZ2h0IHtcbiAgYm9yZGVyLWJvdHRvbTogMC4wNjI1cmVtIGRvdHRlZCAjZmZmOGRjO1xufVxuLlNhc2hhU3BhbiB7XG4gIGNvbG9yOiAjYzcxNTg1O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNGM0O1xufVxuOjpzZWxlY3Rpb24ge1xuICBjb2xvcjogI2YwODA4MDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsMjI4LDE4MSwwLjk5KTtcbn1cbi5LaXJhR1JpZ2h0cyB7XG4gIGNvbG9yOiBTYXNoYS1HUi1Gb3JlZ3JvdW5kO1xuICBiYWNrZ3JvdW5kOiBTYXNoYS1HUi1CYWNrZ3JvdW5kO1xufVxuLlNhc2hhRW1Ob0NvbG9yIHtcbiAgY29sb3I6ICNmZmYwZjU7XG59XG4uU2FzaGFTaWduIHtcbiAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgU2FzaGEtRmlndXJlLUJvcmRlcjtcbiAgYmFja2dyb3VuZDogU2FzaGEtRmlndXJlLUJhY2tncm91bmQ7XG59XG4ubmF2YmFyLFxuLnRhZzpub3QoYm9keSkge1xuICBjb2xvcjogIzA4MDU0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjBmNTtcbn1cbi5uYXZiYXItaXRlbSB7XG4gIGNvbG9yOiAjMDgwNTRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmMGY1O1xufVxuLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpob3ZlciB7XG4gIGNvbG9yOiAjZGRhMGRkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDgwNTRlO1xufVxuLm5hdmJhci1pdGVtLmhhcy1kcm9wZG93bjpob3ZlciAubmF2YmFyLWxpbmsge1xuICBjb2xvcjogI2RkYTBkZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA4MDU0ZTtcbn1cbi5uYXZiYXItaXRlbS5oYXMtZHJvcGRvd246aG92ZXIgLm5hdmJhci1saW5rOm5vdCguaXMtYXJyb3dsZXNzKTo6YWZ0ZXIge1xuICBib3JkZXItY29sb3I6ICNkZGEwZGQ7XG59XG4ubmF2YmFyLWxpbmsge1xuICBjb2xvcjogIzA4MDU0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjBmNTtcbi8qIFtJTkZPXSBOYXZiYXIgYXJyb3c6XG5cdGh0dHBzOi8vaS5pbWd1ci5jb20vOVlFZXEwMS5wbmcgKi9cbi8qIFtJTkZPXSDigJw6aG92ZXLigJ0gbXVzdCBiZSBiZWZvcmUg4oCcOjphZnRlcuKAnTpcblx0aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzEzMjM0MDI4LzU5NTE1MjkgKi9cbn1cbi5uYXZiYXItbGluazpub3QoLmlzLWFycm93bGVzcyk6OmFmdGVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDgwNTRlO1xufVxuLm5hdmJhci1saW5rOmhvdmVyIHtcbiAgY29sb3I6ICNkZGEwZGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwODA1NGU7XG59XG4ubmF2YmFyLWxpbms6aG92ZXI6bm90KC5pcy1hcnJvd2xlc3MpOjphZnRlciB7XG4gIGJvcmRlci1jb2xvcjogI2RkYTBkZDtcbn1cbi5uYXZiYXItZHJvcGRvd24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmMGY1O1xuLyogW0lORk9dIE5hdmJhciBib3JkZXIgdG9wOlxuXHRodHRwczovL2kuaW1ndXIuY29tL3pCaFJweE4ucG5nICovXG4gIGJvcmRlci10b3A6ICNmZmYwZjU7XG59XG4ubmF2YmFyLWRyb3Bkb3duIGEubmF2YmFyLWl0ZW06aG92ZXIge1xuICBjb2xvcjogI2RkYTBkZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA4MDU0ZTtcbn1cbi5uYXZiYXItYnVyZ2VyIHtcbiAgY29sb3I6ICMwODA1NGU7XG59XG4ubmF2YmFyLWJ1cmdlcjpob3ZlciB7XG4gIGNvbG9yOiAjMDgwNTRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmMGY1O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAubmF2YmFyLW1lbnUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYwZjU7XG4gIH1cbn1cbi8qIGNzc2xpbnQgaWdub3JlOnN0YXJ0ICovXG5kaXYuYTJhX2Zsb2F0aW5nX3N0eWxlLFxuZGl2LmEyYV9kZWZhdWx0X3N0eWxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMTQ5Mztcbn1cbi8qIGNzc2xpbnQgaWdub3JlOmVuZCAqL1xuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklpNHVMeTR1TDNOMGVXeDFjeTl1Wld4cFkyRnVMWFJvWlcxbGN5OXpiV1Z5ZEMxemRtOWliMlJsTG5OMGVXd2lMQ0l1TGk4dUxpOXpkSGxzZFhNdmJtVnNhV05oYmkxMGFHVnRaWE12Ym1Wc2FXTmhiaTEwYUdWdFpYTXRZMjl5WlMxa1pYTnBaMjR1YzNSNWJDSmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3T3pzN08wRkJNRVJCT3pzN096czdPMEZCWVVFN08wRkRSVUU3UlVGRFF5eFpRVUZYTEZGQlFWZzdSVUZEUVN4UFFVRk5MRkZCUVU0N08wRkJZMFE3UlVGRFF5eFBRVUZOTEZGQlFVNDdPMEZCUlVFN1JVRkRReXhyUWtGQmFVSXNVVUZCYWtJN08wRkJSVVE3UlVGRFF5eFpRVUZYTEZGQlFWZzdPMEZCVlVZN1JVRkRReXhQUVVGTkxHZENRVUZPT3p0QlFYZENSRHRGUVVORExFOUJRVTBzVVVGQlRqczdRVUZKUkR0RlFVTkRMRTlCUVUwc1ZVRkJUanM3UVVGUFJEdEZRVU5ETEZsQlFWY3NZMEZCV0RzN1FVRlBSRHRGUVVORExGbEJRVmNzUzBGQldEdEZRVU5CTEZkQlFWVXNTMEZCVmpzN1FVRkZSRHRGUVVORExGbEJRVmNzUzBGQldEdEJRVU5CT3pzN08wVkJTVUVzVTBGQlVTeExRVUZTT3p0QlFVdEVPMFZCUTBNc1QwRkJUU3hSUVVGT08wVkJRMEVzV1VGQlZ5eFJRVUZZT3p0QlFVdEVPMFZCUTBNc1QwRkJUU3hSUVVGT096dEJRVTFFTzBGQlEwRTdSVUZEUXl4alFVRmhMRkZCUVdJN08wRkJWVVE3UlVGRFF5eFBRVUZOTEV0QlFVNDdSVUZEUVN4UlFVRlBMRWRCUVZBN08wRkJWVVE3UlVGRFF5eGhRVUZaTEhGQ1FVRmFPMFZCUTBFc1QwRkJUU3hSUVVGT08wVkJRMEVzV1VGQlZ5eFJRVUZZT3p0QlFVbERPMFZCUTBNc1QwRkJUU3hSUVVGT096dEJRVVZFTzBWQlEwTXNUMEZCVFN4elFrRkJUanM3UVVGTFNEdEZRVU5ETEdOQlFXRXNVVUZCWWp0RlFVTkJMR3RDUVVGcFFpeFJRVUZxUWp0RlFVTkJMRTlCUVUwc1VVRkJUanM3UVVGSlF6dEZRVU5ETEU5QlFVMHNVVUZCVGpzN1FVRkZSRHRGUVVORExFOUJRVTBzVVVGQlRqczdRVUZOU0R0RlFVTkRMRTlCUVUwc1VVRkJUanM3UVVGTlJEdEZRVU5ETEU5QlFVMHNVVUZCVGpzN1FVRkZRVHRGUVVORExFOUJRVTBzVVVGQlRqczdRVUZGUkR0RlFVTkRMRTlCUVUwc1VVRkJUanM3UVVGTlJqdEZRVU5ETEd0Q1FVRnBRaXg1UWtGQmFrSTdSVUZEUVN4UFFVRk5MRzlEUVVGT096dEJRVVZFTzBWQlEwTXNhMEpCUVdsQ0xEWkNRVUZxUWp0RlFVTkJMRTlCUVUwc2QwTkJRVTQ3TzBGQlZVUTdSVUZEUXl4aFFVRnpSQ3dyU0VGQmRFUTdPMEZCVFVRN1JVRkRReXhsUVVGakxIbENRVUZrT3p0QlFVVkVPMFZCUTBNc1pVRkJZeXg1UWtGQlpEczdRVUZMUkR0RlFVTkRMRTlCUVUwc1VVRkJUanRGUVVOQkxHdENRVUZwUWl4UlFVRnFRanM3UVVGdFFrUTdSVUZEUXl4UFFVRk5MRkZCUVU0N1JVRkRRU3haUVVGWExIVkNRVUZZT3p0QlFVdEVPMFZCUTBNc1QwRkJUU3h2UWtGQlRqdEZRVU5CTEZsQlFWY3NiMEpCUVZnN08wRkJWMFE3UlVGRFF5eFBRVUZOTEZGQlFVNDdPMEZCVFVRN1JVRkRReXhSUVVGUExHOURRVUZRTzBWQlEwRXNXVUZCVnl4M1FrRkJXRHM3UVVGWFJEdEJRVU5CTzBWQlEwTXNUMEZCVFN4UlFVRk9PMFZCUTBFc2EwSkJRV2xDTEZGQlFXcENPenRCUVVkRU8wVkJRME1zVDBGQlRTeFJRVUZPTzBWQlEwRXNhMEpCUVdsQ0xGRkJRV3BDT3p0QlFVbERPMFZCUTBNc1QwRkJUU3hSUVVGT08wVkJRMEVzYTBKQlFXbENMRkZCUVdwQ096dEJRVVZCTzBWQlEwTXNUMEZCVFN4UlFVRk9PMFZCUTBFc2EwSkJRV2xDTEZGQlFXcENPenRCUVVWQk8wVkJRME1zWTBGQllTeFJRVUZpT3p0QlFVZE1PMFZCUTBNc1QwRkJUU3hSUVVGT08wVkJRMEVzYTBKQlFXbENMRkZCUVdwQ08wRkJSVUU3TzBGQlMwRTdPenRCUVVoQk8wVkJRME1zWTBGQllTeFJRVUZpT3p0QlFVbEVPMFZCUTBNc1QwRkJUU3hSUVVGT08wVkJRMEVzYTBKQlFXbENMRkZCUVdwQ096dEJRVVZCTzBWQlEwTXNZMEZCWVN4UlFVRmlPenRCUVV0SU8wVkJRME1zYTBKQlFXbENMRkZCUVdwQ08wRkJRMEU3TzBWQlJVRXNXVUZCVnl4UlFVRllPenRCUVVWQk8wVkJRME1zVDBGQlRTeFJRVUZPTzBWQlEwRXNhMEpCUVdsQ0xGRkJRV3BDT3p0QlFVZEdPMFZCUTBNc1QwRkJUU3hSUVVGT096dEJRVVZCTzBWQlEwTXNUMEZCVFN4UlFVRk9PMFZCUTBFc2EwSkJRV2xDTEZGQlFXcENPenRCUVV0elF6dEJRVU4yUXp0SlFVTkRMR3RDUVVGcFFpeFJRVUZxUWpzN08wRkJXVVk3UVVGSlF6dEJRVU5CTzBWQlEwTXNhMEpCUVdsQ0xGRkJRV3BDT3p0QlFVVkdJaXdpWm1sc1pTSTZJbk50WlhKMExYTjJiMkp2WkdVdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHlwY2JrQkJkWFJvYjNJNklFdHlhWE4wYVc1cGRHRmNia0JFWVhSbE9pQWdJREl3TVRjdE1ETXRNVFVnTVRjNk1EWTZNelZjYmtCTVlYTjBJRTF2WkdsbWFXVmtJR0o1T2lBZ0lFdHlhWE4wYVc1cGRHRmNia0JNWVhOMElFMXZaR2xtYVdWa0lIUnBiV1U2SURJd01UY3RNRFV0TURrZ01UVTZNVGs2TlRSY2Jpb3ZYRzVjYmxOaGMyaGhMVUp2WkhrdFFtRmphMmR5YjNWdVpDQTlJQ013T0RBMU5HVmNibE5oYzJoaExVSnZaSGt0Um05eVpXZHliM1Z1WkNBOUlHeGhkbVZ1WkdWeVlteDFjMmhjYmx4dVUyRnphR0V0VEdsdWF5QTlJSEJzZFcxY2JsTmhjMmhoTFVodmRtVnlMVXhwYm1zZ1BTQnBibVJwWjI5Y2JsTmhjMmhoTFVadlkzVnpMVXhwYm1zZ1BTQmtZWEpyYjJ4cGRtVm5jbVZsYmx4dVhHNHZMeUJUWVhOb1lTMUNaV2RwYmkxRGRYSnphWFpsSUQwZ1pHRnlhMk41WVc1Y2JpOHZJRk5oYzJoaExVVnVaQzFEZFhKemFYWmxJRDBnYldWa2FYVnRjMnhoZEdWaWJIVmxYRzVUWVhOb1lTMUZiU0E5SUdOdmNtNW1iRzkzWlhKaWJIVmxYRzVjYmxOaGMyaGhMVU52ZG1WeUxWUmxlSFFnUFNCM2FHbDBaVnh1WEc1VFlYTm9ZUzFNWldaMExVSnZjbVJsY2lBOUlHeGhkbVZ1WkdWeVhHNVRZWE5vWVMxTVpXWjBMVUp2Y21SbGNpMUNiRzlqYTNGMWIzUmxMVVp2Y21WbmNtOTFibVFnUFNCemJHRjBaV0pzZFdWY2JsTmhjMmhoTFV4bFpuUXRRbTl5WkdWeUxVSnNiMk5yY1hWdmRHVXRRbUZqYTJkeWIzVnVaQ0E5SUNObVkyWmpabU5jYmx4dUx5OGdXMGxPUms5ZElHMWxaR2wxYlhacGIyeGxkSEpsWkNBcklFWnBjbVZtYjNnZ1kyOXNiM0lnY0dGc1pYUjBaVnh1VTJGemFHRXRSRzkwSUQwZ0kySm1NR0UzWTF4dVUyRnphR0V0Ukc5MExVeHBaMmgwSUQwZ1kyOXlibk5wYkd0Y2JseHVVMkZ6YUdFdFZHVnliUzFDYkc5amEzRjFiM1JsTFVKdmNtUmxjaUE5SUNObVpqVTNNekJjYmxOaGMyaGhMVlJsY20wdFFteHZZMnR4ZFc5MFpTMUNZV05yWjNKdmRXNWtJRDBnY0dWaFkyaHdkV1ptWEc0dkx5QmJTVTVHVDEwZ2JXVmthWFZ0ZG1sdmJHVjBjbVZrSUNzZ1JtbHlaV1p2ZUNCamIyeHZjaUJ3WVd4bGRIUmxYRzVUWVhOb1lTMVVaWEp0TFVKc2IyTnJjWFZ2ZEdVdFJtOXlaV2R5YjNWdVpDQTlJQ05pWmpCaE4yTmNibE5oYzJoaExWUmxjbTB0UW14dlkydHhkVzkwWlMxTWFXNXJJRDBnY205NVlXeGliSFZsWEc0dkx5QmJTVTVHVDEwZ2MybGxibTVoSUNzZ1JtbHlaV1p2ZUNCamIyeHZjaUJ3WVd4bGRIUmxYRzVUWVhOb1lTMVVaWEp0TFVKc2IyTnJjWFZ2ZEdVdFJXMGdQU0FqT1dJMFpESTRYRzVjYmxOaGMyaGhMVVZ3YVdkeVlYQm9JRDBnWW1semNYVmxYRzVUWVhOb1lTMUZjR2xuY21Gd2FDMUJkWFJvYjNJZ1BTQnNhV2RvZEhCcGJtdGNibHh1VTJGemFHRXRRMmwwWVhScGIyNHRRbVYwZDJWbGJpMVJkVzkwWlhNZ1BTQnNhV2RvZEdkeVpXVnVYRzVjYmxOaGMyaGhMVk53WVc0dFJtOXlaV2R5YjNWdVpDQTlJRzFsWkdsMWJYWnBiMnhsZEhKbFpGeHVVMkZ6YUdFdFUzQmhiaTFDWVdOclozSnZkVzVrSUQwZ1ltbHpjWFZsWEc1Y2JsTmhjMmhoTFZOb1lXUnZkM010VG1WdmJpMUJjbTkxYm1RdFZHVjRkQ0E5SUhKblltRW9NalUxSURBZ01qSXlJREVwWEc1Y2JpOHZJRVJwWm1abGNtVnVkQ0JsYkdWdFpXNTBjMXh1WEc1VFlYTm9ZUzFUWld4bFkzUnBiMjR0Um05eVpXZHliM1Z1WkNBOUlHeHBaMmgwWTI5eVlXeGNibE5oYzJoaExWTmxiR1ZqZEdsdmJpMUNZV05yWjNKdmRXNWtJRDBnY21kaVlTZ3lOVFVnTWpJNElERTRNU0F1T1RrcFhHNWNiaTh2SUVGa1pGUnZRVzU1WEc1Y2JsTmhjMmhoTFVGa1pDMVVieTFCYm5rZ1BTQmtaV1Z3Y0dsdWExeHVYRzVjYmk4dklGZHBiR1JtYVhKbFhHNWNiaThxSUZ0RVJWQlNSVU5CVkVWRVhTQlhhV3hrWm1seVpTQnVieUJzYjI1blpYSWdablZ1WTNScGIyNXBibWNnYlc5eVpWeHVYRzVUWVhOb1lTMVhhV3hrWm1seVpTMUdiM0psWjNKdmRXNWtJRDBnWTJodlkyOXNZWFJsWEc1VFlYTm9ZUzFYYVd4a1ptbHlaUzFDY205clpXNHRTR1ZoY25RZ1BTQnRaV1JwZFcxemJHRjBaV0pzZFdWY2JsTmhjMmhoTFZkcGJHUm1hWEpsTFVobFlYSjBJRDBnWkdGeWEyZHZiR1JsYm5KdlpGeHVVMkZ6YUdFdFYybHNaR1pwY21VdFFuVjBkRzl1TFVKaFkydG5jbTkxYm1RZ1BTQm9jMnhoS0RBZ01DQXhNREFnTGpJcFhHNHFMMXh1WEc1Y2JpOHZJRXRDUkZ4dVUyRnphR0V0UzBKRUxXWnZjbVZuY205MWJtUWdQU0J6WldGemFHVnNiRnh1VTJGemFHRXRTMEpFTFdKaFkydG5jbTkxYm1RZ1BTQmljbTkzYmx4dVhHNHZLaUJWYm5abGNtbG1hV1ZrSUVadmNpQlFkWEpwWm5sRFUxTmNibHgwUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1VTJGemFHRXRRbTkwZEc5dExWQmxjbU5sYm5RZ1BTQTRKVnh1WEc1VFlYTm9ZUzFGY0dsbmNtRndhQzFGYlNBOUlDTm1abVJqTXpOY2JseHVVMkZ6YUdFdFNXMWhaMlV0VTJoaFpHOTNJRDBnWW14aFkydGNibHh1VTJGemFHRXRTVzVzYVc1bExVTnZaR1VnUFNCa1lYSnJjMnhoZEdWbmNtVjVYRzVjYmxOaGMyaGhMVWh5SUQwZ2JXVmthWFZ0ZG1sdmJHVjBjbVZrWEc1VFlYTm9ZUzFDYkc5amEzRjFiM1JsTFVWdElEMGdVMkZ6YUdFdFJXMWNibHh1UUdsdGNHOXlkQ0JjSW01bGJHbGpZVzR0ZEdobGJXVnpMV052Y21VdFpHVnphV2R1TG5OMGVXeGNJbHh1SWl3aUx5cGNiaW9nUkdWelkzSnBjSFJwYjI0NklFUmxjMmxuYmlCbWIzSWdTM0pwYzNScGJtbDBZU2R6SUZObFlYSmphQ0J3WVdkbGMxeHVLaUJCZFhSb2IzSTZJRk5oYzJoaElFTm9aWEp1ZVd0b1hHNHFJRWx0Y0c5eWRDQXJJSFpoY21saFlteGxjeURpZ0pRZ2FIUjBjSE02THk5emRHRmphMjkyWlhKbWJHOTNMbU52YlM5aEx6UTNPVGN4TlRneUx6VTVOVEUxTWpsY2Jpb2dUblFnNG9DVUlHNXZkQ0IwWlhOMFpXUWdjSEp2Y0dWeWRHbGxjMXh1S2k5Y2JseHVMeXBjYmlvZ1ZFOURYRzRxWEc0cUlFZGxibVZ5WVd4Y2Jpb2dMU0JDYjJSNVhHNHFJQzBnVEdsdWEzTmNiaW9nTFNCRGRYSnphWFpsWEc0cUlDMGdTVzFoWjJWelhHNHFJQzBnUzBKRVhHNHFJQzBnYUhKY2Jpb2dMU0JVWVdKc1pYTmNiaW9nUVhOcFpHVmNiaW9nTFNCamIzWmxjaTEwWlhoMFhHNHFJRUpzYjJOcmNYVnZkR1Z6WEc0cUlDMGdUR1ZtZEMxaWIzSmtaWElnWW14dlkydHhkVzkwWlZ4dUtpQXRJRlJsY20xelhHNHFJQzBnVVhWdmRHVnpJSFJ2Y0NCaGJtUWdZbTkwZEc5dFhHNHFJQzBnUlhCcFozSmhjR2hjYmlvZ0xTQkhhVzVuWlhKcGJtRnpJR1Y0WVcxd2JHVmNiaW9nUkdWamIzSmhkR2x2Ymx4dUtpQXRJRk5vWVdSdmQzTmNiaW9nTFNCRWIzUnpYRzRxSUMwZ1EyOXNiM0psWkNCMFpYaDBYRzRxSUVScFptWmxjbVZ1ZENCbGJHVnRaVzUwYzF4dUtpQXRJRU4xYzNSdmJTQnpaV3hsWTNScGIyNWNiaW9nTFNCSExWSnBaMmgwYzF4dUtpQXRJRU5vYVd4a0lHVnNaVzFsYm5SelhHNHFJQzBnWm1sbmRYSmxYRzRxSUVWNGRHVnlibUZzSUhCc2RXZHBibk5jYmlvZ0xTQkNkV3h0WVZ4dUtpQXRJRUZrWkZSdlFXNTVYRzRxSUMwZ1YybHNaSGRwY21WY2Jpb3ZYRzVjYmx4dUx5cGNiaW9nVkU5RElHZGxibVZ5WVhSbFpDQmllU0JVWVdKc1pTQnZaaUJEYjIxdFpXNTBjeUJUZFdKc2FXMWxJRlJsZUhRZ2NHeDFaMmx1T2x4dUtpQm9kSFJ3Y3pvdkwzQmhZMnRoWjJWamIyNTBjbTlzTG1sdkwzQmhZMnRoWjJWekwxUmhZbXhsSlRJd2IyWWxNakJqYjIxdFpXNTBjMXh1S2lCYlYwRlNUa2xPUjEwZ1VHeGhZMlVnZEdocGN5QmpiMjF0Wlc1MGN5QmhablJsY2lCVVQwTXNJRzkwYUdWeWQybHpaU0JVVDBNZ2QybHNiQ0JwYm1OdmNuSmxZM1F1WEc0cUlGdENWVWRkSUZSaFlteGxJRzltSUVOdmJXMWxiblJ6SUdoaGRtVWdjMjl0WlNCaWRXZHpPbHh1S2lCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmEybDZlbUV2VkdGaWJHVXRiMll0WTI5dGJXVnVkSE12YVhOemRXVnpYRzRxTDF4dVhHNWNiaThxWEc1YlNVNUdUMTBnUVd4c0lOQ3YwTDNRdE5DMTBMclJnUzdRbXRDKzBMdlF0TkdEMEwzUmlkQzQwTG9nWTI5c2IzSnpPbHh1YUhSMGNITTZMeTl0WVhocGJXRnNMbWRwZEdoMVlpNXBieTlqYjJ4dmRYSXZYRzVjYmx0SlRrWlBYU0JEYjI1MGNtRnpkQ0JtYVc1a1pYSWc0b0NVSUdacGJtUWdZMjlzYjNJZ2QyaHBZMmdnYldGMFkyZ2dWMU5CUnlCamNtbDBaWEpwWVhNNlhHNW9kSFJ3Y3pvdkwyRndjQzVqYjI1MGNtRnpkQzFtYVc1a1pYSXViM0puTHo5c1lXNW5QV1Z1WEc0cUwxeHVYRzVjYmk4cVhHNHFJRUZTUjBJZ2NHVnlZMlZ1ZEdGblpTQjBZV0pzWlRwY2Jpb2dhSFIwY0hNNkx5OWpiMlJsY25kaGJHd3VZMjl0TDNBdlpHVmtjV05oTDJGeVoySXRZMjlzYjNKekxXbHVMV0Z1WkhKdmFXUmNiaW92WEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseDBQaUJIWlc1bGNtRnNYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUlENCtJRUp2WkhsY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVZbTlrZVZ4dVhIUmlZV05yWjNKdmRXNWtJRk5oYzJoaExVSnZaSGt0UW1GamEyZHliM1Z1WkZ4dVhIUmpiMnh2Y2lCVFlYTm9ZUzFDYjJSNUxVWnZjbVZuY205MWJtUmNibHh1THlvZ1BqNGdUR2x1YTNOY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeXBjYmlvZ1FtRmphMmR5YjNWdVpDQmpiMnh2Y2lCdlppQnNhVzVyY3lCaWVTQm9iM1psY2x4dUtpOWNibHh1THlwY2Jpb2dRbUZqYTJkeWIzVnVaQ0JqYjJ4dmNpQnZaaUJzYVc1cmN5d2dhV1lnZFhObGNpQnRiM1psSUdKbGRIZGxaVzRnYkdsdWEzTWdkWE5sSUhSaFlpQnJaWGxjYmlvZ2FIUjBjSE02THk5amMzTXRkSEpwWTJ0ekxtTnZiUzloYkcxaGJtRmpMM05sYkdWamRHOXljeTltTDJadlkzVnpMMXh1S2k5Y2JseHVZVnh1WEhSamIyeHZjaUJUWVhOb1lTMU1hVzVyWEc1Y2JseDBKanBvYjNabGNseHVYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0lnVTJGemFHRXRTRzkyWlhJdFRHbHVhMXh1WEc1Y2RDWTZabTlqZFhOY2JseDBYSFJpWVdOclozSnZkVzVrSUZOaGMyaGhMVVp2WTNWekxVeHBibXRjYmx4dVhHNHZLbHh1VzBsT1JrOWRJRVJsWVdRZ2JHbHVhM05jYm1oMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5emFXeGxiblJzWVcxaUwzQmxiR2xqWVc0dFpHVmhaR3hwYm10elhHNHFMMXh1WEc0dktpRENxOUNRMEx6UXNOR0EwTERRdmRHQzBMN1FzdEdMMExuQ3V5RFFyOUM5MExUUXRkQzYwWUV1MEpyUXZ0QzcwTFRSZzlDOTBZblF1TkM2SUdadmNpQnpkV0pzYVcxbExYUmxlSFFnS2k5Y2JseHVMbE5oYzJoaFJHVmhaR3hwYm10Y2JseDBZMjlzYjNJZ1UyRnphR0V0UkdWaFpDMU1hVzVyWEc1Y2JseHVMeW9nUGo0Z1EzVnljMmwyWlZ4dVhIUTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHZLbHh1VzBSRlVGSkZRMEZVUlVSZFhHNURkWEp6YVhabFhHNUdiM0lnYUdsbmFHeHBaMmgwYVc1bklHNXZiaTFqYjJSbElHVnNaVzFsYm5SelhHNVVaWGgwSUdkeVlXUnBaVzUwWEc1b2RIUndPaTh2YzNSaFkydHZkbVZ5Wm14dmR5NWpiMjB2Y1M4ek56Z3pNVGd6Tnk4MU9UVXhOVEk1WEc1Y2JrUnZiaWQwSUhOMWNIQnZjblFnWVd4c0lHSnliM2R6WlhKelhHNW9kSFJ3Y3pvdkwyUmxkbVZzYjNCbGNpNXRiM3BwYkd4aExtOXlaeTlsYmkxVlV5OWtiMk56TDFkbFlpOURVMU12WW1GamEyZHliM1Z1WkMxamJHbHdJMEp5YjNkelpYSmZZMjl0Y0dGMGFXSnBiR2wwZVZ4dVhHNWJRbFZIWFNCVVpYaDBJSGR5WVhCd2FXNW5JSGR2Y210eklHbHVZMjl5Y21WamREcGNibWgwZEhCek9pOHZjM1JoWTJ0dmRtVnlabXh2ZHk1amIyMHZjUzgxTURBNE5EQTVOQzgxT1RVeE5USTVYRzVjYm1WdFhHNWNkR0poWTJ0bmNtOTFibVF0YVcxaFoyVWdiR2x1WldGeUxXZHlZV1JwWlc1MEtIUnZJSEpwWjJoMExDQlRZWE5vWVMxQ1pXZHBiaTFEZFhKemFYWmxMQ0JUWVhOb1lTMUZibVF0UTNWeWMybDJaU2xjYmx4MExYZGxZbXRwZEMxaVlXTnJaM0p2ZFc1a0xXTnNhWEFnZEdWNGRGeHVYSFJqYjJ4dmNpQjBjbUZ1YzNCaGNtVnVkRnh1S2k5Y2JtVnRYRzVjZEdOdmJHOXlJRk5oYzJoaExVVnRYRzVjYmk4dklFUm1iaURpZ0pRZ1pHVm1hVzVwZEdsdmJseHVMeThnYUhSMGNEb3ZMMmgwYld4aWIyOXJMbkoxTDJoMGJXd3ZaR1p1WEc1a1ptNWNibHgwWTI5c2IzSWdVMkZ6YUdFdFJHWnVYRzVjYmk4cUlENCtJRWx0WVdkbGMxeHVYSFE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2THlCVGFHRmtiM2RjYmx4dWFXMW5YRzVjZEdKdmVDMXphR0ZrYjNjZ01DQXdJREp5WlcwZ1UyRnphR0V0U1cxaFoyVXRVMmhoWkc5M1hHNWNiaThxWEc1YlNVNUdUMTBnUkdsellXSnNaU0J6YUdGa2IzZHpJR1p2Y2lCemJXRnNiQ0JwYldGblpYTTdYRzV3WVhKMGFXTjFiR0Z5Ykhrc0lHWnZjaUJMY21semRHbHViMmR5WVdRZ1kyRjBaV2R2Y21sbGN5QnBZMjl1Y3pwY2J1S0FuRzFwYmkxM2FXUjBhT0tBblN3Z1ltVmpZWFZ6WlNCcFkyOXVjeUJrWldOeVpXRnpaU0JwYmlCdGIySnBiR1VnZEdGaWJHVnpYRzRxTDF4dUxsTmhjMmhoVG05VGFHRmtiM2R6U1cxaFoyVmNibHgwWW05NExYTm9ZV1J2ZHlCdWIyNWxYRzVjZEcxcGJpMTNhV1IwYUNBeWNtVnRYRzVjYmk1VFlYTm9ZVkJoWjJWTWIyRmthVzVuWEc1Y2RHSnZlQzF6YUdGa2IzY2dibTl1WlZ4dVhIUXZLbHh1WEhSYlNVNUdUMTBnVkhKaFkydHBibWNnZDJsc2JDQnpkR2xzYkRwY2JseDBhSFIwY0hNNkx5OWxiaTV5ZVhSbExtTnZiUzkzYVd0cEwxUnlZV05yYVc1blgxQnBlR1ZzWEc1Y2RDb3ZYRzVjZEdScGMzQnNZWGtnYm05dVpWeHVYRzR2S2lBK1BpQkxRa1JjYmx4MFBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dWEySmtYRzVjZEdOdmJHOXlJRk5oYzJoaExVdENSQzFtYjNKbFozSnZkVzVrWEc1Y2RHSmhZMnRuY205MWJtUWdVMkZ6YUdFdFMwSkVMV0poWTJ0bmNtOTFibVJjYmx4dUx5b2dQajRnYUhKY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVhSEpjYmx4MFkyOXNiM0lnVTJGemFHRXRTSEpjYmx4dUx5b2dQajRnVkdGaWJHVnpYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4cUlGdFNSVkZWU1ZKRlJGMGdLaTljYm5Sa1hHNTBhRnh1WEhSaWIzSmtaWEl0WTI5c2IzSWdVMkZ6YUdFdFFtOWtlUzFHYjNKbFozSnZkVzVrWEc1Y2JseHVMeW9nUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseDBQaUJCYzJsa1pWeHVYSFE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR2S2lBK1BpQmpiM1psY2kxMFpYaDBYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk1VFlYTm9ZVUZ6YVdSbFFtOTBkRzl0VkdWNGRGeHVYSFJqYjJ4dmNpQlRZWE5vWVMxRGIzWmxjaTFVWlhoMFhHNWNkR0p2ZEhSdmJTQlRZWE5vWVMxQ2IzUjBiMjB0VUdWeVkyVnVkRnh1WEc1Y2JpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2RENGdRbXh2WTJ0eGRXOTBaWE5jYmx4MFBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b2dQajRnVEdWbWRDMWliM0prWlhJZ1lteHZZMnR4ZFc5MFpWeHVYSFE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzVpYkc5amEzRjFiM1JsWEc1Y2RHSnZjbVJsY2kxc1pXWjBJSE52Ykdsa0lGTmhjMmhoTFV4bFpuUXRRbTl5WkdWeUlDNDFjbVZ0WEc1Y2RHTnZiRzl5SUZOaGMyaGhMVXhsWm5RdFFtOXlaR1Z5TFVKc2IyTnJjWFZ2ZEdVdFJtOXlaV2R5YjNWdVpGeHVYSFJpWVdOclozSnZkVzVrSUZOaGMyaGhMVXhsWm5RdFFtOXlaR1Z5TFVKc2IyTnJjWFZ2ZEdVdFFtRmphMmR5YjNWdVpGeHVYRzVjZEQ1d1hHNWNkRngwTHk4Z1cwbE9SazlkSUVsMFlXeHBZeUIwWlhoMElHbHVjMmxrWlNCaWJHOWphM0YxYjNSbFhHNWNkRngwUG1WdFhHNWNkRngwWEhSamIyeHZjaUJUWVhOb1lTMUNiRzlqYTNGMWIzUmxMVVZ0WEc1Y2RGeDBMeThnVzBsT1JrOWRJRXhwYm1zZ2FXNXphV1JsSUdKc2IyTnJjWFZ2ZEdWY2JseDBYSFErWVZ4dVhIUmNkRngwWTI5c2IzSWdVMkZ6YUdFdFFteHZZMnR4ZFc5MFpTMU1hVzVyWEc1Y2JpOHFJRDQrSUZSbGNtMXpYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk1VFlYTm9ZVUpzYjJOcmNYVnZkR1ZDYkc5amEzTjBlV3hsWEc1Y2RHSnZjbVJsY2kxamIyeHZjaUJUWVhOb1lTMVVaWEp0TFVKc2IyTnJjWFZ2ZEdVdFFtOXlaR1Z5WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJZ1UyRnphR0V0VkdWeWJTMUNiRzlqYTNGMWIzUmxMVUpoWTJ0bmNtOTFibVJjYmx4MFkyOXNiM0lnVTJGemFHRXRWR1Z5YlMxQ2JHOWphM0YxYjNSbExVWnZjbVZuY205MWJtUmNibHh1WEhRK2NGeHVYSFJjZEM4dklGdEpUa1pQWFNCSmRHRnNhV01nZEdWNGRDQnBibk5wWkdVZ1lteHZZMnR4ZFc5MFpWeHVYSFJjZEQ1bGJWeHVYSFJjZEZ4MFkyOXNiM0lnVTJGemFHRXRWR1Z5YlMxQ2JHOWphM0YxYjNSbExVVnRYRzVjZEZ4MEx5OGdXMGxPUms5ZElFeHBibXNnYVc1emFXUmxJSFJsY20wZ1lteHZZMnR4ZFc5MFpWeHVYSFJjZEQ1aFhHNWNkRngwWEhSamIyeHZjaUJUWVhOb1lTMVVaWEp0TFVKc2IyTnJjWFZ2ZEdVdFRHbHVhMXh1WEc0dktpQStQaUJSZFc5MFpYTWdkRzl3SUdGdVpDQmliM1IwYjIxY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9nUTJsMFlYUnBiMjRnWW1WMGQyVmxiaUIwYjNBZ1lXNWtJR0p2ZEhSdmJTQnhkVzkwWlhNZ0tpOWNiaTVUWVhOb1lWQjFiR3hSZFc5MFpWeHVYSFJqYjJ4dmNpQlRZWE5vWVMxRGFYUmhkR2x2YmkxQ1pYUjNaV1Z1TFZGMWIzUmxjMXh1WEc0dktpQStQaUJGY0dsbmNtRndhRnh1WEhROVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpRFFrZEM3MExYUmdkR0MwWS9SaWRDNDBMa2cwTGZRdGRDNzBMWFF2ZEMrMExMUXNOR0MwTDR0MExiUmtkQzcwWUxSaTlDNUxDRFFyOUM5MExUUXRkQzYwWUV1MEpyUXZ0QzcwTFRSZzlDOTBZblF1TkM2SUdadmNpQnpkV0pzYVcxbExYUmxlSFF1YzNSNWJDQXFMMXh1TGxOaGMyaGhSWEJwWjNKaGNHaGNibHgwWTI5c2IzSWdVMkZ6YUdFdFJYQnBaM0poY0doY2JseHVYSFErTGxOaGMyaGhSWEJwWjNKaGNHaEJkWFJvYjNKY2JseDBYSFJqYjJ4dmNpQlRZWE5vWVMxRmNHbG5jbUZ3YUMxQmRYUm9iM0pjYmx4dVhIUStaVzFjYmx4MFhIUmpiMnh2Y2lCVFlYTm9ZUzFGY0dsbmNtRndhQzFGYlZ4dVhHNHZLaUErUGlCSGFXNW5aWEpwYm1GeklHVjRZVzF3YkdWY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeThnUTI5c2IzSWdabTl5SUdkcGJtZGxjbWx1WVhNdWMzUjViQ0RpZ0pRZ1ozSmxaVzRnZEdWaElHbHVJTUtyMEsvUXZkQzAwTFhRdXRHQkxpRFFtdEMrMEx2UXROR0QwTDNSaWRDNDBMckN1MXh1TGxOaGMyaGhSMmx1WjJWeWFXNWhjMFY0WVcxd2JHVmNibHgwWW1GamEyZHliM1Z1WkMxamIyeHZjaUJUWVhOb1lTMUhhVzVuWlhKcGJtRnpMVVY0WVcxd2JHVmNibHgwWTI5c2IzSWdVMkZ6YUdFdFIybHVaMlZ5YVc1aGN5MUZlR0Z0Y0d4bExVWnZjbVZuY205MWJtUmNibHh1TGxOaGMyaGhSMmx1WjJWeWFXNWhjMEpoWkVWNFlXMXdiR1ZjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2lCVFlYTm9ZUzFIYVc1blpYSnBibUZ6TFVKaFpDMUZlR0Z0Y0d4bFhHNWNkR052Ykc5eUlGTmhjMmhoTFVkcGJtZGxjbWx1WVhNdFFtRmtMVVY0WVcxd2JHVXRSbTl5WldkeWIzVnVaRnh1WEc1Y2JpOHFJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc1Y2RENGdSR1ZqYjNKaGRHbHZibHh1WEhROVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBTQXFMMXh1WEc0dktpQStQaUJUYUdGa2IzZHpYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk1VFlYTm9ZVk5vWVdSdmQzTk9aVzl1UVhKdmRXNWtWR1Y0ZEZ4dVhIUjBaWGgwTFhOb1lXUnZkeUF3SURBZ0xqWXlOWEpsYlNCVFlYTm9ZUzFUYUdGa2IzZHpMVTVsYjI0dFFYSnZkVzVrTFZSbGVIUXNJREFnTUNBeExqSTFjbVZ0SUZOaGMyaGhMVk5vWVdSdmQzTXRUbVZ2YmkxQmNtOTFibVF0VkdWNGRDd2dNQ0F3SURFdU9EYzFjbVZ0SUZOaGMyaGhMVk5vWVdSdmQzTXRUbVZ2YmkxQmNtOTFibVF0VkdWNGRDd2dNQ0F3SURJdU5YSmxiU0JUWVhOb1lTMVRhR0ZrYjNkekxVNWxiMjR0UVhKdmRXNWtMVlJsZUhRc0lEQWdNQ0F6TGpFeU5YSmxiU0JUWVhOb1lTMVRhR0ZrYjNkekxVNWxiMjR0UVhKdmRXNWtMVlJsZUhRc0lEQWdNQ0F6TGpjMWNtVnRJRk5oYzJoaExWTm9ZV1J2ZDNNdFRtVnZiaTFCY205MWJtUXRWR1Y0ZEZ4dVhHNHZLaUErUGlCRWIzUnpYRzVjZEQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOUlDb3ZYRzVjYmk4dklFUnZkSE1nZFc1a1pYSWdaV3hsYldWdWRITmNiaTVUWVhOb1lVUnZkRnh1WEhSaWIzSmtaWEl0WW05MGRHOXRJQzR3TmpJMWNtVnRJR1J2ZEhSbFpDQlRZWE5vWVMxRWIzUmNibHh1TGxOaGMyaGhSRzkwVEdsbmFIUmNibHgwWW05eVpHVnlMV0p2ZEhSdmJTQXVNRFl5TlhKbGJTQmtiM1IwWldRZ1UyRnphR0V0Ukc5MExVeHBaMmgwWEc1Y2JpOHFJRDQrSUVOdmJHOXlaV1FnZEdWNGRGeHVYSFE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR1VTJGemFHRlRjR0Z1WEc1Y2RHTnZiRzl5SUZOaGMyaGhMVk53WVc0dFJtOXlaV2R5YjNWdVpGeHVYSFJpWVdOclozSnZkVzVrTFdOdmJHOXlJRk5oYzJoaExWTndZVzR0UW1GamEyZHliM1Z1WkZ4dVhHNWNiaThxSUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNWNkRDRnUkdsbVptVnlaVzUwSUdWc1pXMWxiblJ6WEc1Y2REMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFJRDQrSUVOMWMzUnZiU0J6Wld4bFkzUnBiMjVjYmx4MFBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMGdLaTljYmx4dUx5b2dXMDVQVkVWZElFNWxaV1J6SUdoaFkyc3NJSFJvWVhRZzRvQ2NPanB6Wld4bFkzUnBiMjdpZ0owZ2NITmxkV1J2TFdWc1pXMWxiblFnZDI5eWEzTWdhVzRnWVd4c0lHSnliM2R6WlhKek9seHVLaUJvZEhSd2N6b3ZMM0oxTG5OMFlXTnJiM1psY21ac2IzY3VZMjl0TDJFdk5UazFPREE1THpFNU9Ua3pORnh1S2lCYlRrOVVSVjBnNG9DY0xXMXZlaTNpZ0owZ2NISmxabWw0SUc1dmRDQnVaV1ZrWldRZ2MybHVZMlVnUm1seVpXWnZlQ0EyTVRwY2Jpb2dhSFIwY0hNNkx5OWpZVzVwZFhObExtTnZiUzhqYzJWaGNtTm9QU1V6UVhObGJHVmpkR2x2Ymx4dUtpQm9kSFJ3T2k4dmNuVXVjM1JoWTJ0dmRtVnlabXh2ZHk1amIyMHZZUzgxT1RVNE1Ea3ZNVGs1T1RNMFhHNHFJRnRKVGtaUFhTQkZlR2x6ZEhNZzRvQ2NPaTF0YjNvdGQybHVaRzkzTFdsdVlXTjBhWFpsNG9DZElITnZiR1ZzZVN3Z2JtOTBJT0tBbkhkcGJtUnZkeTFwYm1GamRHbDJaZUtBblRwY2Jpb2dhSFIwY0hNNkx5OWpZVzVwZFhObExtTnZiUzhqYzJWaGNtTm9QWGRwYm1SdmR5MXBibUZqZEdsMlpWeHVLaTljYmx4dU9qcHpaV3hsWTNScGIyNWNibHgwWTI5c2IzSWdVMkZ6YUdFdFUyVnNaV04wYVc5dUxVWnZjbVZuY205MWJtUmNibHgwWW1GamEyZHliM1Z1WkNCVFlYTm9ZUzFUWld4bFkzUnBiMjR0UW1GamEyZHliM1Z1WkZ4dVhHNHZLaUErUGlCSExWSnBaMmgwYzF4dVhIUTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQU0FxTDF4dVhHNHVTMmx5WVVkU2FXZG9kSE5jYmx4MFkyOXNiM0lnVTJGemFHRXRSMUl0Um05eVpXZHliM1Z1WkZ4dVhIUmlZV05yWjNKdmRXNWtJRk5oYzJoaExVZFNMVUpoWTJ0bmNtOTFibVJjYmx4dUx5b2dQajRnUTJocGJHUWdaV3hsYldWdWRITmNibHgwUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1THlwY2Jpb2dUM1psY25keWFYUmxJR052Ykc5eUlHTm9hV3hrSUdWc1pXMWxiblFzSUNGcGJYQnZjblJoYm5RZ1pHOWxjMjRuZENCM2IzSnJMRnh1S2lCb2RIUndPaTh2YzNSaFkydHZkbVZ5Wm14dmR5NWpiMjB2WVM4eU1USTVOekkwT0M4MU9UVXhOVEk1WEc0cUlFbGtaVzUwYVdOaGJDQmhjeUJpYjJSNUlHWnZjbVZuY205MWJtUmNiaW92WEc1Y2JpNVRZWE5vWVVWdFRtOURiMnh2Y2x4dVhIUmpiMnh2Y2lCVFlYTm9ZUzFDYjJSNUxVWnZjbVZuY205MWJtUmNibHh1THlvZ1BqNGdabWxuZFhKbFhHNWNkRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5SUNvdlhHNWNiaTh2SUdoMGRIQnpPaTh2ZDJWaWNtVm1MbkoxTDJoMGJXd3ZabWxuZFhKbFhHNHVVMkZ6YUdGVGFXZHVYRzVjZEdKdmNtUmxjaUF1TURZeU5YSmxiU0J6YjJ4cFpDQlRZWE5vWVMxR2FXZDFjbVV0UW05eVpHVnlYRzVjZEdKaFkydG5jbTkxYm1RZ1UyRnphR0V0Um1sbmRYSmxMVUpoWTJ0bmNtOTFibVJjYmx4dVhHNHZLaUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhIUStJRVY0ZEdWeWJtRnNJSEJzZFdkcGJuTmNibHgwUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwZ0tpOWNibHh1WEc0dktpQStQaUJDZFd4dFlWeHVYSFE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFNBcUwxeHVYRzR1Ym1GMlltRnlYRzR1ZEdGbk9tNXZkQ2hpYjJSNUtWeHVYSFJqYjJ4dmNpQlRZWE5vWVMxQ2IyUjVMVUpoWTJ0bmNtOTFibVJjYmx4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2lCVFlYTm9ZUzFDYjJSNUxVWnZjbVZuY205MWJtUmNibHh1WEc0dWJtRjJZbUZ5TFdsMFpXMWNibHgwWTI5c2IzSWdVMkZ6YUdFdFFtOWtlUzFDWVdOclozSnZkVzVrWEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJZ1UyRnphR0V0UW05a2VTMUdiM0psWjNKdmRXNWtYRzVjYmx4MEppNW9ZWE10WkhKdmNHUnZkMjVjYmx4dVhIUmNkQ1k2YUc5MlpYSmNibHgwWEhSY2RHTnZiRzl5SUZOaGMyaGhMVXhwYm10Y2JseDBYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0lnVTJGemFHRXRRbTlrZVMxQ1lXTnJaM0p2ZFc1a1hHNWNibHgwWEhSY2RDNXVZWFppWVhJdGJHbHVhMXh1WEhSY2RGeDBYSFJqYjJ4dmNpQlRZWE5vWVMxTWFXNXJYRzVjZEZ4MFhIUmNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSWdVMkZ6YUdFdFFtOWtlUzFDWVdOclozSnZkVzVrWEc1Y2JseDBYSFJjZEZ4MEpqcHViM1FvTG1sekxXRnljbTkzYkdWemN5azZPbUZtZEdWeVhHNWNkRngwWEhSY2RGeDBZbTl5WkdWeUxXTnZiRzl5SUZOaGMyaGhMVXhwYm10Y2JseHVYRzR1Ym1GMlltRnlMV3hwYm10Y2JseDBZMjlzYjNJZ1UyRnphR0V0UW05a2VTMUNZV05yWjNKdmRXNWtYRzVjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0lnVTJGemFHRXRRbTlrZVMxR2IzSmxaM0p2ZFc1a1hHNWNibHgwTHlvZ1cwbE9SazlkSUU1aGRtSmhjaUJoY25KdmR6cGNibHgwYUhSMGNITTZMeTlwTG1sdFozVnlMbU52YlM4NVdVVmxjVEF4TG5CdVp5QXFMMXh1WEhRbU9tNXZkQ2d1YVhNdFlYSnliM2RzWlhOektUbzZZV1owWlhKY2JseDBYSFJpYjNKa1pYSXRZMjlzYjNJZ1UyRnphR0V0UW05a2VTMUNZV05yWjNKdmRXNWtYRzVjYmx4MEx5b2dXMGxPUms5ZElPS0FuRHBvYjNabGN1S0FuU0J0ZFhOMElHSmxJR0psWm05eVpTRGlnSnc2T21GbWRHVnk0b0NkT2x4dVhIUm9kSFJ3Y3pvdkwzTjBZV05yYjNabGNtWnNiM2N1WTI5dEwyRXZNVE15TXpRd01qZ3ZOVGsxTVRVeU9TQXFMMXh1WEhRbU9taHZkbVZ5WEc1Y2RGeDBZMjlzYjNJZ1UyRnphR0V0VEdsdWExeHVYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0lnVTJGemFHRXRRbTlrZVMxQ1lXTnJaM0p2ZFc1a1hHNWNibHgwWEhRbU9tNXZkQ2d1YVhNdFlYSnliM2RzWlhOektUbzZZV1owWlhKY2JseDBYSFJjZEdKdmNtUmxjaTFqYjJ4dmNpQlRZWE5vWVMxTWFXNXJYRzVjYmx4dUx5b2dXMGxPUms5ZElFNWhkbUpoY2lCaWIzSmtaWEk2WEc1b2RIUndjem92TDJrdWFXMW5kWEl1WTI5dEwwcHBiM2xTU3pndWNHNW5JQ292WEc0dWJtRjJZbUZ5TFdSeWIzQmtiM2R1WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJZ1UyRnphR0V0UW05a2VTMUdiM0psWjNKdmRXNWtYRzVjZEM4cUlGdEpUa1pQWFNCT1lYWmlZWElnWW05eVpHVnlJSFJ2Y0RwY2JseDBhSFIwY0hNNkx5OXBMbWx0WjNWeUxtTnZiUzk2UW1oU2NIaE9MbkJ1WnlBcUwxeHVYSFJpYjNKa1pYSXRkRzl3SUZOaGMyaGhMVUp2WkhrdFJtOXlaV2R5YjNWdVpGeHVYRzVjZEdFdWJtRjJZbUZ5TFdsMFpXMDZhRzkyWlhKY2JseDBYSFJqYjJ4dmNpQlRZWE5vWVMxTWFXNXJYRzVjZEZ4MFltRmphMmR5YjNWdVpDMWpiMnh2Y2lCVFlYTm9ZUzFDYjJSNUxVSmhZMnRuY205MWJtUmNibHh1WEc0dWJtRjJZbUZ5TFdKMWNtZGxjbHh1WEhSamIyeHZjaUJUWVhOb1lTMUNiMlI1TFVKaFkydG5jbTkxYm1SY2JseHVYSFFtT21odmRtVnlYRzVjZEZ4MFkyOXNiM0lnVTJGemFHRXRRbTlrZVMxQ1lXTnJaM0p2ZFc1a1hHNWNkRngwWW1GamEyZHliM1Z1WkMxamIyeHZjaUJUWVhOb1lTMUNiMlI1TFVadmNtVm5jbTkxYm1SY2JseHVYRzR2S2lCYlNVNUdUMTBnVG1GMlltRnlJR0p2Y21SbGNpQnZiaUJ0YjJKcGJHVWdjMk55WldWdWN6cGNibWgwZEhCek9pOHZhUzVwYldkMWNpNWpiMjB2V0d0SGRtbEhaaTV3Ym1jZ0tpOWNia0J0WldScFlTQnpZM0psWlc0Z1lXNWtJQ2h2Y21sbGJuUmhkR2x2YmpvZ2NHOXlkSEpoYVhRcFhHNWNkQzV1WVhaaVlYSXRiV1Z1ZFZ4dVhIUmNkR0poWTJ0bmNtOTFibVF0WTI5c2IzSWdVMkZ6YUdFdFFtOWtlUzFHYjNKbFozSnZkVzVrWEc1Y2JpOHFJRDQrSUVGa1pGUnZRVzU1WEc1Y2REMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlJQ292WEc1Y2JpOHFYRzViVGs5VVJWMGdUM1psY25GMVlXeHBabWxsWkNEaWdKeGthWGJpZ0owZ2NtVnhkV2x5WldRZ1ptOXlJSFJvYVhKa0xYQmhjblI1SUVGa1pGUnZRVzU1WEc1Y2JsdE9UMVJGWFNCTmRXeDBhUzFzYVc1bElHSjFabVpsY21Wa0lHTnZiVzFsYm5SeklISmxjWFZwY21Wa0lHbHVJSFJvYVhNZ1kyRnpaVHBjYm1oMGRIQTZMeTl6ZEhsc2RYTXRiR0Z1Wnk1amIyMHZaRzlqY3k5amIyMXRaVzUwY3k1b2RHMXNJMjExYkhScExXeHBibVV0WW5WbVptVnlaV1JjYmlvdlhHNWNiaThxSVNCamMzTnNhVzUwSUdsbmJtOXlaVHB6ZEdGeWRDQXFMMXh1WEc0dkx5QlBkbVZ5YkdGNUlHOW1JR0oxZEhSdmJuTTZYRzVrYVhaY2JseDBKaTVoTW1GZlpteHZZWFJwYm1kZmMzUjViR1ZjYmx4MEppNWhNbUZmWkdWbVlYVnNkRjl6ZEhsc1pWeHVYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0lnVTJGemFHRXRRV1JrTFZSdkxVRnVlVnh1WEc0dktpRWdZM056YkdsdWRDQnBaMjV2Y21VNlpXNWtJQ292WEc1Y2JseHVMeW9nUGo0Z1YybHNaSGRwY21WY2JseDBQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDBnS2k5Y2JseHVMeW9nVzBSRlVGSkZRMEZVUlVSZElGZHBiR1IzYVhKbElHNXZJR3h2Ym1kbGNpQm1kVzVqZEdsdmJtbHVaeUJ0YjNKbFhHNWNibHRNUlVGU1RsMWJVMVJaVEZWVFhTQlFiR0ZqWlNCcGJYQnZjblFnZEc4Z2RHaGxJR1Z1WkNCdlppQmtiMk4xYldWdWRDd2dkR2hoZENEaWdKeHVieTFrWlhOalpXNWthVzVuTFhOd1pXTnBabWxqYVhSNTRvQ2RYRzVUZEhsc1pXeHBiblFnY25Wc1pTQjNhV3hzSUdKbElHRndjR3hwWldRNlhHNW9kSFJ3Y3pvdkwzTjBlV3hsYkdsdWRDNXBieTkxYzJWeUxXZDFhV1JsTDNKMWJHVnpMMjV2TFdSbGMyTmxibVJwYm1jdGMzQmxZMmxtYVdOcGRIbGNibHh1VzA1UFZFVmRJRTkyWlhKeGRXRnNhV1pwWldRZ1pXeGxiV1Z1ZEhNZ2NtVnhkV2x5WldRZ1ptOXlJSGRwYkdSbWFYSmxJSE4wZVd4bGMxeHVYRzViVGs5VVJWMGdUWFZzZEdrdGJHbHVaU0JpZFdabVpYSmxaQ0JqYjIxdFpXNTBjeUJ5WlhGMWFYSmxaQ0JwYmlCMGFHbHpJR05oYzJWY2JseHVZM056YkdsdWRDQnBaMjV2Y21VNmMzUmhjblJjYmx4dVFHbHRjRzl5ZENCY0luZHBiR1JtYVhKbExuTjBlV3hjSWx4dVhHNWpjM05zYVc1MElHbG5ibTl5WlRwbGJtUmNiaW92WEc0aVhYMD0gKi8iLCIvKlxuKiBEZXNjcmlwdGlvbjogRGVzaWduIGZvciBLcmlzdGluaXRhJ3MgU2VhcmNoIHBhZ2VzXG4qIEF1dGhvcjogU2FzaGEgQ2hlcm55a2hcbiogSW1wb3J0ICsgdmFyaWFibGVzIOKAlCBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNDc5NzE1ODIvNTk1MTUyOVxuKiBOdCDigJQgbm90IHRlc3RlZCBwcm9wZXJ0aWVzXG4qL1xuXG4vKlxuKiBUT0NcbipcbiogR2VuZXJhbFxuKiAtIEJvZHlcbiogLSBMaW5rc1xuKiAtIEN1cnNpdmVcbiogLSBJbWFnZXNcbiogLSBLQkRcbiogLSBoclxuKiAtIFRhYmxlc1xuKiBBc2lkZVxuKiAtIGNvdmVyLXRleHRcbiogQmxvY2txdW90ZXNcbiogLSBMZWZ0LWJvcmRlciBibG9ja3F1b3RlXG4qIC0gVGVybXNcbiogLSBRdW90ZXMgdG9wIGFuZCBib3R0b21cbiogLSBFcGlncmFwaFxuKiAtIEdpbmdlcmluYXMgZXhhbXBsZVxuKiBEZWNvcmF0aW9uXG4qIC0gU2hhZG93c1xuKiAtIERvdHNcbiogLSBDb2xvcmVkIHRleHRcbiogRGlmZmVyZW50IGVsZW1lbnRzXG4qIC0gQ3VzdG9tIHNlbGVjdGlvblxuKiAtIEctUmlnaHRzXG4qIC0gQ2hpbGQgZWxlbWVudHNcbiogLSBmaWd1cmVcbiogRXh0ZXJuYWwgcGx1Z2luc1xuKiAtIEJ1bG1hXG4qIC0gQWRkVG9BbnlcbiogLSBXaWxkd2lyZVxuKi9cblxuXG4vKlxuKiBUT0MgZ2VuZXJhdGVkIGJ5IFRhYmxlIG9mIENvbW1lbnRzIFN1YmxpbWUgVGV4dCBwbHVnaW46XG4qIGh0dHBzOi8vcGFja2FnZWNvbnRyb2wuaW8vcGFja2FnZXMvVGFibGUlMjBvZiUyMGNvbW1lbnRzXG4qIFtXQVJOSU5HXSBQbGFjZSB0aGlzIGNvbW1lbnRzIGFmdGVyIFRPQywgb3RoZXJ3aXNlIFRPQyB3aWxsIGluY29ycmVjdC5cbiogW0JVR10gVGFibGUgb2YgQ29tbWVudHMgaGF2ZSBzb21lIGJ1Z3M6XG4qIGh0dHBzOi8vZ2l0aHViLmNvbS9raXp6YS9UYWJsZS1vZi1jb21tZW50cy9pc3N1ZXNcbiovXG5cblxuLypcbltJTkZPXSBBbGwg0K/QvdC00LXQutGBLtCa0L7Qu9C00YPQvdGJ0LjQuiBjb2xvcnM6XG5odHRwczovL21heGltYWwuZ2l0aHViLmlvL2NvbG91ci9cblxuW0lORk9dIENvbnRyYXN0IGZpbmRlciDigJQgZmluZCBjb2xvciB3aGljaCBtYXRjaCBXU0FHIGNyaXRlcmlhczpcbmh0dHBzOi8vYXBwLmNvbnRyYXN0LWZpbmRlci5vcmcvP2xhbmc9ZW5cbiovXG5cblxuLypcbiogQVJHQiBwZXJjZW50YWdlIHRhYmxlOlxuKiBodHRwczovL2NvZGVyd2FsbC5jb20vcC9kZWRxY2EvYXJnYi1jb2xvcnMtaW4tYW5kcm9pZFxuKi9cblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ+IEdlbmVyYWxcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogPj4gQm9keVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5ib2R5XG5cdGJhY2tncm91bmQgU2FzaGEtQm9keS1CYWNrZ3JvdW5kXG5cdGNvbG9yIFNhc2hhLUJvZHktRm9yZWdyb3VuZFxuXG4vKiA+PiBMaW5rc1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuKiBCYWNrZ3JvdW5kIGNvbG9yIG9mIGxpbmtzIGJ5IGhvdmVyXG4qL1xuXG4vKlxuKiBCYWNrZ3JvdW5kIGNvbG9yIG9mIGxpbmtzLCBpZiB1c2VyIG1vdmUgYmV0d2VlbiBsaW5rcyB1c2UgdGFiIGtleVxuKiBodHRwczovL2Nzcy10cmlja3MuY29tL2FsbWFuYWMvc2VsZWN0b3JzL2YvZm9jdXMvXG4qL1xuXG5hXG5cdGNvbG9yIFNhc2hhLUxpbmtcblxuXHQmOmhvdmVyXG5cdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Ib3Zlci1MaW5rXG5cblx0Jjpmb2N1c1xuXHRcdGJhY2tncm91bmQgU2FzaGEtRm9jdXMtTGlua1xuXG5cbi8qXG5bSU5GT10gRGVhZCBsaW5rc1xuaHR0cHM6Ly9naXRodWIuY29tL3NpbGVudGxhbWIvcGVsaWNhbi1kZWFkbGlua3NcbiovXG5cbi8qIMKr0JDQvNCw0YDQsNC90YLQvtCy0YvQucK7INCv0L3QtNC10LrRgS7QmtC+0LvQtNGD0L3RidC40LogZm9yIHN1YmxpbWUtdGV4dCAqL1xuXG4uU2FzaGFEZWFkbGlua1xuXHRjb2xvciBTYXNoYS1EZWFkLUxpbmtcblxuXG4vKiA+PiBDdXJzaXZlXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG5bREVQUkVDQVRFRF1cbkN1cnNpdmVcbkZvciBoaWdobGlnaHRpbmcgbm9uLWNvZGUgZWxlbWVudHNcblRleHQgZ3JhZGllbnRcbmh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xLzM3ODMxODM3LzU5NTE1MjlcblxuRG9uJ3Qgc3VwcG9ydCBhbGwgYnJvd3NlcnNcbmh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5cbltCVUddIFRleHQgd3JhcHBpbmcgd29ya3MgaW5jb3JyZWN0OlxuaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xLzUwMDg0MDk0LzU5NTE1MjlcblxuZW1cblx0YmFja2dyb3VuZC1pbWFnZSBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIFNhc2hhLUJlZ2luLUN1cnNpdmUsIFNhc2hhLUVuZC1DdXJzaXZlKVxuXHQtd2Via2l0LWJhY2tncm91bmQtY2xpcCB0ZXh0XG5cdGNvbG9yIHRyYW5zcGFyZW50XG4qL1xuZW1cblx0Y29sb3IgU2FzaGEtRW1cblxuLy8gRGZuIOKAlCBkZWZpbml0aW9uXG4vLyBodHRwOi8vaHRtbGJvb2sucnUvaHRtbC9kZm5cbmRmblxuXHRjb2xvciBTYXNoYS1EZm5cblxuLyogPj4gSW1hZ2VzXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8vIFNoYWRvd1xuXG5pbWdcblx0Ym94LXNoYWRvdyAwIDAgMnJlbSBTYXNoYS1JbWFnZS1TaGFkb3dcblxuLypcbltJTkZPXSBEaXNhYmxlIHNoYWRvd3MgZm9yIHNtYWxsIGltYWdlcztcbnBhcnRpY3VsYXJseSwgZm9yIEtyaXN0aW5vZ3JhZCBjYXRlZ29yaWVzIGljb25zOlxu4oCcbWluLXdpZHRo4oCdLCBiZWNhdXNlIGljb25zIGRlY3JlYXNlIGluIG1vYmlsZSB0YWJsZXNcbiovXG4uU2FzaGFOb1NoYWRvd3NJbWFnZVxuXHRib3gtc2hhZG93IG5vbmVcblx0bWluLXdpZHRoIDJyZW1cblxuLlNhc2hhUGFnZUxvYWRpbmdcblx0Ym94LXNoYWRvdyBub25lXG5cdC8qXG5cdFtJTkZPXSBUcmFja2luZyB3aWxsIHN0aWxsOlxuXHRodHRwczovL2VuLnJ5dGUuY29tL3dpa2kvVHJhY2tpbmdfUGl4ZWxcblx0Ki9cblx0ZGlzcGxheSBub25lXG5cbi8qID4+IEtCRFxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5rYmRcblx0Y29sb3IgU2FzaGEtS0JELWZvcmVncm91bmRcblx0YmFja2dyb3VuZCBTYXNoYS1LQkQtYmFja2dyb3VuZFxuXG4vKiA+PiBoclxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5oclxuXHRjb2xvciBTYXNoYS1IclxuXG4vKiA+PiBUYWJsZXNcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogW1JFUVVJUkVEXSAqL1xudGRcbnRoXG5cdGJvcmRlci1jb2xvciBTYXNoYS1Cb2R5LUZvcmVncm91bmRcblxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXHQ+IEFzaWRlXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID4+IGNvdmVyLXRleHRcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLlNhc2hhQXNpZGVCb3R0b21UZXh0XG5cdGNvbG9yIFNhc2hhLUNvdmVyLVRleHRcblx0Ym90dG9tIFNhc2hhLUJvdHRvbS1QZXJjZW50XG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0PiBCbG9ja3F1b3Rlc1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiA+PiBMZWZ0LWJvcmRlciBibG9ja3F1b3RlXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmJsb2NrcXVvdGVcblx0Ym9yZGVyLWxlZnQgc29saWQgU2FzaGEtTGVmdC1Cb3JkZXIgLjVyZW1cblx0Y29sb3IgU2FzaGEtTGVmdC1Cb3JkZXItQmxvY2txdW90ZS1Gb3JlZ3JvdW5kXG5cdGJhY2tncm91bmQgU2FzaGEtTGVmdC1Cb3JkZXItQmxvY2txdW90ZS1CYWNrZ3JvdW5kXG5cblx0PnBcblx0XHQvLyBbSU5GT10gSXRhbGljIHRleHQgaW5zaWRlIGJsb2NrcXVvdGVcblx0XHQ+ZW1cblx0XHRcdGNvbG9yIFNhc2hhLUJsb2NrcXVvdGUtRW1cblx0XHQvLyBbSU5GT10gTGluayBpbnNpZGUgYmxvY2txdW90ZVxuXHRcdD5hXG5cdFx0XHRjb2xvciBTYXNoYS1CbG9ja3F1b3RlLUxpbmtcblxuLyogPj4gVGVybXNcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLlNhc2hhQmxvY2txdW90ZUJsb2Nrc3R5bGVcblx0Ym9yZGVyLWNvbG9yIFNhc2hhLVRlcm0tQmxvY2txdW90ZS1Cb3JkZXJcblx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1UZXJtLUJsb2NrcXVvdGUtQmFja2dyb3VuZFxuXHRjb2xvciBTYXNoYS1UZXJtLUJsb2NrcXVvdGUtRm9yZWdyb3VuZFxuXG5cdD5wXG5cdFx0Ly8gW0lORk9dIEl0YWxpYyB0ZXh0IGluc2lkZSBibG9ja3F1b3RlXG5cdFx0PmVtXG5cdFx0XHRjb2xvciBTYXNoYS1UZXJtLUJsb2NrcXVvdGUtRW1cblx0XHQvLyBbSU5GT10gTGluayBpbnNpZGUgdGVybSBibG9ja3F1b3RlXG5cdFx0PmFcblx0XHRcdGNvbG9yIFNhc2hhLVRlcm0tQmxvY2txdW90ZS1MaW5rXG5cbi8qID4+IFF1b3RlcyB0b3AgYW5kIGJvdHRvbVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiBDaXRhdGlvbiBiZXR3ZWVuIHRvcCBhbmQgYm90dG9tIHF1b3RlcyAqL1xuLlNhc2hhUHVsbFF1b3RlXG5cdGNvbG9yIFNhc2hhLUNpdGF0aW9uLUJldHdlZW4tUXVvdGVzXG5cbi8qID4+IEVwaWdyYXBoXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qINCR0LvQtdGB0YLRj9GJ0LjQuSDQt9C10LvQtdC90L7QstCw0YLQvi3QttGR0LvRgtGL0LksINCv0L3QtNC10LrRgS7QmtC+0LvQtNGD0L3RidC40LogZm9yIHN1YmxpbWUtdGV4dC5zdHlsICovXG4uU2FzaGFFcGlncmFwaFxuXHRjb2xvciBTYXNoYS1FcGlncmFwaFxuXG5cdD4uU2FzaGFFcGlncmFwaEF1dGhvclxuXHRcdGNvbG9yIFNhc2hhLUVwaWdyYXBoLUF1dGhvclxuXG5cdD5lbVxuXHRcdGNvbG9yIFNhc2hhLUVwaWdyYXBoLUVtXG5cbi8qID4+IEdpbmdlcmluYXMgZXhhbXBsZVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vLyBDb2xvciBmb3IgZ2luZ2VyaW5hcy5zdHlsIOKAlCBncmVlbiB0ZWEgaW4gwqvQr9C90LTQtdC60YEuINCa0L7Qu9C00YPQvdGJ0LjQusK7XG4uU2FzaGFHaW5nZXJpbmFzRXhhbXBsZVxuXHRiYWNrZ3JvdW5kLWNvbG9yIFNhc2hhLUdpbmdlcmluYXMtRXhhbXBsZVxuXHRjb2xvciBTYXNoYS1HaW5nZXJpbmFzLUV4YW1wbGUtRm9yZWdyb3VuZFxuXG4uU2FzaGFHaW5nZXJpbmFzQmFkRXhhbXBsZVxuXHRiYWNrZ3JvdW5kLWNvbG9yIFNhc2hhLUdpbmdlcmluYXMtQmFkLUV4YW1wbGVcblx0Y29sb3IgU2FzaGEtR2luZ2VyaW5hcy1CYWQtRXhhbXBsZS1Gb3JlZ3JvdW5kXG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0PiBEZWNvcmF0aW9uXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qID4+IFNoYWRvd3Ncblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLlNhc2hhU2hhZG93c05lb25Bcm91bmRUZXh0XG5cdHRleHQtc2hhZG93IDAgMCAuNjI1cmVtIFNhc2hhLVNoYWRvd3MtTmVvbi1Bcm91bmQtVGV4dCwgMCAwIDEuMjVyZW0gU2FzaGEtU2hhZG93cy1OZW9uLUFyb3VuZC1UZXh0LCAwIDAgMS44NzVyZW0gU2FzaGEtU2hhZG93cy1OZW9uLUFyb3VuZC1UZXh0LCAwIDAgMi41cmVtIFNhc2hhLVNoYWRvd3MtTmVvbi1Bcm91bmQtVGV4dCwgMCAwIDMuMTI1cmVtIFNhc2hhLVNoYWRvd3MtTmVvbi1Bcm91bmQtVGV4dCwgMCAwIDMuNzVyZW0gU2FzaGEtU2hhZG93cy1OZW9uLUFyb3VuZC1UZXh0XG5cbi8qID4+IERvdHNcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLy8gRG90cyB1bmRlciBlbGVtZW50c1xuLlNhc2hhRG90XG5cdGJvcmRlci1ib3R0b20gLjA2MjVyZW0gZG90dGVkIFNhc2hhLURvdFxuXG4uU2FzaGFEb3RMaWdodFxuXHRib3JkZXItYm90dG9tIC4wNjI1cmVtIGRvdHRlZCBTYXNoYS1Eb3QtTGlnaHRcblxuLyogPj4gQ29sb3JlZCB0ZXh0XG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5TYXNoYVNwYW5cblx0Y29sb3IgU2FzaGEtU3Bhbi1Gb3JlZ3JvdW5kXG5cdGJhY2tncm91bmQtY29sb3IgU2FzaGEtU3Bhbi1CYWNrZ3JvdW5kXG5cblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0PiBEaWZmZXJlbnQgZWxlbWVudHNcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogPj4gQ3VzdG9tIHNlbGVjdGlvblxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiBbTk9URV0gTmVlZHMgaGFjaywgdGhhdCDigJw6OnNlbGVjdGlvbuKAnSBwc2V1ZG8tZWxlbWVudCB3b3JrcyBpbiBhbGwgYnJvd3NlcnM6XG4qIGh0dHBzOi8vcnUuc3RhY2tvdmVyZmxvdy5jb20vYS81OTU4MDkvMTk5OTM0XG4qIFtOT1RFXSDigJwtbW96LeKAnSBwcmVmaXggbm90IG5lZWRlZCBzaW5jZSBGaXJlZm94IDYxOlxuKiBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9JTNBc2VsZWN0aW9uXG4qIGh0dHA6Ly9ydS5zdGFja292ZXJmbG93LmNvbS9hLzU5NTgwOS8xOTk5MzRcbiogW0lORk9dIEV4aXN0cyDigJw6LW1vei13aW5kb3ctaW5hY3RpdmXigJ0gc29sZWx5LCBub3Qg4oCcd2luZG93LWluYWN0aXZl4oCdOlxuKiBodHRwczovL2Nhbml1c2UuY29tLyNzZWFyY2g9d2luZG93LWluYWN0aXZlXG4qL1xuXG46OnNlbGVjdGlvblxuXHRjb2xvciBTYXNoYS1TZWxlY3Rpb24tRm9yZWdyb3VuZFxuXHRiYWNrZ3JvdW5kIFNhc2hhLVNlbGVjdGlvbi1CYWNrZ3JvdW5kXG5cbi8qID4+IEctUmlnaHRzXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5LaXJhR1JpZ2h0c1xuXHRjb2xvciBTYXNoYS1HUi1Gb3JlZ3JvdW5kXG5cdGJhY2tncm91bmQgU2FzaGEtR1ItQmFja2dyb3VuZFxuXG4vKiA+PiBDaGlsZCBlbGVtZW50c1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuKiBPdmVyd3JpdGUgY29sb3IgY2hpbGQgZWxlbWVudCwgIWltcG9ydGFudCBkb2Vzbid0IHdvcmssXG4qIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzIxMjk3MjQ4LzU5NTE1MjlcbiogSWRlbnRpY2FsIGFzIGJvZHkgZm9yZWdyb3VuZFxuKi9cblxuLlNhc2hhRW1Ob0NvbG9yXG5cdGNvbG9yIFNhc2hhLUJvZHktRm9yZWdyb3VuZFxuXG4vKiA+PiBmaWd1cmVcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLy8gaHR0cHM6Ly93ZWJyZWYucnUvaHRtbC9maWd1cmVcbi5TYXNoYVNpZ25cblx0Ym9yZGVyIC4wNjI1cmVtIHNvbGlkIFNhc2hhLUZpZ3VyZS1Cb3JkZXJcblx0YmFja2dyb3VuZCBTYXNoYS1GaWd1cmUtQmFja2dyb3VuZFxuXG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdD4gRXh0ZXJuYWwgcGx1Z2luc1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbi8qID4+IEJ1bG1hXG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi5uYXZiYXJcbi50YWc6bm90KGJvZHkpXG5cdGNvbG9yIFNhc2hhLUJvZHktQmFja2dyb3VuZFxuXHRiYWNrZ3JvdW5kLWNvbG9yIFNhc2hhLUJvZHktRm9yZWdyb3VuZFxuXG5cbi5uYXZiYXItaXRlbVxuXHRjb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUZvcmVncm91bmRcblxuXHQmLmhhcy1kcm9wZG93blxuXG5cdFx0Jjpob3ZlclxuXHRcdFx0Y29sb3IgU2FzaGEtTGlua1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblxuXHRcdFx0Lm5hdmJhci1saW5rXG5cdFx0XHRcdGNvbG9yIFNhc2hhLUxpbmtcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblxuXHRcdFx0XHQmOm5vdCguaXMtYXJyb3dsZXNzKTo6YWZ0ZXJcblx0XHRcdFx0XHRib3JkZXItY29sb3IgU2FzaGEtTGlua1xuXG5cbi5uYXZiYXItbGlua1xuXHRjb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUZvcmVncm91bmRcblxuXHQvKiBbSU5GT10gTmF2YmFyIGFycm93OlxuXHRodHRwczovL2kuaW1ndXIuY29tLzlZRWVxMDEucG5nICovXG5cdCY6bm90KC5pcy1hcnJvd2xlc3MpOjphZnRlclxuXHRcdGJvcmRlci1jb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblxuXHQvKiBbSU5GT10g4oCcOmhvdmVy4oCdIG11c3QgYmUgYmVmb3JlIOKAnDo6YWZ0ZXLigJ06XG5cdGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xMzIzNDAyOC81OTUxNTI5ICovXG5cdCY6aG92ZXJcblx0XHRjb2xvciBTYXNoYS1MaW5rXG5cdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblxuXHRcdCY6bm90KC5pcy1hcnJvd2xlc3MpOjphZnRlclxuXHRcdFx0Ym9yZGVyLWNvbG9yIFNhc2hhLUxpbmtcblxuXG4vKiBbSU5GT10gTmF2YmFyIGJvcmRlcjpcbmh0dHBzOi8vaS5pbWd1ci5jb20vSmlveVJLOC5wbmcgKi9cbi5uYXZiYXItZHJvcGRvd25cblx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUZvcmVncm91bmRcblx0LyogW0lORk9dIE5hdmJhciBib3JkZXIgdG9wOlxuXHRodHRwczovL2kuaW1ndXIuY29tL3pCaFJweE4ucG5nICovXG5cdGJvcmRlci10b3AgU2FzaGEtQm9keS1Gb3JlZ3JvdW5kXG5cblx0YS5uYXZiYXItaXRlbTpob3ZlclxuXHRcdGNvbG9yIFNhc2hhLUxpbmtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yIFNhc2hhLUJvZHktQmFja2dyb3VuZFxuXG5cbi5uYXZiYXItYnVyZ2VyXG5cdGNvbG9yIFNhc2hhLUJvZHktQmFja2dyb3VuZFxuXG5cdCY6aG92ZXJcblx0XHRjb2xvciBTYXNoYS1Cb2R5LUJhY2tncm91bmRcblx0XHRiYWNrZ3JvdW5kLWNvbG9yIFNhc2hhLUJvZHktRm9yZWdyb3VuZFxuXG5cbi8qIFtJTkZPXSBOYXZiYXIgYm9yZGVyIG9uIG1vYmlsZSBzY3JlZW5zOlxuaHR0cHM6Ly9pLmltZ3VyLmNvbS9Ya0d2aUdmLnBuZyAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOiBwb3J0cmFpdClcblx0Lm5hdmJhci1tZW51XG5cdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1Cb2R5LUZvcmVncm91bmRcblxuLyogPj4gQWRkVG9Bbnlcblx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbltOT1RFXSBPdmVycXVhbGlmaWVkIOKAnGRpduKAnSByZXF1aXJlZCBmb3IgdGhpcmQtcGFydHkgQWRkVG9BbnlcblxuW05PVEVdIE11bHRpLWxpbmUgYnVmZmVyZWQgY29tbWVudHMgcmVxdWlyZWQgaW4gdGhpcyBjYXNlOlxuaHR0cDovL3N0eWx1cy1sYW5nLmNvbS9kb2NzL2NvbW1lbnRzLmh0bWwjbXVsdGktbGluZS1idWZmZXJlZFxuKi9cblxuLyohIGNzc2xpbnQgaWdub3JlOnN0YXJ0ICovXG5cbi8vIE92ZXJsYXkgb2YgYnV0dG9uczpcbmRpdlxuXHQmLmEyYV9mbG9hdGluZ19zdHlsZVxuXHQmLmEyYV9kZWZhdWx0X3N0eWxlXG5cdFx0YmFja2dyb3VuZC1jb2xvciBTYXNoYS1BZGQtVG8tQW55XG5cbi8qISBjc3NsaW50IGlnbm9yZTplbmQgKi9cblxuXG4vKiA+PiBXaWxkd2lyZVxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiBbREVQUkVDQVRFRF0gV2lsZHdpcmUgbm8gbG9uZ2VyIGZ1bmN0aW9uaW5nIG1vcmVcblxuW0xFQVJOXVtTVFlMVVNdIFBsYWNlIGltcG9ydCB0byB0aGUgZW5kIG9mIGRvY3VtZW50LCB0aGF0IOKAnG5vLWRlc2NlbmRpbmctc3BlY2lmaWNpdHnigJ1cblN0eWxlbGludCBydWxlIHdpbGwgYmUgYXBwbGllZDpcbmh0dHBzOi8vc3R5bGVsaW50LmlvL3VzZXItZ3VpZGUvcnVsZXMvbm8tZGVzY2VuZGluZy1zcGVjaWZpY2l0eVxuXG5bTk9URV0gT3ZlcnF1YWxpZmllZCBlbGVtZW50cyByZXF1aXJlZCBmb3Igd2lsZGZpcmUgc3R5bGVzXG5cbltOT1RFXSBNdWx0aS1saW5lIGJ1ZmZlcmVkIGNvbW1lbnRzIHJlcXVpcmVkIGluIHRoaXMgY2FzZVxuXG5jc3NsaW50IGlnbm9yZTpzdGFydFxuXG5AaW1wb3J0IFwid2lsZGZpcmUuc3R5bFwiXG5cbmNzc2xpbnQgaWdub3JlOmVuZFxuKi9cbiJdfQ== */
