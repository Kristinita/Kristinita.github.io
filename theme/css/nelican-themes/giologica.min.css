body{background:bisque;color:#c41e3a}a{color:#c71585}a:hover{background-color:#d8bfd8}a:focus{background:#ffb6c1}em{color:#556b2f}img{box-shadow:0 0 2rem #000}.SashaPageLoading{box-shadow:none;display:none}kbd{background:#5f9ea0;color:ivory}hr{color:#c71585}td,th{border-color:#c41e3a}.SashaAsideBottomText{bottom:8%;color:#fff}blockquote{background:#fcfcfc;border-left:.5rem solid #ff5a00;color:#333}blockquote>p>em{color:#556b2f}blockquote>p>a{color:#c71585}::selection{background:#ffe4b5fc;color:#f08080}.navbar,.navbar-item,.tag:not(body){background-color:#c41e3a;color:bisque}.navbar-item.has-dropdown:hover,.navbar-item.has-dropdown:hover .navbar-link{background-color:bisque;color:#c71585}.navbar-item.has-dropdown:hover .navbar-link:not(.is-arrowless):after{border-color:#c71585}.navbar-link{background-color:#c41e3a;color:bisque}.navbar-link:not(.is-arrowless):after{border-color:bisque}.navbar-link:hover{background-color:bisque;color:#c71585}.navbar-link:hover:not(.is-arrowless):after{border-color:#c71585}.navbar-dropdown{background-color:#c41e3a;border-top:#c41e3a}.navbar-dropdown a.navbar-item:hover{background-color:bisque;color:#c71585}.navbar-burger{color:bisque}.navbar-burger:hover{background-color:#c41e3a;color:bisque}div.a2a_floating_style{background-color:#deb887}@media screen and (orientation:portrait){.navbar-menu{background-color:#c41e3a}}
/*# sourceMappingURL=data:application/json;base64, */
