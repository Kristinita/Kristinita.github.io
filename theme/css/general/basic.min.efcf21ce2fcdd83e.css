body,html{height:100%;overflow:hidden}.SashaBottomAside,.SashaInlineHighlight,a,em,pre{overflow-wrap:break-word;word-break:break-all}h1:hover>.headerlink,h2:hover>.headerlink,h3:hover>.headerlink,h4:hover>.headerlink,h5:hover>.headerlink,h6:hover>.headerlink{visibility:visible}.SashaEmNoColor,.SashaEmNoColorBottom{font-style:italic}.SashaHeadPageLeft,.SashaPreviousNeighbor{float:left}.SashaHeadPageRight,.SashaNextNeighbor{float:right}#SashaRunkit,.SashaVideo,.SashaWebMoneyWidget{width:100%;position:relative;overflow:hidden}.SashaEmNoColor,.SashaHeadPageLeft,.SashaHeadPageRight,.SashaNextNeighbor,.SashaPreviousNeighbor,.WorkOnYourself{margin:5rem 0 0}.SashaHeadPageLeft a,.SashaHeadPageRight a,.SashaNextNeighbor a,.SashaPreviousNeighbor a{font-size:2rem}body{font-family:Arial;font-size:1.1875rem;margin:0;padding:0}a{text-decoration:none}a:focus{outline:0}.headerlink{visibility:hidden}h1{font-size:1.9375rem;font-weight:lighter;font-style:normal}h2{font-size:1.4rem}.SashaHeader{line-height:.7rem}kbd{border-radius:.1875rem}kbd,noscript{font-weight:700}noscript{color:#fff;font-family:sans-serif;text-align:center;padding:1rem 0;background:rgba(0,0,0,.9);position:fixed;top:0;z-index:1}table{width:100%}td,th{padding:.5rem;word-break:break-all}.SashaOlMargin,ul li{margin-left:1rem}.SashaTOC{list-style-type:none;padding:0 0 0 1rem}dt{font-weight:700}dd{font-style:italic}.russianletters{list-style-type:none}.russianletters li{margin:0}.SashaClearBoth{clear:both}.SashaEmNoColorBottom{margin:1rem 0 0}img{max-width:100%;margin:0 auto}.leftimg{float:left;margin:.3125rem .3125rem .3125rem 0}.rightimg{float:right;margin:.3125rem 0 .3125rem .3125rem}.Sasha140{width:8.75rem}.Sasha280{width:17.5rem}.Sasha470{width:29.375rem}.Sasha700{width:43.75rem}.SashaSign{padding:.4375rem;margin:.3125rem 0}.SashaSign figcaption{margin:0 auto}.external:after{content:url(../../../images/interface_images/external-link.png);margin-left:.2rem}.SashaVideo{padding-bottom:74.38%}#SashaRunkit{padding-bottom:13rem}.SashaWebMoneyWidget{padding-bottom:16rem}iframe{width:100%;height:100%;position:absolute;border:0}blockquote{font-size:1.1875rem;font-style:italic;margin:.625rem 2.5rem;padding:.9375rem}.SashaBlockquote{padding:.25rem;border-width:thick;border-top-style:ridge;border-right-style:groove;border-bottom-style:groove;border-left-style:ridge}.SashaCitation{display:inline-block}.SashaTopQuote{margin:1.8rem 0 0;vertical-align:-.2rem}.SashaBottomQuote,.SashaTopQuote{display:inline-block;font-size:3rem;line-height:0}.SashaBottomQuote{vertical-align:-2.5rem}.SashaEpigraph{font-style:italic;margin:4rem 0;text-align:right}.SashaEpigraph>em{background-image:none}.SashaEpigraph>.SashaEpigraphAuthor{line-height:1rem;margin:2rem 0;font-style:italic}.SashaGingerinasBadExample,.SashaGingerinasExample{padding:.2rem}code,pre{font-size:1.1875rem}pre{position:relative;white-space:pre-wrap;padding:.5rem;-moz-tab-size:4;tab-size:4}.SashaVersion{font-size:.9rem;font-weight:700}.SashaCenter{text-align:center}.SashaInline{float:left}.SashaShadow{font-family:Times New Roman;font-size:1.6rem;width:auto}.SashaButton{float:right}.SashaNotModify{width:.8125rem}.tooltipster-punk-aquamarine .tooltipster-box,.tooltipster-punk-purple .tooltipster-box{border:0;border-radius:.3125rem}.SashaLazy{min-width:1rem}div.a2a_floating_style{padding:.0625rem;top:30%}div.a2a_default_style{border-radius:.375rem;padding:.25rem;float:left}.clearfix:after{content:"";visibility:hidden;display:block;height:0;clear:both}
/*# sourceMappingURL=data:application/json;base64, */
