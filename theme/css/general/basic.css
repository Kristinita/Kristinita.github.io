/** @Author: Kristinita
* @Date:   2016-12-26 15:48:38
* @Last Modified by:   Kristinita
* @Last Modified time: 2017-05-09 19:36:48



/* ==========================================================================
   General
   ========================================================================== */


/* For correct Mailhu displayed*/

html,
main,
body {
    height: 100%;
}

html {
    overflow-x: hidden;
    /* Чтобы margin-top для Сашиных икон работал на мобильных устройствах */
}

body {
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
    font-size: 1.1875rem;
    overflow: hidden;
    /* Чтобы margin-top для Сашиных икон работал на мобильных устройствах*/
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
    /* Чтобы ссылки не подчёркивались */
}

a:focus {
    outline: 0;
}


/*
 * Disable dotted outline, if user move by links use tab key, see
 * https://css-tricks.com/removing-the-dotted-outline/
 */


/* Disable, because incorrect works indents in lists, example:
<li>
<p>Kristina</p>
</li>
*/


/*
ol,
ul {
    list-style-position: inside;
     Чтобы маркеры списка не пропадали на мобильных версиях
}
*/


/*Отступ от левого края элементов вложенного списка*/

ul li {
    margin-left: 1rem;
}

h1 {
    font-family: 'Истина';
    font-size: 1.9375rem;
    font-weight: lighter;
    font-style: normal;
    /* Снизить яркость тексту */
    -webkit-filter: brightness(97%);
    filter: brightness(97%);
}

h2 {
    font-family: 'Мечта';
    font-size: 1.4rem;
}

kbd {
    font-weight: bold;
    border-radius: 0.1875rem;
}

noscript >span {
    unicode-bidi: bidi-override;
    direction: rtl;
}


/*
 * Dd, dt, dl tags
 * https://webref.ru/html/dd
 */

dt {
    font-weight: bold;
}

dd {
    font-style: italic;
}


/* Images
   ========================================================================== */

img {
    max-width: 100%;
    margin: 0 auto;
}


/* Картинка слева */

.leftimg {
    float: left;
    /* Картинка слева */
    margin: 0.3125rem 0.3125rem 0.3125rem 0;
    /* Расстояние между картинкой и текстом */
}


/* Картинка справа */

.rightimg {
    float: right;
    /* Картинка справа */
    margin: 0.3125rem 0 0.3125rem 0.3125rem;
    /* Расстояние между картинкой и текстом */
}


/*
 * Ширина изображения
 */

.Sasha140 {
    width: 8.75rem;
}

.Sasha280 {
    width: 17.5rem;
}

.Sasha470 {
    width: 29.375rem;
}

.Sasha700 {
    width: 43.75rem;
}


/*
 * JQuery Lazy
 * http://jquery.eisbehr.de/lazy/
 * I need add min-width to my images:
 * https://github.com/eisbehr-/jquery.lazy/issues/86
 */

.SashaLazy {
    min-width: 1rem;
}


/* Videos
   ========================================================================== */


/*
 * Embed iframes videos
 */

.SashaVideo {
    width: 100%;
    position: relative;
    padding-bottom: 74.38%;
}

iframe {
    width: 100%;
    height: 100%;
    position: absolute;
    /* Instead of frameborder — http://stackoverflow.com/a/10831379/5951529 */
    border: 0;
}


/* Blockquotes
   ========================================================================== */


/*  Цитата в прямоугольнике */

.SashaBlockquote {
    padding: 0.25rem;
    border-width: thick;
    border-top-style: ridge;
    border-right-style: groove;
    border-bottom-style: groove;
    border-left-style: ridge;
}


/* Epigraph */

.SashaEpigraph {
    margin-right: 1rem;
    margin-left: 3rem;
    text-align: right;
    /* Disable gradient for em tag */
    /* Inscription after epigraph */
}

.SashaEpigraph > em {
    background-image: none;
}

.SashaEpigraph > .SashaEpigraphAuthor {
    line-height: 1rem;
    margin: 2rem 0;
}


/* Цитата — кавычки сверху и снизу */

.SashaCitation {
    display: inline-block;
}

.SashaTopQuote {
    display: inline-block;
    margin: 1.8rem 0 0;
    font-size: 3rem;
    line-height: 0;
    vertical-align: -0.2rem;
}

.SashaBottomQuote {
    display: inline-block;
    font-size: 3rem;
    line-height: 0;
    vertical-align: -2.5rem;
}


/* Цитата с вертикальной полосой слева */

blockquote {
    font-size: 1.1875rem;
    font-style: italic;
    margin: 0.625rem 2.5rem;
    padding: 0.9375rem;
}


/* Code
   ========================================================================== */

code {
    font-size: 1.1875rem;
}


/* Код переносится на следующую строку, если не помещается */

pre {
    white-space: pre-wrap;
    -moz-tab-size: 4;
    /* Иначе tab=8 в Rainbow коде*/
    -o-tab-size: 4;
    tab-size: 4;
}


/* ==========================================================================
   Sasha-tags
   ========================================================================== */


/* Версия статьи */

.SashaVersion {
    font-size: 0.9rem;
    font-weight: bold;
}


/* Заголовок H1 */

.SashaHeader {
    line-height: 0.7rem;
    /* Интерлиньяж в заголовке */
}


/* Тень вверху страницы. */

.SashaShadow {
    font-family: 'Times New Roman';
    font-size: 1.6rem;
    /* Размер надписи */
    width: auto;
    text-shadow: 0 0 0.625rem #ff00de, 0 0 1.25rem #ff00de, 0 0 1.875rem #ff00de, 0 0 2.5rem #ff00de, 0 0 3.125rem #ff00de, 0 0 3.75rem #ff00de;
    /* Параметры тени */
}


/* Расположение элемента по центру */

.SashaCenter {
    text-align: center;
}


/* Обрамление изображения с Настей*/

.SashaSign {
    /* Параметры рамки */
    padding: 0.4375rem;
    /* Поля внутри блока */
    margin: 0.3125rem 0 0.3125rem 0;
}


/* Подчёркивание точками */

SashaDot {
    border-bottom: 0.0625rem dotted #dc143c;
    /* Параметры линии */
}


/* TOC статей */

.SashaTOC {
    list-style-type: none;
    /* Прячем исходную нумерацию */
    padding: 0 0 0 1rem;
}


/* Отступы в списке */

.SashaOlMargin {
    margin-left: 1rem;
}


/* Made inline block eliments */

.SashaInline {
    float: left;
}


/* Отступ сверху см. http://ru.stackoverflow.com/a/613468/199934 */

.SashaEmNoColor,
.WorkOnYourself {
    margin: 5rem 0 0;
}

.SashaEmNoColor {
    font-style: italic;
}


/* ==========================================================================
   Scripts and plugins
   ========================================================================== */


/* Clipboard.js button */

.SashaButton {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
}


/*# sourceMappingURL=data:application/json;base64, */