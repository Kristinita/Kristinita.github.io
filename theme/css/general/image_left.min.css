div.buorg,noscript{right:0}@media screen and (orientation:landscape){article{margin-right:2rem;margin-left:1rem}main{float:right}div.buorg{left:auto}}@media screen and (orientation:portrait){article{margin-right:3rem;margin-left:1rem}}.a2a_floating_style{right:0}
/*# sourceMappingURL=data:application/json;base64, */
