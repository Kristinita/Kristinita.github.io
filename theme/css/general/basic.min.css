body,html{height:100%;overflow:hidden}.SashaBottomAside,.SashaInlineHighlight,a,td,th{overflow-wrap:break-word;word-break:break-all}h2:hover>.headerlink,h3:hover>.headerlink,h4:hover>.headerlink,h5:hover>.headerlink,h6:hover>.headerlink{visibility:visible}.SashaEmNoColor,.SashaEmNoColorBottom{font-style:italic}.SashaHeadPageLeft,.SashaPreviousNeighbor{float:left}.SashaHeadPageRight,.SashaNextNeighbor{float:right}#SashaRunkit,.SashaDonatePayWidget,.SashaVideo,.SashaWebMoneyWidget{width:100%;position:relative;overflow:hidden}.SashaEmNoColor,.SashaHeadPageLeft,.SashaHeadPageRight,.SashaNextNeighbor,.SashaPreviousNeighbor,.WorkOnYourself{margin:5rem 0 0}.SashaHeadPageLeft a,.SashaHeadPageRight a,.SashaNextNeighbor a,.SashaPreviousNeighbor a{font-size:2rem}.SashaOlMargin,ol>li,ul>li{margin-left:1rem}.KiraGRights,kbd{font-weight:700;border-radius:.1875rem;padding-right:.2rem}.SashaBottomQuote,.SashaTopQuote{display:inline-block;font-size:3rem;line-height:0}.KiraPDFLink:after,.KiraYouTubeLink:after{margin:0 .1rem 0 .4rem}body{font-family:Arial,Helvetica,sans-serif;font-size:1.1875rem;margin:0;padding:0}a{text-decoration:none}a:focus{outline:0}.KiraPDFLink:after{content:url(../../images/interface-images/pdf.png)}.KiraYouTubeLink:after{content:url(../../images/interface-images/youtube.png)}.headerlink{visibility:hidden}.SashaHeader{line-height:.7rem}.KiraGRights{font-style:italic}noscript{color:#fff;font-family:sans-serif;font-weight:700;text-align:center;padding:1rem 0;background:rgba(0,0,0,.9);position:fixed;top:0;z-index:2}table{width:100%}td,th{padding:.5rem}.SashaTOC{list-style-type:none;padding:0 0 0 1rem}dt{font-weight:700}dd{font-style:italic}.russianletters{list-style-type:none}.russianletters li{margin:0}.SashaClearBoth{clear:both}.SashaEmNoColorBottom{margin:1rem 0 0}img{max-width:100%;margin:0 auto}.leftimg{float:left;margin:.3125rem .3125rem .3125rem 0}.rightimg{float:right;margin:.3125rem 0 .3125rem .3125rem}.Sasha140{width:8.75rem}.Sasha280{width:17.5rem}.Sasha470{width:29.375rem}.Sasha700{width:43.75rem}.SashaSign{padding:.4375rem;margin:.3125rem 0}.SashaSign figcaption{margin:0 auto}.external:after{content:url(../../../images/interface_images/external-link.png);margin-left:.2rem}.SashaVideo{padding-bottom:74.38%}#SashaRunkit{padding-bottom:13rem}.SashaWebMoneyWidget{padding-bottom:16rem}iframe{width:100%;height:100%;position:absolute;border:0}blockquote{font-size:1.1875rem;font-style:italic;margin:.625rem 2.5rem;padding:.9375rem}.SashaBlockquote{padding:.25rem;border-width:thick;border-top-style:ridge;border-right-style:groove;border-bottom-style:groove;border-left-style:ridge}.SashaCitation{display:inline-block}.SashaTopQuote{margin:1.8rem 0 0;vertical-align:-.2rem}.SashaBottomQuote{vertical-align:-2.5rem}.SashaEpigraph{font-style:italic;margin:4rem 0;text-align:right}.SashaEpigraph>em{background-image:none}.SashaEpigraph>.SashaEpigraphAuthor{line-height:1rem;margin:2rem 0;font-style:italic}.SashaGingerinasBadExample,.SashaGingerinasExample{padding:.2rem}.SashaVersion{font-size:.9rem;font-weight:700}.SashaCenter{text-align:center}.SashaInline{float:left}.SashaShadow{font-family:Times New Roman,Times,serif;font-size:1.6rem;width:auto}.SashaButton,.SashaClick{float:right}.SashaNotModify{width:.8125rem}.tooltipster-punk-aquamarine .tooltipster-box,.tooltipster-punk-purple .tooltipster-box{border:0;border-radius:.3125rem}.SashaLazy{min-width:1rem}div.a2a_floating_style{padding:.0625rem;top:30%;z-index:1}div.a2a_floating_style>a{color:navy}div.a2a_default_style{border-radius:.375rem;padding:.25rem;float:left}.clearfix:after{content:"";visibility:hidden;display:block;height:0;clear:both}.KiraAddToAny{animation:a 0s 8s forwards;visibility:hidden}div#hg-bg{background-color:rgba(218,165,32,.51)}div#hg-bg:after{background-image:url(../../images/interface-images/hes-gallery/close.png);width:2.5rem;height:2.5rem;top:1.25rem;right:1.25rem}div#hg-howmany{color:#ffefd5;font-size:1.1rem;bottom:-1.875rem}div#hgallery button{background-image:url(../../images/interface-images/hes-gallery/right-arrow.png);width:2.5rem;height:2.5rem;z-index:inherit;opacity:.4}div#hgallery button:hover{opacity:1}div#hgallery button#hg-prev{left:0}div#hgallery button#hg-next{right:0}img#hg-pic{min-height:0;min-width:0;max-height:85vh}@keyframes a{to{visibility:visible}}
/*# sourceMappingURL=data:application/json;base64, */
