<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Поиск Кристиниты - IT-articles</title><link href="https://kristinita.ru/" rel="alternate"></link><link href="https://kristinita.ru/feeds/it-articles.atom.xml" rel="self"></link><id>https://kristinita.ru/</id><updated>2018-04-20T05:07:18+03:00</updated><entry><title>Fastest way to add new version of your Sublime Text package</title><link href="https://kristinita.ru/IT-articles/Fastest-way-to-add-new-version-of-Sublime-Text-3-package.html" rel="alternate"></link><published>2018-04-20T05:07:18+03:00</published><updated>2018-04-20T05:07:18+03:00</updated><author><name>Sasha Chernykh</name></author><id>tag:kristinita.ru,2018-04-20:/IT-articles/Fastest-way-to-add-new-version-of-Sublime-Text-3-package.html</id><summary type="html">&lt;p&gt;Tutorial, how you can make release and changelog, use only one command &lt;br&gt;&lt;br&gt; &lt;img alt="Package Control messages" src="https://i.imgur.com/J5AuHmX.png"&gt; &lt;br&gt;&lt;br&gt; &lt;img alt="*CHANGELOG.md* and *messages.json*" src="https://i.imgur.com/12fFJsX.png"&gt; &lt;br&gt;&lt;br&gt; &lt;img alt="*messages/&amp;amp;lt;version&amp;amp;gt;.txt* and *package.json*" src="https://i.imgur.com/kkKjiv5.png"&gt; &lt;br&gt;&lt;br&gt; &lt;img alt="Releases page" src="https://i.imgur.com/FwPHBZS.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;!-- MarkdownTOC --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#audience"&gt;Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relevance"&gt;Relevance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demonstration"&gt;Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#activation"&gt;Activation&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#github-token"&gt;GitHub token&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#upstream-branch"&gt;Upstream branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changelogmd"&gt;CHANGELOG.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packagejson"&gt;package.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-itjson"&gt;.release-it.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#messagesjson"&gt;messages.json&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#details"&gt;Details&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#release-it-command"&gt;release-it command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-itjson-1"&gt;.release-it.json&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#buildcommand"&gt;buildCommand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#another-lines"&gt;Another lines&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#problems-and-non-fixed-bugs"&gt;Problems and non-fixed bugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-environment"&gt;Testing environment&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;&lt;a id="overview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1. Overview&lt;/h2&gt;
&lt;p&gt;Tutorial, how you can quick to create detailed release and changelog for your Sublime Text package.&lt;/p&gt;
&lt;p&gt;&lt;a id="audience"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2. Audience&lt;/h2&gt;
&lt;p&gt;Inexperienced developers of Sublime Text 3 packages.&lt;/p&gt;
&lt;p&gt;This article may be useful for any non-Sublime Text developers, which makes releases and changelog.&lt;/p&gt;
&lt;p&gt;&lt;a id="relevance"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3. Relevance&lt;/h2&gt;
&lt;p&gt;This article is relevant for April 2018. In the future, the data in this article may be obsolete.&lt;/p&gt;
&lt;p&gt;&lt;a id="motivation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;4. Motivation&lt;/h2&gt;
&lt;p&gt;When I create new release for my Sublime Text package, I need:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add changelog to &lt;a href="https://github.com/Kristinita/SashaSublime/releases" target="_blank"&gt;GitHub release page&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Update &lt;em&gt;CHANGELOG.md&lt;/em&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://packagecontrol.io/docs/messaging" target="_blank"&gt;Update version in &lt;em&gt;messages.json&lt;/em&gt;&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Add changelog to &lt;em&gt;messages/&amp;lt;version&amp;gt;.txt&lt;/em&gt; file,&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It may take a lot of time.&lt;/p&gt;
&lt;p&gt;In this article I wrote, how possible to make all these actions use only one command in command line.&lt;/p&gt;
&lt;p&gt;&lt;a id="demonstration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;5. Demonstration&lt;/h2&gt;
&lt;p&gt;I &lt;a href="https://github.com/Kristinita/SashaSublime/commit/40783aee5a678d62f4e703248c277c725246f1ea" target="_blank"&gt;push commit&lt;/a&gt; to my GitHub repository → I enter in command line:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;release-it -n -V
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Result: &lt;a href="https://github.com/Kristinita/SashaSublime/commit/b6bbf815fc4e59eff72c99e454898ec92d021990" target="_blank"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/Kristinita/SashaSublime/releases" target="_blank"&gt;2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CHANGELOG.md&lt;/em&gt; and &lt;em&gt;messages.json&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="*CHANGELOG.md* and *messages.json*" src="https://i.imgur.com/12fFJsX.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;messages/&amp;lt;version&amp;gt;.txt&lt;/em&gt; and &lt;em&gt;package.json&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="*messages/&amp;amp;lt;version&amp;amp;gt;.txt* and *package.json*" src="https://i.imgur.com/kkKjiv5.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Kristinita/SashaSublime/releases" target="_blank"&gt;Releases page&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Releases page" src="https://i.imgur.com/FwPHBZS.png"&gt;&lt;/p&gt;
&lt;p&gt;If you want to have same behavior, read on.&lt;/p&gt;
&lt;p&gt;&lt;a id="features"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;6. Features&lt;/h2&gt;
&lt;p&gt;Tutorial of this article must be support:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cross-platform,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://semver.org/" target="_blank"&gt;Semver&lt;/a&gt; &lt;a href="https://semver.org/#spec-item-8" target="_blank"&gt;major&lt;/a&gt;, &lt;a href="https://semver.org/#spec-item-7" target="_blank"&gt;minor&lt;/a&gt;, &lt;a href="https://semver.org/#spec-item-6" target="_blank"&gt;patch&lt;/a&gt; and custom tags.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="limitations"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;7. Limitations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Your must host your package to GitHub. If your package on BitBucket, GitLab or another hosting, you can't make a release via &lt;a href="https://github.com/webpro/release-it" target="_blank"&gt;release-it&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Your commits must be must be compatible with &lt;a href="https://conventionalcommits.org/" target="_blank"&gt;Conventional Commits&lt;/a&gt;. &lt;a href="https://conventionalcommits.org/" target="_blank"&gt;List of supported scopes&lt;/a&gt;. I recommend use &lt;a href="https://www.npmjs.com/package/commitizen" target="_blank"&gt;commitizen&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;8. Installation&lt;/h2&gt;
&lt;p&gt;You need to install:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Node.js and npm, if no;&lt;/li&gt;
&lt;li&gt;git if no, even if you use another VCS;&lt;/li&gt;
&lt;li&gt;UNIX commands &lt;em&gt;tee&lt;/em&gt;, &lt;em&gt;cat&lt;/em&gt;, &lt;em&gt;mv&lt;/em&gt; and &lt;em&gt;sed&lt;/em&gt;, if no; for Windows users I recommend install &lt;a href="https://chocolatey.org/packages/Cygwin" target="_blank"&gt;Cygwin&lt;/a&gt; and &lt;a href="https://lifehacker.com/362316/use-unix-commands-in-windows-built-in-command-prompt" target="_blank"&gt;add to your &lt;em&gt;Path&lt;/em&gt; environment variable value — path to Cygwin commands folder&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/release-it#global" target="_blank"&gt;release-it globally&lt;/a&gt; &lt;a href="https://github.com/webpro/release-it/issues/233" target="_blank"&gt;≥ 7.3.0&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/generate-changelog#installation" target="_blank"&gt;generate-changelog globally&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/package/js-beautify" target="_blank"&gt;npm js-beautify globally&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="activation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;9. Activation&lt;/h2&gt;
&lt;p&gt;You need to create all files from this section in root folder of your package repository.&lt;/p&gt;
&lt;p&gt;You can see configuration files of real package in &lt;a href="https://github.com/Kristinita/SashaSublime" target="_blank"&gt;SashaSublime repository&lt;/a&gt;.&lt;/p&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;I recommend in first do actions from &lt;a href="#activation"&gt;Activation&lt;/a&gt; and &lt;a href="#usage"&gt;Usage&lt;/a&gt; sections in the test repository, not real. Argumentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You or I can make a typo(s);&lt;/li&gt;
&lt;li&gt;Differences in my and your environments;&lt;/li&gt;
&lt;li&gt;Different versions of tools from this article can do another behavior, &lt;a href="https://github.com/webpro/release-it/issues/233" target="_blank"&gt;example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="github-token"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.1. GitHub token&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/release-it#%EF%B8%8F-github-release" target="_blank"&gt;Get your GitHub token and add environment variable with value — your token&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You need to select all &lt;em&gt;repo&lt;/em&gt; scopes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GitHub token" src="https://i.imgur.com/sWfide5.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="upstream-branch"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.2. Upstream branch&lt;/h3&gt;
&lt;p&gt;You need to &lt;a href="https://stackoverflow.com/a/6089415/5951529" target="_blank"&gt;set upstream branch&lt;/a&gt;:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout yourbranch
git branch --set-upstream
&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;yourbranch&lt;/em&gt; — name of branch, which you want to do upstream. Please, change &lt;em&gt;yourbranch&lt;/em&gt; to real branch name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="changelogmd"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.3. CHANGELOG.md&lt;/h3&gt;
&lt;p&gt;Create blank file &lt;em&gt;CHANGELOG.md&lt;/em&gt;. If no, generate-changelog will works incorrect.&lt;/p&gt;
&lt;p&gt;&lt;a id="packagejson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.4. package.json&lt;/h3&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SashaSublime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4.14.7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;release&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;release-it&amp;quot;&lt;/span&gt;
	&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;SashaSublime&lt;/em&gt; — name of your package,&lt;/li&gt;
&lt;li&gt;&lt;em&gt;4.14.7&lt;/em&gt; — previous version of your package. Use &lt;em&gt;0.0.0&lt;/em&gt;, if you add first release for your package.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Replace &lt;em&gt;SashaSublime&lt;/em&gt; and &lt;em&gt;4.14.7&lt;/em&gt; to your real values.&lt;/p&gt;
&lt;p&gt;&lt;a id="release-itjson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.5. .release-it.json&lt;/h3&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;buildCommand&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;changelog -f - -u https:\/\/${repo.host}\/${repo.repository} | tee messages\/${version}.txt | cat - CHANGELOG.md &amp;gt; temp &amp;amp;&amp;amp; mv temp CHANGELOG.md &amp;amp;&amp;amp; sed -i &amp;#39;\/\\\&amp;quot;install\\\&amp;quot;: \\\&amp;quot;messages\\\/install\\.txt\\\&amp;quot;\/i\\\&amp;quot;${version}\\\&amp;quot;: \\\&amp;quot;messages\\\/${version}\\.txt\\\&amp;quot;,&amp;#39; messages.json &amp;amp;&amp;amp; js-beautify -r messages.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;changelogCommand&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;changelog -f -&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;release&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;tokenRef&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GITHUB_TOKEN&amp;quot;&lt;/span&gt;
	&lt;span class="p"&gt;},&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;npm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;publish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
	&lt;span class="p"&gt;},&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;safeBump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;addUntrackedFiles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;tagName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;st3-%s&amp;quot;&lt;/span&gt;
	&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;Hint&lt;/p&gt;
&lt;p&gt;Pay attention to slashes escaping. To convert terminal command to JSON I recommend to use &lt;a href="https://www.freeformatter.com/json-escape.html#ad-output" target="_blank"&gt;freeformatter.com service&lt;/a&gt;. For example:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sed -i &lt;span class="s1"&gt;&amp;#39;/\&amp;quot;install\&amp;quot;\: \&amp;quot;messages\/install\.txt\&amp;quot;/i\&amp;quot;4\.14\.7\&amp;quot;\: \&amp;quot;messages\/4\.14\.7\.txt\&amp;quot;,&amp;#39;&lt;/span&gt; messages.json
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;will convert to:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sed&lt;/span&gt; &lt;span class="err"&gt;-i&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;\/\\\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;install\\\&amp;quot;: \\\&amp;quot;messages\\\/install\\.txt\\\&amp;quot;\/i\\\&amp;quot;${version}\\\&amp;quot;: \\\&amp;quot;messages\\\/${version}\\.txt\\\&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;messages.json&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a id="messagesjson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.6. messages.json&lt;/h3&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;install&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;messages/install.txt&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="usage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10. Usage&lt;/h2&gt;
&lt;p&gt;Add, commit and push your changes to remote GitHub repository. Example:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Make any changes
D&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\SashaSublime&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;git add .&lt;/span&gt;

# I use commitizen instead of git commit
D&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\SashaSublime&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;git cz&lt;/span&gt;
cz-cli@2.9.6, cz-conventional-changelog@1.2.0


Line 1 will be cropped at 100 characters. All other lines will be wrapped after 100 characters.

? Select the type of change that you&amp;#39;re committing: build:     Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
? Denote the scope of this change ($location, $browser, $compile, etc.):
release-it
? Write a short, imperative tense description of the change:
Fix .release-it.json
? Provide a longer description of the change:
Add to .release-it.json URL of SashaSublime repository
? List any breaking changes or issues closed by this change:

[SashaDevelop 52e517a] build(release-it): Fix .release-it.json
1 file changed, 2 insertions(+), 1 deletion(-)

D&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\SashaSublime&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;git push&lt;/span&gt;
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 735 bytes &lt;span class="p"&gt;|&lt;/span&gt; 183.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Kristinita/SashaSublime.git
	0360628..52e517a  SashaDevelop -&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; SashaDevelop
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now run &lt;a href="https://www.npmjs.com/package/release-it#%EF%B8%8F-usage" target="_blank"&gt;one of command&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;release-it -n -V&lt;/em&gt; or &lt;em&gt;release-it patch -n -V&lt;/em&gt; — for release patch version;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;release-it --minor -n -V&lt;/em&gt; — for release minor version;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;release-it --major -n -V&lt;/em&gt; — for release major version;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;release-it 4.14.7 -n -V&lt;/em&gt; — for release custom version; &lt;em&gt;4.14.7&lt;/em&gt; in example.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also you can &lt;a href="https://www.npmjs.com/package/release-it" target="_blank"&gt;create pre-releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Example result see in &lt;a href="#demonstration"&gt;demonstration&lt;/a&gt; section.&lt;/p&gt;
&lt;p&gt;&lt;a id="details"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;11. Details&lt;/h2&gt;
&lt;p&gt;If you want to know, how files and commands works, please, read this section.&lt;/p&gt;
&lt;p&gt;&lt;a id="release-it-command"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;11.1. release-it command&lt;/h3&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;release-it -n -V
&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;-n&lt;/em&gt; — &lt;a href="https://www.npmjs.com/package/release-it#-interactive-vs-non-interactive-mode" target="_blank"&gt;non-interactive mode&lt;/a&gt;. That you don't need input values each time manually.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;-V&lt;/em&gt; — verbose. You can disable this command-line argument, but if you will get a bug, this argument may help you.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="release-itjson-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;11.2. .release-it.json&lt;/h3&gt;
&lt;p&gt;&lt;a id="buildcommand"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;11.2.1. buildCommand&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;changelog -f -&lt;/em&gt; — generate changelog. &lt;em&gt;-&lt;/em&gt; — argument, that changelog &lt;a href="https://unix.stackexchange.com/a/419416/237999" target="_blank"&gt;stdout to console&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="SashaInlineHighlight"&gt;-u https:\/\/${repo.host}\/${repo.repository}&lt;/code&gt; — support URL's in changelog, that the user can quick go to the commit link. &lt;code class="SashaInlineHighlight"&gt;${repo.host}&lt;/code&gt; — github.com. &lt;code class="SashaInlineHighlight"&gt;${repo.repository}&lt;/code&gt; — &lt;code class="SashaInlineHighlight"&gt;&amp;lt;your username&amp;gt;/&amp;lt;your repository&amp;gt;&lt;/code&gt;, &lt;code class="SashaInlineHighlight"&gt;Kristinita/SashaSublime&lt;/code&gt; for my example.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if &lt;code class="SashaInlineHighlight"&gt;-u https:\/\/${repo.host}\/${repo.repository}&lt;/code&gt;, changelog generate &lt;code class="SashaInlineHighlight"&gt;([40783aee](https://github.com/Kristinita/SashaSublime/commit/40783aee5a678d62f4e703248c277c725246f1ea))&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;if no &lt;code class="SashaInlineHighlight"&gt;-u https:\/\/${repo.host}\/${repo.repository}&lt;/code&gt;, changelog generate &lt;code class="SashaInlineHighlight"&gt;(40783aee)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="err"&gt;tee&lt;/span&gt; &lt;span class="err"&gt;messages\/$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;version&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;.txt&lt;/span&gt;&lt;/code&gt; — output changelog to &lt;em&gt;messages/&amp;lt;your new release&amp;gt;.txt&lt;/em&gt; file. File &lt;em&gt;&amp;lt;your new release&amp;gt;.txt&lt;/em&gt; will create automatically. See &lt;a href="https://www.computerhope.com/unix/utee.htm" target="_blank"&gt;description of &lt;em&gt;tee&lt;/em&gt; command&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;cat - CHANGELOG.md &amp;gt; temp &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv temp CHANGELOG.md&lt;/code&gt; — &lt;a href="https://superuser.com/a/246841/572069" target="_blank"&gt;append changelog at beginning&lt;/a&gt; of &lt;em&gt;CHANGELOG.md&lt;/em&gt; file. &lt;em&gt;CHANGELOG.md&lt;/em&gt; do not overwrite.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="err"&gt;sed&lt;/span&gt; &lt;span class="err"&gt;-i&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;\/\\\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;install\\\&amp;quot;: \\\&amp;quot;messages\\\/install\\.txt\\\&amp;quot;\/i\\\&amp;quot;${version}\\\&amp;quot;: \\\&amp;quot;messages\\\/${version}\\.txt\\\&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&amp;#39;&lt;/span&gt; &lt;span class="err"&gt;messages.json&lt;/span&gt;&lt;/code&gt; — &lt;a href="https://stackoverflow.com/a/11695098/5951529" target="_blank"&gt;add&lt;/a&gt; &lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;your version&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;messages/&amp;lt;your version&amp;gt;.txt&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;/code&gt; line before &lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;install&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;messages/install.txt&amp;quot;&lt;/span&gt;&lt;/code&gt; line.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;js-beautify -r messages.json&lt;/code&gt; — &lt;a href="https://www.npmjs.com/package/js-beautify#options" target="_blank"&gt;beautify &lt;em&gt;messages.json&lt;/em&gt; file in-place&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="another-lines"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;11.2.2. Another lines&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;changelogCommand&lt;/em&gt; — command, that generate changelog to &lt;code class="SashaInlineHighlight"&gt;https://github.com/&amp;lt;your username&amp;gt;/&amp;lt;your repository&amp;gt;/releases&lt;/code&gt;. Command must stdout to console.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;release&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;/code&gt; — &lt;a href="https://www.npmjs.com/package/release-it#%EF%B8%8F-configuration" target="_blank"&gt;post changelog&lt;/a&gt; to &lt;code class="SashaInlineHighlight"&gt;https://github.com/&amp;lt;your username&amp;gt;/&amp;lt;your repository&amp;gt;/releases&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;GITHUB_TOKEN&lt;/em&gt; — your &lt;a href="#github-token"&gt;&lt;em&gt;GITHUB_TOKEN&lt;/em&gt; environment variable&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;npm&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;publish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;/code&gt; — don't publish release to &lt;a href="https://www.npmjs.com/" target="_blank"&gt;npm&lt;/a&gt;. We are writing Sublime Text package, not npm modules, so needs this parameter.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;safeBump&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;/code&gt; — that correct version in &lt;code class="SashaInlineHighlight"&gt;https://github.com/&amp;lt;your username&amp;gt;/&amp;lt;your repository&amp;gt;/releases&lt;/code&gt;; see &lt;a href="https://github.com/webpro/release-it/issues/218" target="_blank"&gt;issue&lt;/a&gt; for details.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;addUntrackedFiles&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;/code&gt; — add &lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository" target="_blank"&gt;untracked file&lt;/a&gt; &lt;em&gt;messages/&amp;lt;version&amp;gt;.txt&lt;/em&gt; &lt;a href="https://github.com/webpro/release-it/issues/233" target="_blank"&gt;to release commit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;&lt;span class="s2"&gt;&amp;quot;tagName&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;st3-%s&amp;quot;&lt;/span&gt;&lt;/code&gt; — &lt;a href="https://github.com/wbond/package_control/issues/1217#issuecomment-280041797" target="_blank"&gt;correct tag name&lt;/a&gt; for Package Control. Tags for Sublime Text 3 must be in &lt;em&gt;st3-&amp;lt;your version&amp;gt;&lt;/em&gt; format, for example — &lt;em&gt;st3-4.14.7&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="problems-and-non-fixed-bugs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;12. Problems and non-fixed bugs&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/lob/generate-changelog/issues/37" target="_blank"&gt;You can't use&lt;/a&gt; &lt;a href="https://github.com/ngryman/cz-emoji" target="_blank"&gt;cz-emoji&lt;/a&gt; for commit generation. Changelog will blank.&lt;/li&gt;
&lt;li&gt;release-it &lt;a href="https://github.com/webpro/release-it/issues/218" target="_blank"&gt;can works incorrect&lt;/a&gt; in &lt;em&gt;--dry-run&lt;/em&gt; mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/webpro/release-it/issues/213" target="_blank"&gt;You can have bugs&lt;/a&gt;, if you want to use &lt;em&gt;${changelog}&lt;/em&gt; release-it variable.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="testing-environment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;13. Testing environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 Enterprise LTSB 64-bit EN,&lt;/li&gt;
&lt;li&gt;Node.js 9.4.0,&lt;/li&gt;
&lt;li&gt;git 2.16.0.windows.2,&lt;/li&gt;
&lt;li&gt;release-it 7.3.0,&lt;/li&gt;
&lt;li&gt;changelog 1.7.0,&lt;/li&gt;
&lt;li&gt;tee (GNU coreutils) 8.26, packaged by Cygwin (8.26-1),&lt;/li&gt;
&lt;li&gt;cat (GNU coreutils) 8.26, packaged by Cygwin (8.26-1),&lt;/li&gt;
&lt;li&gt;mv (GNU coreutils) 8.26, packaged by Cygwin (8.26-1),&lt;/li&gt;
&lt;li&gt;sed (GNU sed) 4.2.2,&lt;/li&gt;
&lt;li&gt;js-beautify 1.7.5.&lt;/li&gt;
&lt;/ul&gt;</content><category term="it-articles"></category><category term="sublime-text"></category><category term="release"></category></entry><entry><title>How to publish your package to PyPI, 2018</title><link href="https://kristinita.ru/IT-articles/How-to-publish-your-package-to-PyPI-2018.html" rel="alternate"></link><published>2018-04-20T05:07:18+03:00</published><updated>2018-04-20T05:07:18+03:00</updated><author><name>Sasha Chernykh</name></author><id>tag:kristinita.ru,2018-04-20:/IT-articles/How-to-publish-your-package-to-PyPI-2018.html</id><summary type="html">&lt;p&gt;Tutorial, how you can publish your Python package to PyPI: &lt;br&gt;&lt;br&gt; &lt;img alt="Erichek on pypi.python.org" src="https://i.imgur.com/IzSH7BK.png"&gt; &lt;br&gt;&lt;br&gt; &lt;img alt="Erichek on pypi.org" src="https://i.imgur.com/4P3w8TP.png"&gt; &lt;br&gt;&lt;br&gt; &lt;img alt="Erichek on pypi.org 2" src="https://i.imgur.com/IxsUDu4.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;!-- MarkdownTOC --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#audience"&gt;Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relevance"&gt;Relevance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;Motivation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demonstration"&gt;Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#9595init9595py"&gt;&amp;#95;&amp;#95;init&amp;#95;&amp;#95;.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readme"&gt;README&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#readmemd"&gt;README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readmerst"&gt;README.rst&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#setupcfg"&gt;setup.cfg&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#long_description"&gt;long_description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#classifiers"&gt;classifiers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zip_safe"&gt;zip_safe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#packages"&gt;packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#console_scripts"&gt;console_scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bdist_wheel"&gt;bdist_wheel&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependencies"&gt;Dependencies&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#difference-between-requirementstxt-and-install_requires"&gt;Difference between requirements.txt and install_requires&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#install_requires"&gt;install_requires&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirementstxt"&gt;requirements.txt&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#setuppy"&gt;setup.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirementstxt-1"&gt;requirements.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manifestin"&gt;MANIFEST.in&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pyroma"&gt;pyroma&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testpypi"&gt;TestPyPI&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-is-testpypi"&gt;What is TestPyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#registration"&gt;Registration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#twine-settings"&gt;Twine settings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-package"&gt;Build package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#publish-to-testpypi"&gt;Publish to TestPyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#visit-testpypi"&gt;Visit TestPyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#virtualenv"&gt;virtualenv&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#why-virtual-environment"&gt;Why virtual environment?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-virtualenv-and-virtualenvwrapper"&gt;Using virtualenv and virtualenvwrapper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#checking"&gt;Checking&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#pypi"&gt;PyPI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating"&gt;Updating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automatic-updating-release-and-changelog"&gt;Automatic updating, release and changelog&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#demonstration-1"&gt;Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-1"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-and-setting-up"&gt;Installation and setting-up&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#release-itjson"&gt;.release-it.json&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-environment"&gt;Testing environment&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;&lt;a id="overview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1. Overview&lt;/h2&gt;
&lt;p&gt;Tutorial, how you can add your Python package to &lt;a href="https://en.wikipedia.org/wiki/Python_Package_Index" target="_blank"&gt;PyPI — Python Package Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want, that users install your Python &lt;a href="https://stackoverflow.com/a/7948504/5951529" target="_blank"&gt;package&lt;/a&gt; via command:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install &amp;lt;your_package&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Read this article.&lt;/p&gt;
&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;In this article I wrote the most common method at February 2018. But you can consider another tools as &lt;a href="https://github.com/takluyver/flit" target="_blank"&gt;flit&lt;/a&gt; and &lt;a href="https://github.com/sdispater/poet" target="_blank"&gt;poet&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="audience"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2. Audience&lt;/h2&gt;
&lt;p&gt;Python developers, that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;publish package to PyPI first time,&lt;/li&gt;
&lt;li&gt;already published packages to PyPI, but want to do it more qualitatively.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="relevance"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3. Relevance&lt;/h2&gt;
&lt;p&gt;This article is relevant for February 2018. In the future, the data in this article may be obsolete.&lt;/p&gt;
&lt;p&gt;&lt;a id="motivation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;4. Motivation&lt;/h2&gt;
&lt;p&gt;One more article? Why?&lt;/p&gt;
&lt;p&gt;I read some articles about PyPI publishing → I think, that articles, which I read, have disadvantages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;outdated;&lt;/li&gt;
&lt;li&gt;not show real examples and demonstrations;&lt;/li&gt;
&lt;li&gt;not all-in-one; I was forced to read other resources;&lt;/li&gt;
&lt;li&gt;They do not describe all the difficulties the developer has encountered, when try to publish package on PyPI.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I don't want, that another beginner Python developers take a lot of time for PyPI publishing as me. And I try to write an article, that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;non-outdated at February 2018;&lt;/li&gt;
&lt;li&gt;show examples and demos;&lt;/li&gt;
&lt;li&gt;all-in-one; I try to add in my article all information, that I need for first PyPI publishing;&lt;/li&gt;
&lt;li&gt;described all problems, to solve that personally I spent my time.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="demonstration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;5. Demonstration&lt;/h2&gt;
&lt;p&gt;For examples in this article, I select my Erichek package.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/erichek" target="_blank"&gt;https://pypi.python.org/pypi/erichek&lt;/a&gt; page at February 2018:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Erichek on pypi.python.org" src="https://i.imgur.com/yzNSQNm.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/erichek" target="_blank"&gt;https://pypi.org/project/erichek&lt;/a&gt; &lt;a href="https://pyfound.blogspot.com/2018/02/python-package-maintainers-help-test.html" target="_blank"&gt;Warehouse&lt;/a&gt; page at February 2018:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Erichek on pypi.org" src="https://i.imgur.com/DjMYPrP.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Erichek on pypi.org 2" src="https://i.imgur.com/rdfBR5j.png"&gt;&lt;/p&gt;
&lt;p&gt;You can install Erichek, use command:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install erichek
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to have similar behavior, read on.&lt;/p&gt;
&lt;p&gt;If I have explained something incomprehensibly, see files of &lt;a href="https://github.com/Kristinita/Erichek" target="_blank"&gt;Erichek GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="features"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;6. Features&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;This article — cross platform solution.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="limitations"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;7. Limitations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You must be able to write working Python packages.&lt;/li&gt;
&lt;li&gt;Erichek and another my packages only for Python 3. I don't want support Python 2. If you want support Python 2, possibly, you will need some other action.&lt;/li&gt;
&lt;li&gt;If you can have a configuration different, that Erichek, possibly, you will need in another actions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;8. Installation&lt;/h2&gt;
&lt;p&gt;Please, install via pip (&lt;em&gt;pip install &amp;lt;package&amp;gt;&lt;/em&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/twine" target="_blank"&gt;twine&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/wheel" target="_blank"&gt;wheel&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://virtualenv.pypa.io/en/stable/" target="_blank"&gt;virtualenv&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://virtualenvwrapper.readthedocs.io/" target="_blank"&gt;virtualenvwrapper&lt;/a&gt; for Linux/macOS, &lt;a href="https://pypi.python.org/pypi/virtualenvwrapper-win" target="_blank"&gt;virtualenvwrapper-win&lt;/a&gt; for Windows,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/pyroma/" target="_blank"&gt;pyroma&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;update your &lt;a href="https://pypi.python.org/pypi/setuptools" target="_blank"&gt;setuptools&lt;/a&gt;, to be sure, that &lt;a href="https://github.com/regebro/pyroma/issues/16" target="_blank"&gt;pyroma works correct&lt;/a&gt; — &lt;code class="SashaInlineHighlight"&gt;pip install -U setuptools&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="configuration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;9. Configuration&lt;/h2&gt;
&lt;p&gt;&lt;a id="files"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.1. Files&lt;/h3&gt;
&lt;p&gt;Simplify configuration. Real project configuration see in &lt;a href="https://github.com/Kristinita/Erichek" target="_blank"&gt;Erichek GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;│   .release-it.json
│   CHANGELOG.md
│   LICENSE.md
│   MANIFEST.in
│   README.rst
│   package.json
│   requirements.txt
│   setup.cfg
│   setup.py
│
├───erichek
│       __init__.py
│       __main__.py
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In &lt;a href="https://softwareengineering.stackexchange.com/q/301691/264224" target="_blank"&gt;Software Engineering site recommends&lt;/a&gt; use uppercase for README and some another text files.&lt;/p&gt;
&lt;div class="admonition question"&gt;
&lt;p class="admonition-title"&gt;Question&lt;/p&gt;
&lt;p&gt;I &lt;a href="https://softwareengineering.stackexchange.com/questions/365410/readme-md-vs-readme-md" target="_blank"&gt;ask a question&lt;/a&gt;, need I use uppercase for file extension or no? &lt;em&gt;README.rst&lt;/em&gt; or &lt;em&gt;README.RST&lt;/em&gt;? But I get 7 minuses and my question will delete.&lt;/p&gt;
&lt;p&gt;I don't find standard. Personally I use lowercase for file extensions, but you can use uppercase.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Using HTML Entities --&gt;

&lt;p&gt;&lt;a id="9595init9595py"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.2. &amp;#95;&amp;#95;init&amp;#95;&amp;#95;.py&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://stackoverflow.com/a/4116384/5951529" target="_blank"&gt;answer&lt;/a&gt;, why &lt;em&gt;__init__.py&lt;/em&gt; need. This file may be blank or contains content.&lt;/p&gt;
&lt;p&gt;&lt;a id="license"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.3. License&lt;/h3&gt;
&lt;p&gt;Add text of license for your package to &lt;em&gt;LICENSE.md&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;If your editor is &lt;a href="https://www.sublimetext.com/3" target="_blank"&gt;Sublime Text 3&lt;/a&gt;, you can use &lt;a href="https://packagecontrol.io/packages/Licence%20Snippets" target="_blank"&gt;License Snippets&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;&lt;a id="readme"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.4. README&lt;/h3&gt;
&lt;p&gt;&lt;a id="readmemd"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.4.1. README.md&lt;/h4&gt;
&lt;p&gt;If you preferred write README in Markdown, you can have problems.&lt;/p&gt;
&lt;p&gt;At February 2018 &lt;a href="https://github.com/pypa/warehouse/issues/869" target="_blank"&gt;PyPI doesn't support Readme.md&lt;/a&gt; without dependencies. Possibly, &lt;a href="https://github.com/dhimmel/hetio/issues/7#issuecomment-283797432" target="_blank"&gt;it seems like there is no easy way to use a markdown README for PyPI. Solutions involve requiring pandoc locally, which is a heavy dependency&lt;/a&gt;.&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt;Hint&lt;/p&gt;
&lt;p&gt;You can &lt;a href="https://bfroehle.com/2013/04/26/converting-md-to-rst/" target="_blank"&gt;convert Markdown to reStructuredText&lt;/a&gt; use &lt;a href="http://pandoc.org" target="_blank"&gt;Pandoc&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="readmerst"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.4.2. README.rst&lt;/h4&gt;
&lt;p&gt;I recommend write README in &lt;a href="http://docutils.sourceforge.net/rst.html" target="_blank"&gt;reStructuredText&lt;/a&gt; — you need use file &lt;em&gt;README.rst&lt;/em&gt;. I add to &lt;a href="https://github.com/Kristinita/Erichek/blob/master/README.rst" target="_blank"&gt;my README.rst&lt;/a&gt; next information:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Short package description,&lt;/li&gt;
&lt;li&gt;Badges,&lt;/li&gt;
&lt;li&gt;Link to long package description on my site.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I prefer to add long description to personal site, not to README, because I have much more options in the design of the description.&lt;/p&gt;
&lt;p&gt;&lt;a id="setupcfg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.5. setup.cfg&lt;/h3&gt;
&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;You can add your parameters to &lt;em&gt;setup.py&lt;/em&gt;, not to &lt;em&gt;setup.cfg&lt;/em&gt;, see &lt;a href="https://github.com/pypa/python-packaging-user-guide/issues/378" target="_blank"&gt;discussion&lt;/a&gt;. I believe, that adding to &lt;em&gt;setup.cfg&lt;/em&gt; more convenient.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/4383/sampleproject/blob/update/distribute/setup.cfg" target="_blank"&gt;See example &lt;em&gt;setup.cfg&lt;/em&gt;&lt;/a&gt;. Copy content of this file to your &lt;em&gt;setup.cfg&lt;/em&gt; and change example values of parameters to your real values.&lt;/p&gt;
&lt;p&gt;In the subsections below I describe the places that caused me difficulties.&lt;/p&gt;
&lt;p&gt;&lt;a id="long_description"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.1. long_description&lt;/h4&gt;
&lt;p&gt;my value:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;long_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;file: Readme.rst&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Set your README file as value. Letters &lt;a href="https://github.com/regebro/pyroma/issues/16#issuecomment-362904598" target="_blank"&gt;must be in same register as in file&lt;/a&gt;. For example, if your file is &lt;em&gt;Readme.rst&lt;/em&gt;, you need to set &lt;em&gt;file: README.rst&lt;/em&gt;, not &lt;em&gt;file: Readme.rst&lt;/em&gt; or &lt;em&gt;file: README.RST&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="classifiers"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.2. classifiers&lt;/h4&gt;
&lt;p&gt;You can use only classifiers from &lt;a href="https://pypi.python.org/pypi?%3Aaction=list_classifiers" target="_blank"&gt;this list&lt;/a&gt;. If no, you can't publish your package to PyPI.&lt;/p&gt;
&lt;p&gt;Possibly, UNIX users can select classifiers via &lt;a href="https://github.com/mbr/pypi-classifiers" target="_blank"&gt;pypi-classifiers GUI&lt;/a&gt;, but &lt;a href="https://github.com/mbr/pypi-classifiers/issues/2" target="_blank"&gt;I can't set this program for Windows 10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="zip_safe"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.3. zip_safe&lt;/h4&gt;
&lt;p&gt;my value:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;zip_safe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you build your package use Wheels, &lt;a href="https://stackoverflow.com/a/16541150/5951529" target="_blank"&gt;you don't need this parameter&lt;/a&gt;, but pyroma &lt;a href="https://github.com/regebro/pyroma/issues/19" target="_blank"&gt;will show lower value&lt;/a&gt;. So I recommend add &lt;code class="SashaInlineHighlight"&gt;&lt;span class="na"&gt;zip_safe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;False&lt;/span&gt;&lt;/code&gt; or &lt;code class="SashaInlineHighlight"&gt;&lt;span class="na"&gt;zip_safe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;True&lt;/span&gt;&lt;/code&gt; (unimportant) to your &lt;em&gt;setup.cfg&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;a id="packages"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.4. packages&lt;/h4&gt;
&lt;p&gt;my value:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;find:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If no &lt;code class="SashaInlineHighlight"&gt;&lt;span class="na"&gt;packages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;find:&lt;/span&gt;&lt;/code&gt;, users doesn't download folder with your Python module.&lt;/p&gt;
&lt;p&gt;&lt;a id="console_scripts"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.5. console_scripts&lt;/h4&gt;
&lt;p&gt;What is it. If Erichek user want run Erichek, he/she wrote in console:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python &lt;span class="s2"&gt;&amp;quot;path/to/__main__.py&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But since &lt;em&gt;console_scripts&lt;/em&gt; exist in &lt;em&gt;setup.cfg&lt;/em&gt;, Erichek user can use simply command, that get same behavior:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;erichek
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;my value:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;console_scripts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&lt;/span&gt;
&lt;span class="s"&gt;	erichek = erichek.__main__:main&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Parameter and values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;erichek&lt;/code&gt; — name of command, that users of your package will run.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;erichek.__main__&lt;/code&gt; — relative path to your main module. For me it &lt;a href="https://github.com/Kristinita/Erichek/blob/master/erichek/__main__.py" target="_blank"&gt;&lt;em&gt;__main__.py&lt;/em&gt; file in &lt;em&gt;erichek&lt;/em&gt; folder&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;:main&lt;/code&gt; — function, that run, when you run your module. For my &lt;em&gt;__main__.py&lt;/em&gt; it &lt;code class="SashaInlineHighlight"&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt; function.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="bdist_wheel"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.5.6. bdist_wheel&lt;/h4&gt;
&lt;p&gt;my value:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[bdist_wheel]&lt;/span&gt;
&lt;span class="na"&gt;python-tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;py3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See &lt;a href="https://wheel.readthedocs.io/en/stable/" target="_blank"&gt;what is Wheels&lt;/a&gt; and why &lt;a href="https://www.python.org/dev/peps/pep-0427/#comparison-to-egg" target="_blank"&gt;&lt;em&gt;.whl&lt;/em&gt; preferred than &lt;em&gt;.egg&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Erichek — Python 3 package, so I have &lt;code class="SashaInlineHighlight"&gt;&lt;span class="na"&gt;python-tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;py3&lt;/span&gt;&lt;/code&gt;. If your package support Python 2 and 3 both, &lt;a href="https://wheel.readthedocs.io/en/stable/#defining-the-python-version" target="_blank"&gt;you need use&lt;/a&gt; next code:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[bdist_wheel]&lt;/span&gt;
&lt;span class="na"&gt;universal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="dependencies"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.6. Dependencies&lt;/h3&gt;
&lt;p&gt;In this section I tell, what you need, that dependencies of your package from file &lt;em&gt;requirements.txt&lt;/em&gt; automatically install for user. You don't need to write same dependencies in &lt;em&gt;requirements.txt&lt;/em&gt; and &lt;em&gt;setup.cfg&lt;/em&gt;/&lt;em&gt;setup.py&lt;/em&gt;.&lt;/p&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;Some developers &lt;a href="https://stackoverflow.com/a/33685899/5951529" target="_blank"&gt;criticize this method&lt;/a&gt;. If you need different dependencies for &lt;em&gt;requirements.txt&lt;/em&gt; and &lt;em&gt;install_requires&lt;/em&gt;, please, add list of your dependencies in &lt;em&gt;requirements.txt&lt;/em&gt; and &lt;em&gt;setup.cfg&lt;/em&gt; both.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="difference-between-requirementstxt-and-install_requires"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.6.1. Difference between requirements.txt and install_requires&lt;/h4&gt;
&lt;p&gt;Simplified definition.&lt;/p&gt;
&lt;p&gt;&lt;a id="install_requires"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;9.6.1.1. install_requires&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;install_requires&lt;/em&gt; parameter in &lt;em&gt;setup.cfg&lt;/em&gt; or &lt;em&gt;setup.py&lt;/em&gt; show, which packages will install additionally, if user install your package via pip. For example, user install &lt;a href="https://pypi.org/project/sasha/" target="_blank"&gt;clize package&lt;/a&gt;:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install clize
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://github.com/epsy/clize/blob/3d9804b6b652415215677846a44d59fc7ae8929d/setup.py#L13-L19" target="_blank"&gt;Part of clize &lt;em&gt;setup.py&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
	&lt;span class="s1"&gt;&amp;#39;six&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;&amp;#39;sigtools &amp;gt;= 2.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;&amp;#39;attrs &amp;gt;= 17.4.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;&amp;#39;od&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="s1"&gt;&amp;#39;docutils&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In clize installation process &lt;a href="https://github.com/thusoy/sasha/blob/38e50791436859e9e054e50d5c511bbc46011f89/setup.py#L16-L19" target="_blank"&gt;&lt;em&gt;six&lt;/em&gt;, &lt;em&gt;sigtools&lt;/em&gt;, &lt;em&gt;docutils&lt;/em&gt;, &lt;em&gt;od&lt;/em&gt; and &lt;em&gt;attrs&lt;/em&gt; packages&lt;/a&gt; automatically install for user, if this packages no already installed.&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;D:&lt;span class="se"&gt;\&amp;gt;&lt;/span&gt;pip install clize
Collecting clize
	Using cached clize-4.0.3-py2.py3-none-any.whl
Requirement already satisfied: six in c:&lt;span class="se"&gt;\p&lt;/span&gt;ython36&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages &lt;span class="o"&gt;(&lt;/span&gt;from clize&lt;span class="o"&gt;)&lt;/span&gt;
Requirement already satisfied: sigtools&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.0 in c:&lt;span class="se"&gt;\p&lt;/span&gt;ython36&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages &lt;span class="o"&gt;(&lt;/span&gt;from clize&lt;span class="o"&gt;)&lt;/span&gt;
Requirement already satisfied: docutils in c:&lt;span class="se"&gt;\p&lt;/span&gt;ython36&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages &lt;span class="o"&gt;(&lt;/span&gt;from clize&lt;span class="o"&gt;)&lt;/span&gt;
Collecting od &lt;span class="o"&gt;(&lt;/span&gt;from clize&lt;span class="o"&gt;)&lt;/span&gt;
	Using cached od-1.0-py3-none-any.whl
Requirement already satisfied: attrs&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;.4.0 in c:&lt;span class="se"&gt;\p&lt;/span&gt;ython36&lt;span class="se"&gt;\l&lt;/span&gt;ib&lt;span class="se"&gt;\s&lt;/span&gt;ite-packages &lt;span class="o"&gt;(&lt;/span&gt;from clize&lt;span class="o"&gt;)&lt;/span&gt;
Installing collected packages: od, clize
Successfully installed clize-4.0.3 od-1.0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="requirementstxt"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;9.6.1.2. requirements.txt&lt;/h5&gt;
&lt;p&gt;For example, I am Python package developer and have local dependencies for my package.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If I want to update local dependencies, I update versions in &lt;em&gt;requirements.txt&lt;/em&gt; → I run in console:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -r requirements.txt -t . --upgrade
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;my local dependencies are updated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Services as &lt;a href="https://dependabot.com/" target="_blank"&gt;Dependabot&lt;/a&gt; or &lt;a href="https://pyup.io/" target="_blank"&gt;Pyup&lt;/a&gt; check dependencies from &lt;em&gt;requirements.txt&lt;/em&gt; and update numbers of outdated versions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="setuppy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.6.2. setup.py&lt;/h4&gt;
&lt;p&gt;In this and 2 next sections I wrote, how you can get &lt;a href="#installrequires"&gt;install_requires behavior&lt;/a&gt;, use only &lt;em&gt;requirements.txt&lt;/em&gt; file. You don't need additional add your dependencies to install_requires.&lt;/p&gt;
&lt;p&gt;Add &lt;a href="https://stackoverflow.com/a/16624700/5951529" target="_blank"&gt;this code&lt;/a&gt; to your &lt;em&gt;setup.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pip.req&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse_requirements&lt;/span&gt;

&lt;span class="c1"&gt;# parse_requirements() returns generator of pip.req.InstallRequirement objects&lt;/span&gt;
&lt;span class="n"&gt;install_reqs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_requirements&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;requirements.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hack&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# reqs is a list of requirements&lt;/span&gt;
&lt;span class="c1"&gt;# e.g. [&amp;#39;django==1.5.1&amp;#39;, &amp;#39;mezzanine==1.4.6&amp;#39;]&lt;/span&gt;
&lt;span class="n"&gt;reqs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ir&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;install_reqs&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
	&lt;span class="n"&gt;install_requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reqs&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Author of answer by link above doesn't add a line in answer:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But you need to add it.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="requirementstxt-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.6.3. requirements.txt&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://pip.readthedocs.io/en/1.1/requirements.html" target="_blank"&gt;Add list of your dependencies&lt;/a&gt; to &lt;em&gt;requirements.txt&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="manifestin"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;9.6.4. MANIFEST.in&lt;/h4&gt;
&lt;p&gt;Add a line to &lt;em&gt;MANIFEST.in&lt;/em&gt; file:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;include requirements.txt
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If no, &lt;a href="https://stackoverflow.com/q/26319101/5951529" target="_blank"&gt;users can't install your package&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="pyroma"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;9.7. pyroma&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/pyroma/" target="_blank"&gt;pyroma&lt;/a&gt; — PyPI configuration validator.&lt;/p&gt;
&lt;p&gt;If you set all your configuration files, run command in root directory of your Python module:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pyroma .
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You need get 10/10 final rating, example:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pyroma .
------------------------------
Checking .
Registered VCS backend: git
Registered VCS backend: hg
Registered VCS backend: svn
Registered VCS backend: bzr
Found erichek
------------------------------
Final rating: &lt;span class="m"&gt;10&lt;/span&gt;/10
Your cheese is so fresh most people think it&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s a cream: Mascarpone
------------------------------
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If no 10/10, please, see pyroma messages and try fix your package.&lt;/p&gt;
&lt;p&gt;&lt;a id="testpypi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;10. TestPyPI&lt;/h2&gt;
&lt;p&gt;&lt;a id="what-is-testpypi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.1. What is TestPyPI&lt;/h3&gt;
&lt;p&gt;If you publish your package first time or not sure that everything is doing right, I recommend at first publish package to &lt;a href="https://test.pypi.org/" target="_blank"&gt;TestPyPI&lt;/a&gt;. TestPyPI — is a service, where you can test uploading, downloading and display your package on PyPI site before you share package to PyPI.&lt;/p&gt;
&lt;p&gt;&lt;a id="registration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.2. Registration&lt;/h3&gt;
&lt;p&gt;Please, register on &lt;a href="https://testpypi.python.org" target="_blank"&gt;TestPyPI&lt;/a&gt; and &lt;a href="https://pypi.python.org/pypi" target="_blank"&gt;PyPI&lt;/a&gt; sites.&lt;/p&gt;
&lt;p&gt;It would be nice, if you will use same username and password for both sites, that &lt;a href="#twine-settings"&gt;Twine&lt;/a&gt; works correct.&lt;/p&gt;
&lt;p&gt;&lt;a id="twine-settings"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.3. Twine settings&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/pypa/twine#options" target="_blank"&gt;Add environment variables&lt;/a&gt;
&lt;em&gt;TWINE_USERNAME&lt;/em&gt; and &lt;em&gt;TWINE_PASSWORD&lt;/em&gt; with values — your PyPI and TestPyPI username and password.&lt;/p&gt;
&lt;p&gt;See, how you can add environment variables for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/a/58828/582218" target="_blank"&gt;UNIX&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://superuser.com/a/79614/572069" target="_blank"&gt;Windows&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;Also &lt;a href="http://peterdowns.com/posts/first-time-with-pypi.html" target="_blank"&gt;you can add&lt;/a&gt; your username and password to &lt;em&gt;.pypirc&lt;/em&gt; file, but it &lt;a href="https://packaging.python.org/tutorials/distributing-packages/#create-an-account" target="_blank"&gt;not recommended&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="build-package"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.4. Build package&lt;/h3&gt;
&lt;p&gt;Print in your terminal:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python setup.py bdist_wheel
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;&lt;a href="http://peterdowns.com/posts/first-time-with-pypi.html" target="_blank"&gt;&lt;em&gt;python setup.py register&lt;/em&gt;&lt;/a&gt; &lt;a href="https://packaging.python.org/tutorials/distributing-packages/#uploading-your-project-to-pypi" target="_blank"&gt;is obsolete method&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition info"&gt;
&lt;p class="admonition-title"&gt;Info&lt;/p&gt;
&lt;p&gt;If by some reasons you don't want use Wheels, &lt;a href="https://packaging.python.org/tutorials/distributing-packages/#source-distributions" target="_blank"&gt;you can build your package&lt;/a&gt;, use command &lt;code class="SashaInlineHighlight"&gt;python setup.py sdist&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="publish-to-testpypi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.5. Publish to TestPyPI&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://packaging.python.org/guides/using-testpypi/#using-testpypi-with-twine" target="_blank"&gt;Enter in your terminal&lt;/a&gt;:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;twine upload --repository-url https://test.pypi.org/legacy/ dist/*
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If no errors in your configuration, package must successful upload to TestPyPI.&lt;/p&gt;
&lt;div class="admonition bug"&gt;
&lt;p class="admonition-title"&gt;Bug&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/pypa/packaging-problems/issues/74" target="_blank"&gt;Known bug&lt;/a&gt; at February 2018 — in PyPI and TestPyPI you never can't overwrite specific version of your package, even if you delete your package. I.e., for example, you publish to PyPI or TestPyPI version &lt;em&gt;4.14.7&lt;/em&gt; of your package &lt;em&gt;mypackage&lt;/em&gt; → you delete &lt;em&gt;mypackage&lt;/em&gt; from PyPI and/or TestPyPI → you can't upload &lt;em&gt;4.14.7&lt;/em&gt; version of &lt;em&gt;mypackage&lt;/em&gt; again.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="visit-testpypi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.6. Visit TestPyPI&lt;/h3&gt;
&lt;p&gt;After uploading visit 2 pages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;https://testpypi.python.org/pypi/&amp;lt;your_package&amp;gt;&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code class="SashaInlineHighlight"&gt;https://test.pypi.org/project/&amp;lt;your_package&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Examples for Erichek at February 2018:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://test.pypi.org/project/erichek" target="_blank"&gt;https://test.pypi.org/project/erichek&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Erichek TestPyPI" src="https://i.imgur.com/WW0M2Io.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Erichek TestPyPI 2" src="https://i.imgur.com/r5kIabM.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://testpypi.python.org/pypi/erichek" target="_blank"&gt;https://testpypi.python.org/pypi/erichek&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Erichek TestPyPI Python" src="https://i.imgur.com/FDXRBtv.png"&gt;&lt;/p&gt;
&lt;p&gt;If the result suits you, in next step install package, that you upload, use virtual environment.&lt;/p&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;You can't find your package, if you use search form on &lt;a href="https://test.pypi.org" target="_blank"&gt;https://test.pypi.org&lt;/a&gt; or &lt;a href="https://pypi.org" target="_blank"&gt;https://pypi.org&lt;/a&gt;. &lt;a href="https://github.com/pypa/warehouse/issues/2899#issuecomment-364150430" target="_blank"&gt;The search indexes are not immediately updated, it may take ~24 hours for a new package or deleted package to appear in a search&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;On &lt;a href="https://testpypi.python.org" target="_blank"&gt;https://testpypi.python.org&lt;/a&gt; can't show last version of your package. That fix it, login at &lt;a href="https://testpypi.python.org" target="_blank"&gt;https://testpypi.python.org&lt;/a&gt; → visit &lt;code class="SashaInlineHighlight"&gt;https://testpypi.python.org/pypi?%3Aaction=pkg_edit&amp;amp;name=&amp;lt;your_package&amp;gt;&lt;/code&gt; (&lt;a href="https://testpypi.python.org/pypi?%3Aaction=pkg_edit&amp;amp;name=erichek" target="_blank"&gt;https://testpypi.python.org/pypi?%3Aaction=pkg_edit&amp;amp;name=erichek&lt;/a&gt; for Erichek) → &lt;a href="https://i.imgur.com/bGjKHzS.png" target="_blank"&gt;set &lt;em&gt;Hide? No&lt;/em&gt;&lt;/a&gt; for latest version.&lt;/p&gt;
&lt;p&gt;If you have this problem for &lt;a href="https://pypi.python.org" target="_blank"&gt;https://pypi.python.org&lt;/a&gt;, make same actions.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="virtualenv"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;10.7. virtualenv&lt;/h3&gt;
&lt;p&gt;I recommend install your TestPyPI package, use virtual environment.&lt;/p&gt;
&lt;p&gt;&lt;a id="why-virtual-environment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;10.7.1. Why virtual environment?&lt;/h4&gt;
&lt;p&gt;Citation from &lt;a href="https://www.apress.com/us/book/9781484222409" target="_blank"&gt;Pro Python Best Practices&lt;/a&gt; book:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Virtualenv is like building a moat around the house. It prevents a fire from spreading — in both directions. Likewise, a virtual environment prevents that Python projects interfere with each other.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="virtualenv" src="https://i.imgur.com/fRISif0.png"&gt;&lt;/p&gt;
&lt;p&gt;Reasons of use virtual environment for TestPyPI installation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You can have bugs in your package. Bugs may have a negative impact of your environment. If you will use virtual environment, these bugs does not affect your global Python environment.&lt;/li&gt;
&lt;li&gt;You can have some globally dependencies in your environment, but users of your package may haven't them. If you use virtual environment, you see, how your package will install and works without, possibly, pre-installed global dependencies on your machine.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="using-virtualenv-and-virtualenvwrapper"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;10.7.2. Using virtualenv and virtualenvwrapper&lt;/h4&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;If you on Windows, please, use &lt;a href="https://conemu.github.io/en/Delusions.html#delusion-2" target="_blank"&gt;standard Windows console&lt;/a&gt; for correct virtualenvwrapper-win works or use plugin for your preferred terminal. You can't use command lines command from this section in &lt;a href="https://pypi.python.org/pypi/virtualenvwrapper-win" target="_blank"&gt;PowerShell&lt;/a&gt; or &lt;a href="https://github.com/FarGroup/FarManager/issues/23" target="_blank"&gt;Far Manager&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Open terminal in any directory. Run these commands:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\Users\SashaChernykh&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;mkvirtualenv erichekenv&lt;/span&gt;
Using base prefix &amp;#39;c:\\python36&amp;#39;
New python executable in C:\Users\SashaChernykh\Envs\erichekenv\Scripts\python.exe
Installing setuptools, pip, wheel...done.

&lt;span class="p"&gt;(&lt;/span&gt;erichekenv&lt;span class="p"&gt;)&lt;/span&gt; C:\Users\SashaChernykh&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;toggleglobalsitepackages

	Disabled global site-packages
&lt;span class="p"&gt;(&lt;/span&gt;erichekenv&lt;span class="p"&gt;)&lt;/span&gt; C:\Users\SashaChernykh&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;pip install --extra-index-url https://test.pypi.org/simple/ erichek
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;erichekenv&lt;/em&gt; — name of your virtual environment; you can use any name instead of &lt;em&gt;erichek&lt;/em&gt;, if virtual environment with this name not already exist;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;erichek&lt;/em&gt; — name of your package; use real name of your package instead of &lt;em&gt;erichek&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/a/34561435/5951529" target="_blank"&gt;Use &lt;em&gt;--extra-index-url&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://packaging.python.org/guides/using-testpypi/#using-testpypi-with-pip" target="_blank"&gt;not &lt;em&gt;--index-url&lt;/em&gt;&lt;/a&gt; command line argument for correct dependencies installation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;Can take ~10 minutes, before you can install last version of your package. For example, you upload &lt;em&gt;4.14.7&lt;/em&gt; version your package &lt;em&gt;mypackage&lt;/em&gt; to TestPyPI → you print in a terminal &lt;code class="SashaInlineHighlight"&gt;pip install --extra-index-url https://test.pypi.org/simple/ mypackage==4.14.7&lt;/code&gt; → you can get an error:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Could not find a version that satisfies the requirement &lt;span class="nv"&gt;mypackage&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.14.7 &lt;span class="o"&gt;(&lt;/span&gt;from versions: &lt;span class="m"&gt;4&lt;/span&gt;.14.6&lt;span class="o"&gt;)&lt;/span&gt;
No matching distribution found &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;mypackage&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.14.7
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You may need wait ~10 minutes, that 4.14.7 version index on TestPyPI. You can have a similar problem for PyPI.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="checking"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;10.7.3. Checking&lt;/h4&gt;
&lt;p&gt;If you can't have bugs in installation process, check, that you package works correct. For example, Erichek check, contains errors in &lt;em&gt;.txt&lt;/em&gt; files in a folder or no. I run &lt;em&gt;erichek&lt;/em&gt; console command.&lt;/p&gt;
&lt;p&gt;If error in one of text file:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\ErichekExamples&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;erichek&lt;/span&gt;
[2018-02-08 08:49:43.058353] NOTICE: eric_encoding logbook: All files in Windows-1251 encoding
[2018-02-08 08:49:43.060355] NOTICE: eric_body logbook: All files contains &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;body&amp;gt;
[2018-02-08 08:49:43.062358] NOTICE: eric_asterisks logbook: All needest lines contains asterisks
[2018-02-08 08:49:43.063357] ERROR: eric_head logbook: Air_crashes.txt not contains «Постоянный адрес пакета:»
[2018-02-08 08:49:43.064359] ERROR: eric_head logbook: One or more packages not contains one or more head data. Please, add correct head data to your package.
[2018-02-08 08:49:43.064359] ERROR: summary logbook: You have errors in your packages. Please, fix them.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If all &lt;em&gt;.txt&lt;/em&gt; files correct:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;C&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;\ErichekExamples&lt;/span&gt;&lt;span class="c1"&gt;&amp;gt;erichek&lt;/span&gt;
[2018-02-08 08:51:23.840987] NOTICE: eric_encoding logbook: All files in Windows-1251 encoding
[2018-02-08 08:51:23.841997] NOTICE: eric_body logbook: All files contains &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;body&amp;gt;
[2018-02-08 08:51:23.843991] NOTICE: eric_asterisks logbook: All needest lines contains asterisks
[2018-02-08 08:51:23.844992] NOTICE: eric_head logbook: All files contains correct head data
[2018-02-08 08:51:23.844992] NOTICE: summary logbook: Congratulations! You haven&amp;#39;t errors in your packages!
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Erichek works as expected.&lt;/p&gt;
&lt;p&gt;After succsessful checking &lt;a href="https://github.com/davidmarble/virtualenvwrapper-win/#main-commands" target="_blank"&gt;you can remove&lt;/a&gt; your virtual environment (&lt;em&gt;erichekenv&lt;/em&gt; in example):&lt;/p&gt;
&lt;!-- [NOTE] Plain text lexer:
http://pygments.org/docs/lexers/#pygments.lexers.special.TextLexer --&gt;

&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(erichekenv) C:\Users\SashaChernykh&amp;gt;rmvirtualenv erichekenv

	Deleted C:\Users\SashaChernykh\Envs\erichekenv

C:\Users\SashaChernykh&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a id="pypi"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;11. PyPI&lt;/h2&gt;
&lt;p&gt;If all actions from &lt;a href="#testpypi"&gt;TestPyPI section&lt;/a&gt; success for you, you can publish your package to PyPI and then install it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;change version in your &lt;em&gt;setup.cfg&lt;/em&gt; file (it must be &lt;a href="https://semver.org/" target="_blank"&gt;semver&lt;/a&gt;-compatible);&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in root folder of your package open terminal and print:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python setup.py bdist_wheel &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; twine upload dist/*
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;visit &lt;code class="SashaInlineHighlight"&gt;https://pypi.python.org/pypi/&amp;lt;your_package&amp;gt;&lt;/code&gt; and &lt;code class="SashaInlineHighlight"&gt;https://pypi.org/project/&amp;lt;your_package&amp;gt;&lt;/code&gt;, as you &lt;a href="#visit-testpypi"&gt;visit TestPyPI&lt;/a&gt; and check, is everything okay;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;install your package, use pip:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install &amp;lt;your_package&amp;gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;check, that your package works correct &lt;a href="#checking"&gt;as in previous section&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If all okay, &lt;strong&gt;congratulations! You successful publish your package to PyPI!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Congratulations" src="https://i.imgur.com/4cvn8jX.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="updating"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;12. Updating&lt;/h2&gt;
&lt;p&gt;That update your package in PyPI:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make new changes,&lt;/li&gt;
&lt;li&gt;Make same actions as in &lt;a href="#pypi"&gt;section above&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="automatic-updating-release-and-changelog"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;13. Automatic updating, release and changelog&lt;/h2&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;In this article I wrote not detailed. If you want to read details, how it worked, see &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package" target="_blank"&gt;my another article&lt;/a&gt;. I recommend read it before making actions from this section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;I recommend in first do actions from this section for test project, not real. Argumentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You or I can make a typo(s);&lt;/li&gt;
&lt;li&gt;Differences in my and your environment;&lt;/li&gt;
&lt;li&gt;Different versions of tools from this article can do another behavior, &lt;a href="https://github.com/webpro/release-it/issues/233" target="_blank"&gt;example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a id="demonstration-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;13.1. Demonstration&lt;/h3&gt;
&lt;p&gt;I enter command to the terminal:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;release-it -n -V
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I get &lt;a href="https://github.com/Kristinita/Erichek/commit/be58c1d53bbc8aeb764807463b0db159b59200f6" target="_blank"&gt;behavior&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All commits description add to &lt;em&gt;CHANGELOG.md&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Changelog" src="https://i.imgur.com/pmePvzQ.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New release &lt;a href="https://github.com/Kristinita/Erichek/releases/tag/0.2.0" target="_blank"&gt;publish to GitHub&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="New release" src="https://i.imgur.com/fiMNQAw.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Version updates in &lt;em&gt;setup.cfg&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Version in setup.cfg" src="https://i.imgur.com/4C1jnLm.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New version of Erichek publish to PyPI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want to have same behavior, read on.&lt;/p&gt;
&lt;p&gt;&lt;a id="features-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;13.2. Features&lt;/h3&gt;
&lt;p&gt;See &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#features" target="_blank"&gt;these features&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="limitations-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;13.3. Limitations&lt;/h3&gt;
&lt;p&gt;See &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#limitations" target="_blank"&gt;these limitations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="installation-and-setting-up"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;13.4. Installation and setting-up&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;you need to install all from &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#installation" target="_blank"&gt;this section&lt;/a&gt; except &lt;em&gt;tee&lt;/em&gt;, &lt;em&gt;cat&lt;/em&gt;, &lt;em&gt;mv&lt;/em&gt; and &lt;em&gt;js-beautify&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;please, follow &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#github-token" target="_blank"&gt;these&lt;/a&gt;, &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#upstream-branch" target="_blank"&gt;these&lt;/a&gt; and &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#changelogmd" target="_blank"&gt;these&lt;/a&gt; instructions;&lt;/li&gt;
&lt;li&gt;&lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#packagejson" target="_blank"&gt;create a file &lt;em&gt;package.json&lt;/em&gt;&lt;/a&gt; in root folder of your repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="release-itjson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;13.4.1. .release-it.json&lt;/h4&gt;
&lt;p&gt;Create a file &lt;em&gt;.release-it.json&lt;/em&gt; in root folder of your repository with content:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;buildCommand&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;changelog -u https:\/\/${repo.host}\/${repo.repository} -f CHANGELOG.md &amp;amp;&amp;amp; sed -i &amp;#39;s\/^version = .*$\/version = ${version}\/g&amp;#39; setup.cfg &amp;amp;&amp;amp; python setup.py bdist_wheel &amp;amp;&amp;amp; twine upload dist\/*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;changelogCommand&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;changelog -f -&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;github&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;release&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;tokenRef&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GITHUB_TOKEN&amp;quot;&lt;/span&gt;
	&lt;span class="p"&gt;},&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;npm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
		&lt;span class="nt"&gt;&amp;quot;publish&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
	&lt;span class="p"&gt;},&lt;/span&gt;
	&lt;span class="nt"&gt;&amp;quot;safeBump&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="SashaInlineHighlight"&gt;sed -i &amp;#39;s\/^version = .*$\/version = ${version}\/g&amp;#39; setup.cfg&lt;/code&gt; — command for replacing version in your &lt;em&gt;setup.cfg&lt;/em&gt; to the newest, see &lt;a href="https://askubuntu.com/a/20416/582218" target="_blank"&gt;find and replace via sed&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Version in setup.cfg" src="https://i.imgur.com/4C1jnLm.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="SashaInlineHighlight"&gt;python setup.py bdist_wheel &amp;amp;&amp;amp; twine upload dist\/*&lt;/code&gt; — &lt;a href="#pypi"&gt;build and publish&lt;/a&gt; your package.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Kristinita/Erichek/blob/master/.release-it.json" target="_blank"&gt;In &lt;em&gt;.release-it.json&lt;/em&gt; of real Erichek repository&lt;/a&gt; I add also next text:&lt;/p&gt;
&lt;div class="SashaBlockHighlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;sed&lt;/span&gt; &lt;span class="err"&gt;-i&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;s\/^VERSION&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.*\&amp;quot;$\/VERSION = \&amp;quot;${version}\&amp;quot;\/g&amp;#39; \&amp;quot;erichek\/eric_config.py\&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It change a version in &lt;em&gt;eric_config.py&lt;/em&gt; file, that command &lt;code class="SashaInlineHighlight"&gt;erichek --version&lt;/code&gt; works correct.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Version in eric_config.py" src="https://i.imgur.com/xMrSbew.png"&gt;&lt;/p&gt;
&lt;p&gt;If you don't want to have this behavior, please, do not add this text to your &lt;em&gt;.release-it.json&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;See &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#release-itjson-1" target="_blank"&gt;here&lt;/a&gt;, if you want to know details about another parts of &lt;em&gt;.release-it.json&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="usage"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;13.5. Usage&lt;/h3&gt;
&lt;p&gt;See &lt;a href="Fastest-way-to-add-new-version-of-Sublime-Text-3-package#usage" target="_blank"&gt;usage instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="testing-environment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;14. Testing environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10 Enterprise LTSB 64-bit EN,&lt;/li&gt;
&lt;li&gt;Python 3.6.4,&lt;/li&gt;
&lt;li&gt;setuptools 38.4.1,&lt;/li&gt;
&lt;li&gt;pip 9.0.1,&lt;/li&gt;
&lt;li&gt;Twine 1.9.1,&lt;/li&gt;
&lt;li&gt;Wheel 0.30.0,&lt;/li&gt;
&lt;li&gt;virtualenv 15.1.0,&lt;/li&gt;
&lt;li&gt;virtualenvwrapper-win 1.2.5,&lt;/li&gt;
&lt;li&gt;pyroma 2.3,&lt;/li&gt;
&lt;li&gt;Node.js 9.4.0,&lt;/li&gt;
&lt;li&gt;git 2.16.0.windows.2,&lt;/li&gt;
&lt;li&gt;release-it 7.0.0,&lt;/li&gt;
&lt;li&gt;changelog 1.7.0,&lt;/li&gt;
&lt;li&gt;sed (GNU sed) 4.2.2.&lt;/li&gt;
&lt;/ul&gt;</content><category term="it-articles"></category><category term="python"></category><category term="pypi"></category><category term="release"></category></entry><entry><title>typo-reporter</title><link href="https://kristinita.ru/IT-articles/typo-reporter.html" rel="alternate"></link><published>2018-04-20T05:07:18+03:00</published><updated>2018-04-20T05:07:18+03:00</updated><author><name>Sasha Chernykh</name></author><id>tag:kristinita.ru,2018-04-20:/IT-articles/typo-reporter.html</id><summary type="html">&lt;p&gt;Features, problems and it solutions, that not described in official typo-reporter Readme. &lt;br&gt;&lt;br&gt; &lt;img alt="English typo-reporter form" src="https://i.imgur.com/U8pIw0a.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;!-- MarkdownTOC --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demonstration"&gt;Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#relevance"&gt;Relevance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparison"&gt;Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-formid"&gt;Getting formId&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mail-forwarding"&gt;Mail forwarding&lt;/a&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href="#check-mail-forwarding"&gt;Check mail forwarding&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;&lt;a id="overview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1. Overview&lt;/h2&gt;
&lt;p&gt;In this article I wrote typo-reporter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;features,&lt;/li&gt;
&lt;li&gt;possibly problems and it solutions,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;that not described in &lt;a href="https://www.npmjs.com/package/typo-reporter" target="_blank"&gt;official typo-reporter Readme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a id="demonstration"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2. Demonstration&lt;/h2&gt;
&lt;p&gt;You can try use typo-reporter directly on this web page. Usage instructions see on &lt;a href="https://www.npmjs.com/package/typo-reporter" target="_blank"&gt;typo-reporter description&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;English form example:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="English" src="https://i.imgur.com/U8pIw0a.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How does a webmaster see a new report:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="New report" src="https://i.imgur.com/jIik44n.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;E-mail message for webmaster:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="typo-reporter mail" src="https://i.imgur.com/ZQdakQj.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Russian form example:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Russian" src="https://i.imgur.com/lYPZMGU.png"&gt;&lt;/p&gt;
&lt;p&gt;Styles, that I use for form in examples above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristinita/KristinitaPelican/blob/master/themes/sashapelican/static/stylus/script-colors/typo-reporter/typo-reporter.styl" target="_blank"&gt;Stylus&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kristinita/Kristinita.github.io/blob/master/theme/css/script-colors/typo-reporter/typo-reporter.css" target="_blank"&gt;Compiled CSS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="relevance"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3. Relevance&lt;/h2&gt;
&lt;p&gt;This article is relevant for March 2018. In the future, the data in this article may be obsolete.&lt;/p&gt;
&lt;p&gt;&lt;a id="limitations"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;4. Limitations&lt;/h2&gt;
&lt;p&gt;typo-reporter limitations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Works for PC, not for mobile devices.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That use typo-reporter on your site you need to have:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;site, that support custom JavaScript and CSS inserting (some &lt;a href="https://websitesetup.org/website-builders/" target="_blank"&gt;website builders&lt;/a&gt; don't support this),&lt;/li&gt;
&lt;li&gt;Google account.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="comparison"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;5. Comparison&lt;/h2&gt;
&lt;p&gt;I use typo-reporter, not &lt;a href="https://orphus.ru/en/" target="_blank"&gt;Orphus&lt;/a&gt; or another alternatives, because typo-reporter:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open source,&lt;/li&gt;
&lt;li&gt;Active maintained (&lt;a href="http://tarampampam.github.io/jquery.textmistake/" target="_blank"&gt;jquery.textmistake&lt;/a&gt; project &lt;a href="https://github.com/tarampampam/jquery.textmistake" target="_blank"&gt;closed&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/psmb/typo-reporter/issues" target="_blank"&gt;Have technical support&lt;/a&gt; (&lt;a href="https://orphus.ru/community/" target="_blank"&gt;Orphus community&lt;/a&gt; spammed),&lt;/li&gt;
&lt;li&gt;Support CDN — you need paste to your web page &lt;code class="SashaInlineHighlight"&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://npmcdn.com/typo-reporter/lib/TypoReporter.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt; (&lt;a href="https://webmasters.stackexchange.com/a/92103/71131" target="_blank"&gt;CDN vs. local files&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a id="getting-formid"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;6. Getting formId&lt;/h2&gt;
&lt;div class="admonition caution"&gt;
&lt;p class="admonition-title"&gt;Caution&lt;/p&gt;
&lt;p&gt;If you try get &lt;em&gt;formId&lt;/em&gt; use &lt;a href="https://productforums.google.com/forum/#!topic/docs/eoPN9F6KTs4" target="_blank"&gt;this method&lt;/a&gt;, typo-reporter &lt;a href="https://github.com/psmb/typo-reporter/issues/4" target="_blank"&gt;will not work&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/typo-reporter#create-a-target-google-form-to-gather-feedback" target="_blank"&gt;Create your spreadsheet&lt;/a&gt; → &lt;em&gt;Form&lt;/em&gt; → &lt;em&gt;Edit form&lt;/em&gt; → &lt;em&gt;Send&lt;/em&gt; → click to link icon → copy link below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="formId link" src="https://i.imgur.com/cr8JNqT.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For&lt;/strong&gt; link:&lt;/p&gt;
&lt;p&gt;    copy symbols between &lt;em&gt;/e/&lt;/em&gt; and &lt;em&gt;/viewform&lt;/em&gt; — that's what it is your &lt;em&gt;formId&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;your link — &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfu5tnuHYKNPjH0n1fR9EmWDHwlFESzJj7JQFu_O5IS8G5R2A/viewform?usp=sf_link" target="_blank"&gt;https://docs.google.com/forms/d/e/1FAIpQLSfu5tnuHYKNPjH0n1fR9EmWDHwlFESzJj7JQFu_O5IS8G5R2A/viewform?usp=sf_link&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;your formId — &lt;em&gt;1FAIpQLSfu5tnuHYKNPjH0n1fR9EmWDHwlFESzJj7JQFu_O5IS8G5R2A&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="mail-forwarding"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;7. Mail forwarding&lt;/h2&gt;
&lt;p&gt;I don't use GMail, because GMail move to Spam non-spam messages more often than another mail services (&lt;a href="https://productforums.google.com/forum/#!msg/gmail-ru/ydfMTF7IUec/4cJLmnSUFAAJ" target="_blank"&gt;example&lt;/a&gt;). But “&lt;a href="https://productforums.google.com/d/msg/docs/YJ09uwy-pWU/g_1AJTXZN6QJ" target="_blank"&gt;notifications are only sent to the email address associated with your Google account&lt;/a&gt;”. That solve this problem I use &lt;a href="https://support.google.com/mail/answer/10957?hl=en" target="_blank"&gt;mail forwarding&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; filter:&lt;/p&gt;
&lt;p&gt;In your GMail &lt;a href="https://support.google.com/mail/answer/6579?hl=en" target="_blank"&gt;create a filter&lt;/a&gt; with parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;From&lt;/em&gt; — &lt;em&gt;&lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#110;&amp;#111;&amp;#116;&amp;#105;&amp;#102;&amp;#121;&amp;#64;&amp;#103;&amp;#111;&amp;#111;&amp;#103;&amp;#108;&amp;#101;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#110;&amp;#111;&amp;#116;&amp;#105;&amp;#102;&amp;#121;&amp;#64;&amp;#103;&amp;#111;&amp;#111;&amp;#103;&amp;#108;&amp;#101;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Has the words&lt;/em&gt; — name of your spreadsheet;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Forward it to:&lt;/em&gt; — your forwarding e-mail;&lt;/li&gt;
&lt;li&gt;check &lt;em&gt;Never Send it to Spam&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Filter 1" src="https://i.imgur.com/Nq0wB3c.png"&gt;
&lt;img alt="Filter 2" src="https://i.imgur.com/G7YzdLi.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a id="check-mail-forwarding"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;7.1. Check mail forwarding&lt;/h3&gt;
&lt;p&gt;After filter creating I recommend to make sure, that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;typo reports forwarded,&lt;/li&gt;
&lt;li&gt;another e-mail messages not forwarded.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt; testing:&lt;/p&gt;
&lt;p&gt;
&lt;div class="justtable"&gt;
    &lt;table&gt;
        &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Send&lt;/th&gt;
            &lt;th&gt;Expected behavior for your forwarding e-mail&lt;/th&gt;
        &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
            &lt;tr&gt;
                &lt;td&gt;Example typo report on your site&lt;/td&gt;
                &lt;td&gt;Get &lt;a href="#demonstration"&gt;similar message&lt;/a&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
                &lt;td&gt;Any another message from another e-mail to your GMail mail&lt;/td&gt;
                &lt;td&gt;Don't get any message&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;&lt;/p&gt;</content><category term="it-articles"></category><category term="spelling"></category></entry></feed>