{
  "name": "html-table-of-contents",
  "version": "0.1.1",
  "main": "./src/html-table-of-contents.js",
  "description": "Generates a table of contents for your HTML document based on the headings present.",
  "keywords": [
    "html",
    "typesetting",
    "atropa"
  ],
  "homepage": "https://github.com/matthewkastor/html-table-of-contents/",
  "bugs": {
    "url": "https://github.com/matthewkastor/html-table-of-contents/issues"
  },
  "author": {
    "name": "Matthew Kastor",
    "email": "matthewkastor@gmail.com",
    "url": "https://plus.google.com/100898583798552211130"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/matthewkastor/html-table-of-contents.git"
  },
  "engines": {
    "node": ">=0.8.14"
  },
  "readme": "#html-table-of-contents\n\nGenerates a table of contents for your HTML document based on the headings \npresent.\n\n## Where do I get it?\n\nYou can download it from github at \n[https://github.com/matthewkastor/html-table-of-contents](https://github.com/matthewkastor/html-table-of-contents) \nor, if you have node installed you can get it from npm\n\n`npm install html-table-of-contents`\n\n## Usage\n\nUsing this module in your browser is as simple as including it in your page \nand calling `htmlTableOfContents()` after the page has loaded.\n\nThe table of contents will be generated in the first element with the id of \n`toc`. It will consist of a series of sibling `div`'s whose class directly maps \nto the heading level of the heading it describes. By default there is no \nstyling done to the table of contents, to allow you to style it however you \nwish. This module comes with a css stylesheet which you can include in your \npage if you would like to. The provided stylesheet simply indents entries in \nthe table of contents based on the heading level in the document. Take a look \nat the stylesheet `html-table-of-contents.css`, in this module's root folder, \nto get an idea of how to access the table of contents entries if you wish to \ncreate your own stylesheet.\n\nIf you're using this module outside of a browser you will have to supply a \nreference to a dom document object, unless you've called it `document` and \nhave declared your document object globally. I did \nnot require any specific module for parsing the DOM, because there are a few \nout there and it would be rude of me to force you to use a specific one for \nsuch a simple function.\n\n### Generating a table of contents in Browser\n\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n    <head>\n        <title>\n            html-table-of-contents Example\n        </title>\n        <script src=\"./node_modules/html-table-of-contents/src/html-table-of-contents.js\"\n              type=\"text/javascript\">\n</script>\n        <link rel=\"stylesheet\"\n            type=\"text/css\"\n            href=\"./node_modules/html-table-of-contents/html-table-of-contents.css\" />\n    </head>\n    <body onload=\"htmlTableOfContents();\">\n        <p>\n            <b>Contents</b>\n        </p>\n\n        <div id=\"toc\">\n        </div>\n\n        <h1>\n            top heading 1\n        </h1>\n\n        <h2>\n            second heading\n        </h2>\n\n        <h1>\n            top heading 2\n        </h1>\n    </body>\n</html>\n```\n\n### Generating a table of contents in Node\n\n```\n// parse your html into a DOM Document using jsdom\n// or something https://npmjs.org/package/jsdom\n\nvar fs = require('fs'); \nvar jsdom = require(\"jsdom\").jsdom;\nvar htmlTableOfContents = require('html-table-of-contents');\n\nvar html = fs.readFileSync('example.html', 'utf8');\n// javascript written for the browser expects global\n// window and document objects\nvar document = global.document = jsdom(html, null, {\n    features: {\n        FetchExternalResources : false,\n        ProcessExternalResources : false\n    }\n});\nvar window = global.window = global.document.parentWindow;\n\nhtmlTableOfContents();\n// alternatively, if you've called the \n// document object something other than \n// document, you may supply it as the \n// first argument and everything will \n// work out fine.\n// htmlTableOfContents(nonstandardDocumentReference);\n\nconsole.log(document.documentElement.innerHTML);\n\n// Shazam. The document now contains a table of \n// contents you didn't have to write.\n```\n",
  "readmeFilename": "README.md",
  "_id": "html-table-of-contents@0.1.1",
  "dist": {
    "shasum": "72cb2baf56db3924c32b95ffd7cd4ad36bc1f253",
    "tarball": "https://registry.npmjs.org/html-table-of-contents/-/html-table-of-contents-0.1.1.tgz"
  },
  "_from": "html-table-of-contents@latest",
  "_npmVersion": "1.2.2",
  "_npmUser": {
    "name": "kastor",
    "email": "matthewkastor@gmail.com"
  },
  "maintainers": [
    {
      "name": "kastor",
      "email": "matthewkastor@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "72cb2baf56db3924c32b95ffd7cd4ad36bc1f253",
  "_resolved": "https://registry.npmjs.org/html-table-of-contents/-/html-table-of-contents-0.1.1.tgz"
}
